# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yinian Chin <yinian1992@live.com>, 2018
# wendi cao <651645601@qq.com>, 2020
# Lu <lu2github@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-18 00:49+0000\n"
"PO-Revision-Date: 2018-02-12 13:46+0000\n"
"Last-Translator: Lu <lu2github@gmail.com>, 2022\n"
"Language-Team: Chinese (China) (https://app.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/faq.rst:4
msgid "Sphinx FAQ"
msgstr "Sphinx常见问题解答"

#: ../../sphinx/doc/faq.rst:6
msgid ""
"This is a list of Frequently Asked Questions about Sphinx.  Feel free to "
"suggest new entries!"
msgstr "这是关于Sphinx的常见问题列表。欢迎提出新的建议！"

#: ../../sphinx/doc/faq.rst:10
msgid "How do I..."
msgstr "我该如何..."

#: ../../sphinx/doc/faq.rst:12
msgid "... create PDF files without LaTeX?"
msgstr "不用LaTeX创建pdf文件？"

#: ../../sphinx/doc/faq.rst:13
msgid ""
"`rinohtype`_ provides a PDF builder that can be used as a drop-in "
"replacement for the LaTeX builder."
msgstr "`rinohtype`а提供了一个PDF构建器，可以作为LaTeX构建器的直接替代品。"

#: ../../sphinx/doc/faq.rst:18
msgid "... get section numbers?"
msgstr "获取到节的数目？"

#: ../../sphinx/doc/faq.rst:19
msgid ""
"They are automatic in LaTeX output; for HTML, give a ``:numbered:`` option "
"to the :rst:dir:`toctree` directive where you want to start numbering."
msgstr "它们在LaTeX输出中是自动的；对于HTML，为：rst:方向：`toctree`指令，从中开始编号。"

#: ../../sphinx/doc/faq.rst:22
msgid "... customize the look of the built HTML files?"
msgstr "... 自定义生成的HTML文件的外观？"

#: ../../sphinx/doc/faq.rst:23
msgid "Use themes, see :doc:`/usage/theming`."
msgstr "使用主题，请参阅：doc:`/usage/theming`。"

#: ../../sphinx/doc/faq.rst:25
msgid "... add global substitutions or includes?"
msgstr "... 添加全局替换或包含？"

#: ../../sphinx/doc/faq.rst:26
msgid ""
"Add them in the :confval:`rst_prolog` or :confval:`rst_epilog` config value."
msgstr "将它们添加到：confval:`rst_prolog`或：confval:`rst_epilog`配置值中。"

#: ../../sphinx/doc/faq.rst:28
msgid "... display the whole TOC tree in the sidebar?"
msgstr "... 在侧边栏中显示整个目录树？"

#: ../../sphinx/doc/faq.rst:29
msgid ""
"Use the :data:`toctree` callable in a custom layout template, probably in "
"the ``sidebartoc`` block."
msgstr "在自定义布局模板中使用可调用的：data:`toctree'，可能在`sidebartoc``块中。"

#: ../../sphinx/doc/faq.rst:32
msgid "... write my own extension?"
msgstr "... 编写我自己的插件?"

#: ../../sphinx/doc/faq.rst:33
msgid "See the :ref:`extension-tutorials-index`."
msgstr ""

#: ../../sphinx/doc/faq.rst:35
msgid "... convert from my existing docs using MoinMoin markup?"
msgstr "... 使用MoinMoin标记从现有文档转换？"

#: ../../sphinx/doc/faq.rst:36
msgid ""
"The easiest way is to convert to xhtml, then convert `xhtml to "
"reStructuredText`_. You'll still need to mark up classes and such, but the "
"headings and code examples come through cleanly."
msgstr ""

#: ../../sphinx/doc/faq.rst:40
msgid ""
"For many more extensions and other contributed stuff, see the sphinx-"
"contrib_ repository."
msgstr "有关更多插件和其他贡献的内容，请参阅sphinx-contrib_u存储库。"

#: ../../sphinx/doc/faq.rst:48
msgid "Using Sphinx with..."
msgstr "用...使用sphinx"

#: ../../sphinx/doc/faq.rst:50
msgid "Read the Docs"
msgstr "阅读文档"

#: ../../sphinx/doc/faq.rst:51
msgid ""
"`Read the Docs <https://readthedocs.org>`_ is a documentation hosting "
"service based around Sphinx.  They will host sphinx documentation, along "
"with supporting a number of other features including version support, PDF "
"generation, and more. The `Getting Started`_ guide is a good place to start."
msgstr ""
"`阅读文档<https://readthedocs.org>`_是一个基于Sphinx的文档托管服务。他们将托管sphinx文档，同时支持许多其他功能，包括版本支持、PDF生成等。《入门指南》是一个很好的起点。"

#: ../../sphinx/doc/faq.rst:56
msgid "Epydoc"
msgstr "Epy文档"

#: ../../sphinx/doc/faq.rst:57
msgid ""
"There's a third-party extension providing an `api role`_ which refers to "
"Epydoc's API docs for a given identifier."
msgstr "有一个第三方插件提供了一个“api role”，它引用给定标识符的Epydoc的api文档。"

#: ../../sphinx/doc/faq.rst:60
msgid "Doxygen"
msgstr "编程辅助工具"

#: ../../sphinx/doc/faq.rst:61
msgid ""
"Michael Jones has developed a reStructuredText/Sphinx bridge to doxygen "
"called `breathe <https://github.com/breathe-doc/breathe/tree/master>`_."
msgstr ""

#: ../../sphinx/doc/faq.rst:64
msgid "SCons"
msgstr "SCons"

#: ../../sphinx/doc/faq.rst:65
msgid ""
"Glenn Hutchings has written a SCons build script to build Sphinx "
"documentation; it is hosted here: https://bitbucket-"
"archive.softwareheritage.org/projects/zo/zondo/sphinx-scons.html"
msgstr ""

#: ../../sphinx/doc/faq.rst:69
msgid "PyPI"
msgstr "PyPI"

#: ../../sphinx/doc/faq.rst:70
msgid ""
"Jannis Leidel wrote a `setuptools command <https://pypi.org/project/Sphinx-"
"PyPI-upload/>`_ that automatically uploads Sphinx documentation to the PyPI "
"package documentation area at https://pythonhosted.org/."
msgstr ""
"Jannis Leidel编写了一个`setuptools命令<https://pypi.org/project/Sphinx-pypi-"
"upload/>`_它会自动将Sphinx文档上载到位于的PyPI包文档区域https://pythonhosted.org/。"

#: ../../sphinx/doc/faq.rst:75
msgid "GitHub Pages"
msgstr "GitHub页面"

#: ../../sphinx/doc/faq.rst:76
msgid ""
"Please add :py:mod:`sphinx.ext.githubpages` to your project.  It allows you "
"to publish your document in GitHub Pages.  It generates helper files for "
"GitHub Pages on building HTML document automatically."
msgstr ""
"请添加：py:mod:`HubGitSphinx`你的项目。它允许您在GitHub页面中发布文档。它在自动生成HTML文档时为GitHub页面生成帮助文件。"

#: ../../sphinx/doc/faq.rst:80
msgid "MediaWiki"
msgstr "维基百科"

#: ../../sphinx/doc/faq.rst:81
msgid "See `sphinx-wiki`_, a project by Kevin Dunn."
msgstr ""

#: ../../sphinx/doc/faq.rst:85
msgid "Google Analytics"
msgstr "谷歌分析"

#: ../../sphinx/doc/faq.rst:86
msgid "You can use a custom ``layout.html`` template, like this:"
msgstr "你可以使用自定义``layout.html``模板，如下所示："

#: ../../sphinx/doc/faq.rst:119
msgid "Google Search"
msgstr "谷歌搜索"

#: ../../sphinx/doc/faq.rst:120
msgid ""
"To replace Sphinx's built-in search function with Google Search, proceed as "
"follows:"
msgstr "要将Sphinx的内置搜索功能替换为Google search，请执行以下操作："

#: ../../sphinx/doc/faq.rst:123
msgid ""
"Go to https://cse.google.com/cse/all to create the Google Search code "
"snippet."
msgstr "去https://cse.google.com/cse/all创建Google搜索代码片段。"

#: ../../sphinx/doc/faq.rst:126
msgid ""
"Copy the code snippet and paste it into ``_templates/searchbox.html`` in "
"your Sphinx project:"
msgstr "复制代码段并将其粘贴到模板中/searchbox.html``在你的Sphinx项目中："

#: ../../sphinx/doc/faq.rst:146
msgid ""
"Add ``searchbox.html`` to the :confval:`html_sidebars` configuration value."
msgstr "添加``searchbox.html``到：confval:`html_sidebars`配置值。"

#: ../../sphinx/doc/faq.rst:154
msgid "Sphinx vs. Docutils"
msgstr "Sphinx 和 Docutils"

#: ../../sphinx/doc/faq.rst:156
msgid ""
"tl;dr: *docutils* converts reStructuredText to multiple output formats. "
"Sphinx builds upon docutils to allow construction of cross-referenced and "
"indexed bodies of documentation."
msgstr ""
"tl；dr:*docutils*将structedText转换为多种输出格式。Sphinx构建在docutils之上，允许构建交叉引用和索引的文档体。"

#: ../../sphinx/doc/faq.rst:160
msgid ""
"`docutils`__ is a text processing system for converting plain text "
"documentation into other, richer formats. As noted in the `docutils "
"documentation`__, docutils uses *readers* to read a document, *parsers* for "
"parsing plain text formats into an internal tree representation made up of "
"different types of *nodes*, and *writers* to output this tree in various "
"document formats.  docutils provides parsers for one plain text format - "
"`reStructuredText`__ - though other, *out-of-tree* parsers have been "
"implemented including Sphinx's :doc:`Markdown parser </usage/markdown>`. On "
"the other hand, it provides writers for many different formats including "
"HTML, LaTeX, man pages, Open Document Format and XML."
msgstr ""
"`docutils是一个文本处理系统，用于将纯文本文档转换为其他更丰富的格式。如“docutils "
"documentation”中所述，docutils使用*readers*读取文档，*parsers*用于将纯文本格式解析为由不同类型的*节点*组成的内部树表示，而*writers*则使用*writers*以各种文档格式输出该树。docutils为一种纯文本格式提供了解析器-“reStructuredText”\\uuu尽管其他格式，*out-"
"of-tree*解析器已经实现，包括Sphinx的：doc:`Markdown parser 1 "
"`。另一方面，它为许多不同的格式提供了编写器，包括HTML、LaTeX、手册页、开放文档格式和XML。"

#: ../../sphinx/doc/faq.rst:171
msgid ""
"docutils exposes all of its functionality through a variety of `front-end "
"tools`__, such as ``rst2html``, ``rst2odt`` and ``rst2xml``. Crucially "
"though, all of these tools, and docutils itself, are concerned with "
"individual documents.  They don't support concepts such as cross-"
"referencing, indexing of documents, or the construction of a document "
"hierarchy (typically manifesting in a table of contents)."
msgstr ""
"docutils通过各种“前端工具”公开其所有功能，例如“rst2html”、“rst2odt”和“rst2xml”。但最关键的是，所有这些工具和docutil本身都与单个文档有关。文档的层次结构通常不支持文档的交叉引用。"

#: ../../sphinx/doc/faq.rst:178
msgid ""
"Sphinx builds upon docutils by harnessing docutils' readers and parsers and "
"providing its own :doc:`/usage/builders/index`. As a result, Sphinx wraps "
"some of the *writers* provided by docutils. This allows Sphinx to provide "
"many features that would simply not be possible with docutils, such as those"
" outlined above."
msgstr ""
"Sphinx通过利用docutils的读取器和解析器并提供自己的：doc:`/usage/builders/index`，在docutils的基础上构建。因此，Sphinx包装了docutils提供的一些*writers*。这使得Sphinx能够提供许多docutils无法提供的特性，比如上面概述的那些特性。"

#: ../../sphinx/doc/faq.rst:193
msgid "Epub info"
msgstr "Epub信息"

#: ../../sphinx/doc/faq.rst:195
msgid "The following list gives some hints for the creation of epub files:"
msgstr "下表给出了创建epub文件的一些提示："

#: ../../sphinx/doc/faq.rst:197
msgid ""
"Split the text into several files. The longer the individual HTML files are,"
" the longer it takes the ebook reader to render them.  In extreme cases, the"
" rendering can take up to one minute."
msgstr "把文本分成几个文件。单个HTML文件越长，电子书阅读器呈现它们的时间就越长。在极端情况下，渲染可能需要一分钟。"

#: ../../sphinx/doc/faq.rst:201
msgid "Try to minimize the markup.  This also pays in rendering time."
msgstr "尽量减少标记。这也会增加渲染时间。"

#: ../../sphinx/doc/faq.rst:203
msgid ""
"For some readers you can use embedded or external fonts using the CSS "
"``@font-face`` directive.  This is *extremely* useful for code listings "
"which are often cut at the right margin.  The default Courier font (or "
"variant) is quite wide and you can only display up to 60 characters on a "
"line.  If you replace it with a narrower font, you can get more characters "
"on a line.  You may even use `FontForge <https://fontforge.github.io/>`_ and"
" create narrow variants of some free font.  In my case I get up to 70 "
"characters on a line."
msgstr ""
"对于某些读者，可以使用CSS`@font "
"face``指令使用嵌入式或外部字体。这对于经常在右边空白处剪切的代码列表非常有用。默认的Courier字体（或变体）非常宽，一行最多只能显示60个字符。如果用更窄的字体替换它，可以在一行中获得更多字符。你甚至可以用FontForge<https://fontforge.github.io/>`_并创建一些自由字体的窄变体。在我的例子中，一行最多有70个字符。"

#: ../../sphinx/doc/faq.rst:212
msgid "You may have to experiment a little until you get reasonable results."
msgstr "在得到合理的结果之前，你可能要做一些实验。"

#: ../../sphinx/doc/faq.rst:214
msgid ""
"Test the created epubs. You can use several alternatives.  The ones I am "
"aware of are Epubcheck_, Calibre_, FBreader_ (although it does not render "
"the CSS), and Bookworm_.  For Bookworm, you can download the source from "
"https://code.google.com/archive/p/threepress and run your own local server."
msgstr ""
"测试创建的ePub。你可以使用几种选择。我知道的是Epubcheck、Calibre、fbreder（尽管它不呈现CSS）和bookmoom。对于Bookworm，您可以从https://code.google.com/archive/p/threepress运行自己的本地服务器。"

#: ../../sphinx/doc/faq.rst:219
msgid ""
"Large floating divs are not displayed properly. If they cover more than one "
"page, the div is only shown on the first page. In that case you can copy the"
" :file:`epub.css` from the ``sphinx/themes/epub/static/`` directory to your "
"local ``_static/`` directory and remove the float settings."
msgstr ""
"大的浮动div未正确显示。如果它们覆盖多个页面，则div只显示在第一页上。在这种情况下，您可以复制：文件：`电子邮箱.css`从“sphinx/themes/epub/static/``目录到本地的`u"
" static/``目录，并删除float设置。"

#: ../../sphinx/doc/faq.rst:225
msgid ""
"Files that are inserted outside of the ``toctree`` directive must be "
"manually included. This sometimes applies to appendixes, e.g. the glossary "
"or the indices.  You can add them with the :confval:`epub_post_files` "
"option."
msgstr ""
"必须手动包含在“toctree”指令之外插入的文件。这有时适用于附录，例如术语表或索引。您可以使用：confval:`epub_post_files`选项添加它们。"

#: ../../sphinx/doc/faq.rst:229
msgid ""
"The handling of the epub cover page differs from the reStructuredText "
"procedure which automatically resolves image paths and puts the images into "
"the ``_images`` directory.  For the epub cover page put the image in the "
":confval:`html_static_path` directory and reference it with its full path in"
" the :confval:`epub_cover` config option."
msgstr ""
"epub封面页的处理不同于recostructedText过程，后者自动解析图像路径并将图像放入“u "
"images”目录。对于epub封面页，请将图像放在：confval:`html_static_path`目录中，并在：confval:`epub_cover`"
" config选项中引用它的完整路径。"

#: ../../sphinx/doc/faq.rst:235
msgid ""
"kindlegen_ command can convert from epub3 resulting file to ``.mobi`` file "
"for Kindle. You can get ``yourdoc.mobi`` under ``_build/epub`` after the "
"following command:"
msgstr ""
"kindlegen_u命令可以将epub3生成的文件转换为Kindle的`.mobi``文件。你可以得到``你的医生.mobi``在以下命令后的“\\u"
" build/epub”下："

#: ../../sphinx/doc/faq.rst:244
msgid ""
"The kindlegen command doesn't accept documents that have section titles "
"surrounding ``toctree`` directive:"
msgstr "kindlegen命令不接受包含“toctree”指令的节标题的文档："

#: ../../sphinx/doc/faq.rst:259
msgid ""
"kindlegen assumes all documents order in line, but the resulting document "
"has complicated order for kindlegen::"
msgstr "kindlegen假设所有文档的顺序都是一行，但是生成的文档对kindlegen来说顺序很复杂："

#: ../../sphinx/doc/faq.rst:264
msgid "If you get the following error, fix your document structure:"
msgstr "如果你遇到了这些错误，请修复你的文件结构："

#: ../../sphinx/doc/faq.rst:280
msgid "Texinfo info"
msgstr "Texinfo信息"

#: ../../sphinx/doc/faq.rst:282
msgid ""
"There are two main programs for reading Info files, ``info`` and GNU Emacs."
"  The ``info`` program has less features but is available in most Unix "
"environments and can be quickly accessed from the terminal.  Emacs provides "
"better font and color display and supports extensive customization (of "
"course)."
msgstr ""
"有两个主要的程序用于读取Info文件，``Info``和gnuemacs。“info”程序的功能较少，但在大多数Unix环境中都可用，并且可以从终端快速访问。Emacs提供了更好的字体和颜色显示，并支持广泛的定制（当然）。"

#: ../../sphinx/doc/faq.rst:290
msgid "Displaying Links"
msgstr "展示链接"

#: ../../sphinx/doc/faq.rst:292
msgid ""
"One noticeable problem you may encounter with the generated Info files is "
"how references are displayed.  If you read the source of an Info file, a "
"reference to this section would look like::"
msgstr "在使用生成的信息文件时，您可能会遇到一个值得注意的问题，即引用的显示方式。如果您读取信息文件的源代码，对该节的引用将如下所示："

#: ../../sphinx/doc/faq.rst:298
msgid ""
"In the stand-alone reader, ``info``, references are displayed just as they "
"appear in the source.  Emacs, on the other-hand, will by default replace "
"``*note:`` with ``see`` and hide the ``target-id``.  For example:"
msgstr ""
"在独立阅读器“info”中，引用的显示方式与源代码中的显示方式相同。另一方面，Emacs在默认情况下会将“`*注意：`”替换为“see`”，并隐藏“target"
" id`”。例如："

#: ../../sphinx/doc/faq.rst:302
msgid ":ref:`texinfo-links`"
msgstr ":ref:`texinfo-links`"

#: ../../sphinx/doc/faq.rst:304
msgid ""
"One can disable generation of the inline references in a document with "
":confval:`texinfo_cross_references`.  That makes an info file more readable "
"with stand-alone reader (``info``)."
msgstr ""

#: ../../sphinx/doc/faq.rst:308
msgid ""
"The exact behavior of how Emacs displays references is dependent on the "
"variable ``Info-hide-note-references``.  If set to the value of ``hide``, "
"Emacs will hide both the ``*note:`` part and the ``target-id``.  This is "
"generally the best way to view Sphinx-based documents since they often make "
"frequent use of links and do not take this limitation into account.  "
"However, changing this variable affects how all Info documents are displayed"
" and most do take this behavior into account."
msgstr ""
"Emacs显示引用的确切行为取决于变量“Info hide note "
"references”。如果设置为“hide”的值，Emacs将同时隐藏“note:`”部分和“target "
"id`”。这通常是查看基于Sphinx的文档的最佳方法，因为它们经常使用链接，并且没有考虑到这个限制。但是，更改此变量会影响所有信息文档的显示方式，而且大多数文档都会将此行为考虑在内。"

#: ../../sphinx/doc/faq.rst:316
msgid ""
"If you want Emacs to display Info files produced by Sphinx using the value "
"``hide`` for ``Info-hide-note-references`` and the default value for all "
"other Info files, try adding the following Emacs Lisp code to your start-up "
"file, ``~/.emacs.d/init.el``."
msgstr ""
"如果希望Emacs显示Sphinx生成的信息文件，并使用“Info hide note "
"references”的“hide”值和所有其他信息文件的默认值，请尝试将以下Emacs "
"Lisp代码添加到启动文件“~/.Emacs.d”中/初始标高``."

#: ../../sphinx/doc/faq.rst:342
msgid "Notes"
msgstr "提示"

#: ../../sphinx/doc/faq.rst:344
msgid ""
"The following notes may be helpful if you want to create Texinfo files:"
msgstr "如果要创建Texinfo文件，以下注释可能会有所帮助："

#: ../../sphinx/doc/faq.rst:346
msgid "Each section corresponds to a different ``node`` in the Info file."
msgstr "每个部分对应于Info文件中的不同“node”。"

#: ../../sphinx/doc/faq.rst:348
msgid ""
"Colons (``:``) cannot be properly escaped in menu entries and xrefs. They "
"will be replaced with semicolons (``;``)."
msgstr "冒号（：）不能正确转义到”外部冒号“中。它们将被替换为分号（`；``）。"

#: ../../sphinx/doc/faq.rst:351
msgid ""
"Links to external Info files can be created using the somewhat official URI "
"scheme ``info``.  For example::"
msgstr "可以使用某种正式的URI方案“Info”创建指向外部信息文件的链接。例如：："

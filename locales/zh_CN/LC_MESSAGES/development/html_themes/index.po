# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# wendi cao <651645601@qq.com>, 2024
# YanJun Sun <zxvf6aj@sina.cn>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-24 00:49+0000\n"
"PO-Revision-Date: 2024-06-24 06:45+0000\n"
"Last-Translator: YanJun Sun <zxvf6aj@sina.cn>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/development/html_themes/index.rst:4
msgid "HTML theme development"
msgstr "HTML 主题开发"

#: ../../sphinx/doc/development/html_themes/index.rst:10
msgid ""
"This document provides information about creating your own theme. If you "
"simply wish to use a pre-existing HTML themes, refer to "
":doc:`/usage/theming`."
msgstr "本文档提供有关创建您自己的主题的信息。如果您只想使用预先存在的HTML主题，请参阅：doc:`/usage/themming`。"

#: ../../sphinx/doc/development/html_themes/index.rst:14
msgid ""
"Sphinx supports changing the appearance of its HTML output via *themes*.  A "
"theme is a collection of HTML templates, stylesheet(s) and other static "
"files. Additionally, it has a configuration file which specifies from which "
"theme to inherit, which highlighting style to use, and what options exist "
"for customizing the theme's look and feel."
msgstr ""
"Sphinx支持通过*themes*更改其HTML输出的外观。主题是HTML模板、样式表和其他静态文件的集合。此外，它还有一个配置文件，指定从哪个主题继承，使用哪种突出显示样式，以及自定义主题外观的选项。"

#: ../../sphinx/doc/development/html_themes/index.rst:20
msgid ""
"Themes are meant to be project-unaware, so they can be used for different "
"projects without change."
msgstr "主题是指不受项目影响的，因此它们可以用于不同的项目而无需更改。"

#: ../../sphinx/doc/development/html_themes/index.rst:25
msgid ""
"See :ref:`dev-extensions` for more information that may be helpful in "
"developing themes."
msgstr "更多有助于主题开发的信息请参阅 :ref:`dev-extensions`。"

#: ../../sphinx/doc/development/html_themes/index.rst:30
msgid "Creating themes"
msgstr "创建主题"

#: ../../sphinx/doc/development/html_themes/index.rst:32
msgid ""
"Themes take the form of either a directory or a zipfile (whose name is the "
"theme name), containing the following:"
msgstr "主题采用目录或zipfile（其名称为主题名称）的形式，包含以下内容："

#: ../../sphinx/doc/development/html_themes/index.rst:35
msgid ""
"Either a :file:`theme.toml` file (preferred) or a :file:`theme.conf` file."
msgstr ":file:`theme.toml` 文件（首选）或 :file:`theme.conf` 文件。"

#: ../../sphinx/doc/development/html_themes/index.rst:36
msgid "HTML templates, if needed."
msgstr "HTML模板，如果需要。"

#: ../../sphinx/doc/development/html_themes/index.rst:37
msgid ""
"A ``static/`` directory containing any static files that will be copied to "
"the output static directory on build.  These can be images, styles, script "
"files."
msgstr "“static/`”目录，其中包含将在生成时复制到输出静态目录的任何静态文件。这些可以是图像、样式、脚本文件。"

#: ../../sphinx/doc/development/html_themes/index.rst:41
msgid "Theme configuration (``theme.toml``)"
msgstr "主题配置（``theme.toml``）"

#: ../../sphinx/doc/development/html_themes/index.rst:43
msgid ""
"The :file:`theme.toml` file is a TOML_ document, containing two tables: "
"``[theme]`` and ``[options]``."
msgstr ":file:`theme.toml`文件为 TOML_ 文档，其包含两个表格：``[theme]``和 ``[options]``。"

#: ../../sphinx/doc/development/html_themes/index.rst:46
msgid "The ``[theme]`` table defines the theme's settings:"
msgstr "``[theme]``表格定义主题设置："

#: ../../sphinx/doc/development/html_themes/index.rst:48
msgid ""
"**inherit** (string): The name of the base theme from which to inherit "
"settings, options, templates, and static files. All static files from theme "
"'ancestors' will be used. The theme will use all options defined in "
"inherited themes. Finally, inherited themes will be used to locate missing "
"templates (for example, if ``\"basic\"`` is used as the base theme, most "
"templates will already be defined)."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:56
msgid ""
"If set to ``\"none\"``, the theme will not inherit from any other theme. "
"Inheritance is recursive, forming a chain of inherited themes (e.g. "
"``default`` -> ``classic`` -> ``basic`` -> ``none``)."
msgstr ""
"如设置为 ``\"none\"``，则主题不会继承任何其它主题。继承为递归式，形成继承主题链条（如 ``default`` -> ``classic``"
" -> ``basic`` -> ``none``）。"

#: ../../sphinx/doc/development/html_themes/index.rst:60
msgid ""
"**stylesheets** (list of strings): A list of CSS filenames which will be "
"included in generated HTML header. Setting the   :confval:`html_style` "
"config value will override this setting."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:64
msgid ""
"Other mechanisms for including multiple stylesheets include ``@import`` in "
"CSS or using a custom HTML template with appropriate ``<link "
"rel=\"stylesheet\">`` tags."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:67
msgid ""
"**sidebars** (list of strings): A list of sidebar templates. This can be "
"overridden by the user via the :confval:`html_sidebars` config value."
msgstr "**sidebars**（字符串列表）：侧边栏模板列表。可由用户通过 :confval:`html_sidebars` 配置值覆盖之。"

#: ../../sphinx/doc/development/html_themes/index.rst:70
msgid ""
"**pygments_style** (table): A TOML table defining the names of Pygments "
"styles to use for highlighting syntax. The table has two recognised keys: "
"``default`` and ``dark``. The style defined in the ``dark`` key will be used"
" when the CSS media query ``(prefers-color-scheme: dark)`` evaluates to "
"true."
msgstr ""
"**pygments_style**（表格）：此为 TOML 表格，定义 Pygments 样式名称以用于语法加亮。表格有两个识别键： "
"``default`` 和 ``dark``。当 CSS 媒体查询 ``(prefers-color-scheme: dark)`` 评估为 True "
"时，使用在 ``dark`` 键内定义的样式。"

#: ../../sphinx/doc/development/html_themes/index.rst:76
msgid ""
"``[theme.pygments_style.default]`` can be overridden by the user via the "
":confval:`pygments_style` config value."
msgstr ""
"``[theme.pygments_style.default]`` 可由用户通过 :confval:`pygments_style` 配置值覆盖之。"

#: ../../sphinx/doc/development/html_themes/index.rst:79
msgid ""
"The ``[options]`` table defines the options for the theme. It is structured "
"such that each key-value pair corresponds to a variable name and the "
"corresponding default value. These options can be overridden by the user in "
":confval:`html_theme_options` and are accessible from all templates as "
"``theme_<name>``."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:85
msgid "``theme.toml`` support."
msgstr "``theme.toml`` 支持。"

#: ../../sphinx/doc/development/html_themes/index.rst:90
msgid "Exemplar :file:`theme.toml` file:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:112
msgid "Theme configuration (``theme.conf``)"
msgstr "主题配置（``theme.conf``）"

#: ../../sphinx/doc/development/html_themes/index.rst:114
msgid ""
"The :file:`theme.conf` file is in INI format [1]_ (readable by the standard "
"Python :mod:`configparser` module) and has the following structure:"
msgstr ""
":file:`theme.conf` 文件为 INI 格式 [1]_(可由标准的 Python "
":mod:`configparser`模块读取），具有以下结构： "

#: ../../sphinx/doc/development/html_themes/index.rst:128
msgid ""
"The **inherit** setting gives the name of a \"base theme\", or ``none``.  "
"The base theme will be used to locate missing templates (most themes will "
"not have to supply most templates if they use ``basic`` as the base theme), "
"its options will be inherited, and all of its static files will be used as "
"well. If you want to also inherit the stylesheet, include it via CSS' "
"``@import`` in your own."
msgstr ""
"**inherit**设置提供“基本主题”或“无”的名称。基本主题将用于查找缺少的模板（如果大多数主题使用“basic”作为基本主题，则大多数主题不必提供大多数模板），它的选项将被继承，并且它的所有静态文件也将被使用。如果您还想继承样式表，可以通过CSS'`@import``将其包含在自己的样式表中。"

#: ../../sphinx/doc/development/html_themes/index.rst:135
msgid ""
"The **stylesheet** setting gives a list of CSS filenames separated commas "
"which will be referenced in the HTML header.  You can also use CSS' "
"``@import`` technique to include one from the other, or use a custom HTML "
"template that adds ``<link rel=\"stylesheet\">`` tags as necessary.  Setting"
" the :confval:`html_style` config value will override this setting."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:141
msgid ""
"The **pygments_style** setting gives the name of a Pygments style to use for"
" highlighting.  This can be overridden by the user in the "
":confval:`pygments_style` config value."
msgstr ""
"**pygments\\ustyle**设置提供用于突出显示的pygments样式的名称。用户可以在：confval:`pygments\\ustyle`配置值中重写此设置。"

#: ../../sphinx/doc/development/html_themes/index.rst:145
msgid ""
"The **pygments_dark_style** setting gives the name of a Pygments style to "
"use for highlighting when the CSS media query ``(prefers-color-scheme: "
"dark)`` evaluates to true. It is injected into the page using "
":meth:`~sphinx.application.Sphinx.add_css_file`."
msgstr ""
"**pygments_dark_style** 设置给予 Pygments 样式名称以在 CSS 媒体查询 ``(prefers-color-"
"scheme: dark)`` 评估为 True 时用作语法加亮。使用 "
":meth:`~sphinx.application.Sphinx.add_css_file`将其注射到网页。"

#: ../../sphinx/doc/development/html_themes/index.rst:150
msgid ""
"The **sidebars** setting gives the comma separated list of sidebar templates"
" for constructing sidebars.  This can be overridden by the user in the "
":confval:`html_sidebars` config value."
msgstr ""
"**sidebars**设置提供了用逗号分隔的侧边栏模板列表，用于构造提要栏。用户可以在：confval:`html_sidebars`配置值中覆盖此值。"

#: ../../sphinx/doc/development/html_themes/index.rst:154
msgid ""
"The **options** section contains pairs of variable names and default values."
" These options can be overridden by the user in "
":confval:`html_theme_options` and are accessible from all templates as "
"``theme_<name>``."
msgstr ""
"**options**部分包含变量名和默认值对。用户可以在以下位置重写这些选项：confval:`html_theme_options`并且可以从所有模板中以“theme_1`”的形式访问这些选项。"

#: ../../sphinx/doc/development/html_themes/index.rst:158
msgid "sidebar settings"
msgstr "边栏设置"

#: ../../sphinx/doc/development/html_themes/index.rst:163
msgid "The stylesheet setting accepts multiple CSS filenames"
msgstr "样式表设置接受多个 CSS 文件名"

#: ../../sphinx/doc/development/html_themes/index.rst:166
msgid "Convert ``theme.conf`` to ``theme.toml``"
msgstr "转换 ``theme.conf`` 为 ``theme.toml``"

#: ../../sphinx/doc/development/html_themes/index.rst:168
msgid ""
"INI-style theme configuration files (``theme.conf``) can be converted to "
"TOML via a helper programme distributed with Sphinx. This is intended for "
"one-time use, and may be removed without notice in a future version of "
"Sphinx."
msgstr ""
"可通过随 Sphinx 分布的助手程序转换 INI 样式的主题配置文件（``theme.conf``）为 TOML。此为一次性使用，可能在 Sphinx"
" 的以后版本中移除，不另行通知。"

#: ../../sphinx/doc/development/html_themes/index.rst:177
msgid ""
"The required argument is a path to a directory containing a ``theme.conf`` "
"file. The programme will write a ``theme.toml`` file in the same directory, "
"and will not modify the original ``theme.conf`` file."
msgstr ""
"所需参数为包含 ``theme.conf`` 文件的目录路径。助手程序会写 ``theme.toml`` 文件到同一目录，不会修改原始 "
"``theme.conf`` 文件。"

#: ../../sphinx/doc/development/html_themes/index.rst:186
msgid "Distribute your theme as a Python package"
msgstr "将主题作为Python包分发"

#: ../../sphinx/doc/development/html_themes/index.rst:188
msgid ""
"As a way to distribute your theme, you can use a Python package.  This makes"
" it easier for users to set up your theme."
msgstr "您可用 Python 包作为分布您主题的方式。这可使用户能够更轻松地设置主题。"

#: ../../sphinx/doc/development/html_themes/index.rst:191
msgid ""
"To distribute your theme as a Python package, please define an entry point "
"called ``sphinx.html_themes`` in your ``pyproject.toml`` file, and write a "
"``setup()`` function to register your theme using the "
":meth:`~sphinx.application.Sphinx.add_html_theme` API:"
msgstr ""
"要分布您的主题为 Python 包，请在您的 ``pyproject.toml`` 文件内定义名为 ``sphinx.html_themes`` "
"的入口点并写 ``setup()`` 函数以使用 :meth:`~sphinx.application.Sphinx.add_html_theme` "
"API 注册您的主题："

#: ../../sphinx/doc/development/html_themes/index.rst:211
msgid ""
"If your theme package contains two or more themes, please call "
"``add_html_theme()`` twice or more."
msgstr "如果您的主题包包含两个或多个主题，请调用“add_html_theme（）`”两次或更多。"

#: ../../sphinx/doc/development/html_themes/index.rst:214
msgid "'sphinx_themes' entry_points feature."
msgstr "“sphinx_themes”入口点功能。"

#: ../../sphinx/doc/development/html_themes/index.rst:217
msgid "``sphinx_themes`` entry_points has been deprecated."
msgstr "``sphinx_themes``入口点”已被弃用。"

#: ../../sphinx/doc/development/html_themes/index.rst:220
msgid "``sphinx.html_themes`` entry_points feature."
msgstr "``sphinx.html_themes`` 进入点特征。"

#: ../../sphinx/doc/development/html_themes/index.rst:225
msgid "Styling with CSS"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:227
msgid ""
"The :confval:`!stylesheets` setting can be used to add custom CSS files to a"
" theme."
msgstr ":confval:`!stylesheets` 设置可用于添加自定义 CSS 文件到主题。"

#: ../../sphinx/doc/development/html_themes/index.rst:231
msgid ""
"The structure of the HTML elements and their classes are currently not a "
"well-defined public API. Please infer them from inspecting the built HTML "
"pages. While we cannot guarantee full stability, they tend to be fairly "
"stable."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:237
msgid "Styling search result entries by category"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:243
msgid ""
"The CSS classes named below are generated by Sphinx's standalone search "
"code.  If you are using a third-party search provider, such as ReadTheDocs_,"
" to provide search results, then the theming options available may vary."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:250
msgid ""
"The search result items have classes indicating the context in which the "
"search term was found. You can use the CSS selectors:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:253
msgid ""
"``ul.search li.kind-index``: For results in an index, such as the glossary"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:255
msgid ""
"``ul.search li.kind-object``: For results in source code, like Python "
"function definitions"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:257
msgid "``ul.search li.kind-title``: For results found in section headings"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:259
msgid ""
"``ul.search li.kind-text``: For results found anywhere else in the "
"documentation text"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:262
msgid ""
"As a base for inheritance by other themes, the ``basic`` theme is "
"intentionally minimal and does not define CSS rules using these. Derived "
"themes are encouraged to use these selectors as they see fit. For example, "
"the following stylesheet adds contextual icons to the search result list:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:292
msgid "Templating"
msgstr "模板"

#: ../../sphinx/doc/development/html_themes/index.rst:299
msgid ""
"The :doc:`guide to templating <templating>` is helpful if you want to write "
"your own templates.  What is important to keep in mind is the order in which"
" Sphinx searches for templates:"
msgstr "如果您想编写自己的模板，：doc:`guide to templating 1`很有帮助。重要的是要记住Sphinx搜索模板的顺序："

#: ../../sphinx/doc/development/html_themes/index.rst:303
msgid "First, in the user's ``templates_path`` directories."
msgstr "首先，在用户的“templates_path”目录中。"

#: ../../sphinx/doc/development/html_themes/index.rst:304
msgid "Then, in the selected theme."
msgstr "然后，在选定的主题中。"

#: ../../sphinx/doc/development/html_themes/index.rst:305
msgid "Then, in its base theme, its base's base theme, etc."
msgstr "然后，在它的基主题中，它的基主题，等等。"

#: ../../sphinx/doc/development/html_themes/index.rst:307
msgid ""
"When extending a template in the base theme with the same name, use the "
"theme name as an explicit directory: ``{% extends \"basic/layout.html\" "
"%}``.  From a user ``templates_path`` template, you can still use the "
"\"exclamation mark\" syntax as :ref:`described in the templating document "
"<templating-primer>`."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:316
msgid "Static templates"
msgstr "静态模板"

#: ../../sphinx/doc/development/html_themes/index.rst:318
msgid ""
"Since theme options are meant for the user to configure a theme more easily,"
" without having to write a custom stylesheet, it is necessary to be able to "
"template static files as well as HTML files.  Therefore, Sphinx supports so-"
"called \"static templates\", like this:"
msgstr ""
"因为主题选项是为了让用户更容易地配置一个主题，而不必编写自定义样式表，所以必须能够模板化静态文件和HTML文件。因此，Sphinx支持所谓的“静态模板”，如下所示："

#: ../../sphinx/doc/development/html_themes/index.rst:323
msgid ""
"If the name of a file in the ``static/`` directory of a theme (or in the "
"user's static path) ends with ``.jinja`` or ``_t``, it will be processed by "
"the template engine.  The suffix will be removed from the final file name."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:327
msgid ""
"For example, a theme with a ``static/theme_styles.css.jinja`` file could use"
" templating to put options into the stylesheet. When a documentation project"
" is built with that theme, the output directory will contain a "
"``_static/theme_styles.css`` file where all template tags have been "
"processed."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:335
msgid ""
"The preferred suffix for static templates is now ``.jinja``, in line with "
"the Jinja project's `recommended file extension`_."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:338
msgid ""
"The ``_t`` file suffix for static templates is now considered 'legacy', and "
"support may eventually be removed."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:341
msgid ""
"If a static template with either a ``_t`` suffix or a ``.jinja`` suffix is "
"detected, it will be processed by the template engine, with the suffix "
"removed from the final file name."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:349
msgid "Use custom page metadata in HTML templates"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:351
msgid ""
"Any key / value pairs in :doc:`field lists </usage/restructuredtext/field-"
"lists>` that are placed *before* the page's title will be available to the "
"Jinja template when building the page within the :data:`meta` attribute. For"
" example, if a page had the following text before its first title:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:363
msgid "Then it could be accessed within a Jinja template like so:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:371
msgid ""
"Note the check that ``meta`` is a dictionary (\"mapping\" in Jinja "
"terminology) to ensure that using it in this way is valid."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:376
msgid "Defining custom template functions"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:378
msgid ""
"Sometimes it is useful to define your own function in Python that you wish "
"to then use in a template. For example, if you'd like to insert a template "
"value with logic that depends on the user's configuration in the project, or"
" if you'd like to include non-trivial checks and provide friendly error "
"messages for incorrect configuration in the template."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:384
msgid ""
"To define your own template function, you'll need to define two functions "
"inside your module:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:387
msgid ""
"A **page context event handler** (or **registration**) function. This is "
"connected to the :class:`.Sphinx` application via an event callback."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:389
msgid "A **template function** that you will use in your Jinja template."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:391
msgid ""
"First, define the registration function, which accepts the arguments for "
":event:`html-page-context`."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:394
msgid ""
"Within the registration function, define the template function that you'd "
"like to use within Jinja. The template function should return a string or "
"Python objects (lists, dictionaries) with strings inside that Jinja uses in "
"the templating process"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:400
msgid ""
"The template function will have access to all of the variables that are "
"passed to the registration function."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:403
msgid ""
"At the end of the registration function, add the template function to the "
"Sphinx application's context with ``context['template_func'] = "
"template_func``."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:406
msgid ""
"Finally, in your extension's ``setup()`` function, add your registration "
"function as a callback for :event:`html-page-context`."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:423
msgid "Now, you will have access to this function in jinja like so:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:433
msgid "Add your own static files to the build assets"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:435
msgid ""
"By default, Sphinx copies static files on the ``static/`` directory of the "
"template directory.  However, if your package needs to place static files "
"outside of the ``static/`` directory for some reasons, you need to copy them"
" to the ``_static/`` directory of HTML outputs manually at the build via an "
"event hook.  Here is an example of code to accomplish this:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:455
msgid "Inject JavaScript based on user configuration"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:457
msgid ""
"If your extension makes use of JavaScript, it can be useful to allow users "
"to control its behavior using their Sphinx configuration. However, this can "
"be difficult to do if your JavaScript comes in the form of a static library "
"(which will not be built with Jinja)."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:462
msgid ""
"There are two ways to inject variables into the JavaScript space based on "
"user configuration."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:465
msgid ""
"First, you may append ``_t`` to the end of any static files included with "
"your extension. This will cause Sphinx to process these files with the "
"templating engine, allowing you to embed variables and control behavior."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:469
msgid "For example, the following JavaScript structure:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:478
msgid ""
"Will result in the following static file placed in your HTML's build output:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:487
msgid "See :ref:`theming-static-templates` for more information."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:489
msgid ""
"Second, you may use the :meth:`.Sphinx.add_js_file` method without pointing "
"it to a file. Normally, this method is used to insert a new JavaScript file "
"into your site. However, if you do *not* pass a file path, but instead pass "
"a string to the \"body\" argument, then this text will be inserted as "
"JavaScript into your site's head. This allows you to insert variables into "
"your project's JavaScript from Python."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:496
msgid ""
"For example, the following code will read in a user-configured value and "
"then insert this value as a JavaScript variable, which your extension's "
"JavaScript code may use:"
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:515
msgid ""
"As a result, in your theme you can use code that depends on the presence of "
"this variable. Users can control the variable's value by defining it in "
"their :file:`conf.py` file."
msgstr ""

#: ../../sphinx/doc/development/html_themes/index.rst:520
msgid ""
"It is not an executable Python file, as opposed to :file:`conf.py`, because "
"that would pose an unnecessary security risk if themes are shared."
msgstr "它不是一个可执行的Python文件，而不是：file:`conf.py`，因为如果共享主题，则会带来不必要的安全风险。"

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Melia Lee <lixiuyu97@163.com>, 2020
# wendi cao <651645601@qq.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-18 00:49+0000\n"
"PO-Revision-Date: 2018-06-26 15:58+0000\n"
"Last-Translator: wendi cao <651645601@qq.com>, 2020\n"
"Language-Team: Chinese (China) (https://app.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/usage/extensions/doctest.rst:4
msgid ":mod:`sphinx.ext.doctest` -- Test snippets in the documentation"
msgstr "：模式：`sphinx.ext.doctest`--文档中的测试片段"

#: ../../sphinx/doc/usage/extensions/doctest.rst:14
msgid ""
"It is often helpful to include snippets of code in your documentation and "
"demonstrate the results of executing them. But it is important to ensure "
"that the documentation stays up-to-date with the code."
msgstr "在文档中包含代码片段并演示执行它们的结果通常很有帮助。但是确保文档与代码保持最新是很重要的。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:18
msgid ""
"This extension allows you to test such code snippets in the documentation in"
" a natural way.  If you mark the code blocks as shown here, the ``doctest`` "
"builder will collect them and run them as doctest tests."
msgstr ""
"此扩展允许您以自然的方式测试文档中的此类代码片段。如果您按此处所示标记代码块，则“doctest”生成器将收集它们并将其作为doctest测试运行。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:22
msgid ""
"Within each document, you can assign each snippet to a *group*. Each group "
"consists of:"
msgstr "在每个文档中，可以将每个代码段分配给一个*组*。每组包括："

#: ../../sphinx/doc/usage/extensions/doctest.rst:25
msgid "zero or more *setup code* blocks (e.g. importing the module to test)"
msgstr "零个或多个*设置代码*块（例如导入要测试的模块）"

#: ../../sphinx/doc/usage/extensions/doctest.rst:26
msgid "one or more *test* blocks"
msgstr "一个或多个*测试*块"

#: ../../sphinx/doc/usage/extensions/doctest.rst:28
msgid ""
"When building the docs with the ``doctest`` builder, groups are collected "
"for each document and run one after the other, first executing setup code "
"blocks, then the test blocks in the order they appear in the file."
msgstr "当使用“doctest”构建器构建文档时，将为每个文档收集组并逐个运行，首先执行安装代码块，然后按它们在文件中出现的顺序执行测试块。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:32
msgid "There are two kinds of test blocks:"
msgstr "有两种测试块："

#: ../../sphinx/doc/usage/extensions/doctest.rst:34
msgid ""
"*doctest-style* blocks mimic interactive sessions by interleaving Python "
"code (including the interpreter prompt) and output."
msgstr "*doctest style*块通过交错Python代码（包括解释器提示）和输出来模拟交互式会话。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:37
msgid ""
"*code-output-style* blocks consist of an ordinary piece of Python code, and "
"optionally, a piece of output for that code."
msgstr "*代码输出样式*块由一段普通的Python代码和一段可选的该代码的输出组成。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:42
msgid "Directives"
msgstr "指令"

#: ../../sphinx/doc/usage/extensions/doctest.rst:44
msgid ""
"The *group* argument below is interpreted as follows: if it is empty, the "
"block is assigned to the group named ``default``.  If it is ``*``, the block"
" is assigned to all groups (including the ``default`` group).  Otherwise, it"
" must be a comma-separated list of group names."
msgstr ""
"下面的*group*参数解释如下：如果它为空，则块被分配给名为“default”的组。如果它是`*`，则块被分配给所有组（包括``default``组）。否则，它必须是以逗号分隔的组名列表。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:51
msgid ""
"A setup code block.  This code is not shown in the output for other "
"builders, but executed before the doctests of the group(s) it belongs to."
msgstr "设置代码块。此代码不会显示在其他生成器的输出中，而是在它所属组的doctest之前执行。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:57
msgid ""
"A cleanup code block.  This code is not shown in the output for other "
"builders, but executed after the doctests of the group(s) it belongs to."
msgstr "清除代码块。此代码不会显示在其他生成器的输出中，而是在它所属组的doctest之后执行。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:65
msgid ""
"A doctest-style code block.  You can use standard :mod:`doctest` flags for "
"controlling how actual output is compared with what you give as output.  The"
" default set of flags is specified by the :confval:`doctest_default_flags` "
"configuration variable."
msgstr ""
"doctest样式的代码块。您可以使用标准：mod:`doctest`标志来控制实际输出与输出结果的比较方式。默认标志集由：confval:`doctest_default_flags`配置变量指定。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:70
msgid "This directive supports five options:"
msgstr "该指令支持五个选项："

#: ../../sphinx/doc/usage/extensions/doctest.rst:72
msgid ""
"``hide``, a flag option, hides the doctest block in other builders.  By "
"default it is shown as a highlighted doctest block."
msgstr "``hide```，一个标志选项，在其他构建器中隐藏doctest块。默认情况下，它显示为高亮显示的doctest块。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:75
msgid ""
"``options``, a string option, can be used to give a comma-separated list of "
"doctest flags that apply to each example in the tests.  (You still can give "
"explicit flags per example, with doctest comments, but they will show up in "
"other builders too.)"
msgstr ""
"``options```，一个字符串选项，可用于提供一个逗号分隔的doctest标志列表，该列表适用于测试中的每个示例。（您仍然可以为每个示例提供显式标志，并带有doctest注释，但它们也会显示在其他构建器中。）"

#: ../../sphinx/doc/usage/extensions/doctest.rst:80
msgid ""
"``pyversion``, a string option, can be used to specify the required Python "
"version for the example to be tested. For instance, in the following case "
"the example will be tested only for Python versions greater than 3.12::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/doctest.rst:87
msgid "The following operands are supported:"
msgstr "支持以下操作数："

#: ../../sphinx/doc/usage/extensions/doctest.rst:89
msgid "``~=``: Compatible release clause"
msgstr "``~=```：兼容释放子句"

#: ../../sphinx/doc/usage/extensions/doctest.rst:90
msgid "``==``: Version matching clause"
msgstr "``=```：版本匹配子句"

#: ../../sphinx/doc/usage/extensions/doctest.rst:91
msgid "``!=``: Version exclusion clause"
msgstr "`=``：版本排除子句"

#: ../../sphinx/doc/usage/extensions/doctest.rst:92
msgid "``<=``, ``>=``: Inclusive ordered comparison clause"
msgstr "``<=``，`>=``：包含有序比较子句"

#: ../../sphinx/doc/usage/extensions/doctest.rst:93
msgid "``<``, ``>``: Exclusive ordered comparison clause"
msgstr "``<``，`>``：排他有序比较子句"

#: ../../sphinx/doc/usage/extensions/doctest.rst:94
msgid "``===``: Arbitrary equality clause."
msgstr "``==```：任意等式子句。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:96
msgid ""
"``pyversion`` option is followed :pep:`PEP-440: Version Specifiers "
"<440#version-specifiers>`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/doctest.rst:103
msgid "Supported PEP-440 operands and notations"
msgstr "支持的PEP-440操作数和符号"

#: ../../sphinx/doc/usage/extensions/doctest.rst:105
#: ../../sphinx/doc/usage/extensions/doctest.rst:132
#: ../../sphinx/doc/usage/extensions/doctest.rst:170
msgid ""
"``trim-doctest-flags`` and ``no-trim-doctest-flags``, a flag option, doctest"
" flags (comments looking like ``# doctest: FLAG, ...``) at the ends of lines"
" and ``<BLANKLINE>`` markers are removed (or not removed) individually.  "
"Default is ``trim-doctest-flags``."
msgstr ""
"``trim doctest flags``和``no trim doctest "
"flags``，一个标志选项，行末的doctest标志（看起来像``doctest:flag，```）和``1``标记分别删除（或不删除）。默认值为“trim"
" doctest flags”。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:110
msgid ""
"Note that like with standard doctests, you have to use ``<BLANKLINE>`` to "
"signal a blank line in the expected output.  The ``<BLANKLINE>`` is removed "
"when building presentation output (HTML, LaTeX etc.)."
msgstr "注意，与标准doctest一样，您必须使用````在预期输出中发出空行信号。生成表示输出（HTML、LaTeX等）时，会删除“``”。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:114
msgid "Also, you can give inline doctest options, like in doctest::"
msgstr "此外，还可以提供内联doctest选项，如doctest:："

#: ../../sphinx/doc/usage/extensions/doctest.rst:119
msgid ""
"They will be respected when the test is run, but stripped from presentation "
"output."
msgstr "当测试运行时，它们将被尊重，但从表示输出中剥离。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:125
msgid "A code block for a code-output-style test."
msgstr ""
"When the tests run, they are respected, but separated from the presentation "
"output."

#: ../../sphinx/doc/usage/extensions/doctest.rst:127
msgid "This directive supports three options:"
msgstr "此指令支持三个选项："

#: ../../sphinx/doc/usage/extensions/doctest.rst:129
msgid ""
"``hide``, a flag option, hides the code block in other builders.  By default"
" it is shown as a highlighted code block."
msgstr "``hide```，一个标志选项，在其他生成器中隐藏代码块。默认情况下，它显示为高亮显示的代码块。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:139
msgid ""
"Code in a ``testcode`` block is always executed all at once, no matter how "
"many statements it contains.  Therefore, output will *not* be generated for "
"bare expressions -- use ``print``.  Example::"
msgstr "“testcode”块中的代码总是一次执行，不管它包含多少条语句。因此，将*不*为裸表达式生成输出--使用“print”。例子：："

#: ../../sphinx/doc/usage/extensions/doctest.rst:152
msgid ""
"Also, please be aware that since the doctest module does not support mixing "
"regular output and an exception message in the same snippet, this applies to"
" testcode/testoutput as well."
msgstr "另外，请注意，由于doctest模块不支持在同一代码段中混合常规输出和异常消息，这也适用于testcode/testoutput。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:159
msgid ""
"The corresponding output, or the exception message, for the last "
":rst:dir:`testcode` block."
msgstr "最后一个的相应输出或异常消息：rst:方向：`testcode`块。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:162
msgid "This directive supports four options:"
msgstr "该指令支持四个选项："

#: ../../sphinx/doc/usage/extensions/doctest.rst:164
msgid ""
"``hide``, a flag option, hides the output block in other builders.  By "
"default it is shown as a literal block without highlighting."
msgstr "``hide```，一个标志选项，在其他构建器中隐藏输出块。默认情况下，它显示为不加亮显的文本块。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:167
msgid ""
"``options``, a string option, can be used to give doctest flags (comma-"
"separated) just like in normal doctest blocks."
msgstr "``options```，一个字符串选项，可用于提供doctest标志（逗号分隔），就像在普通doctest块中一样。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:175
msgid "Example::"
msgstr "例如："

#: ../../sphinx/doc/usage/extensions/doctest.rst:187
msgid ""
"The following is an example for the usage of the directives.  The test via "
":rst:dir:`doctest` and the test via :rst:dir:`testcode` and "
":rst:dir:`testoutput` are equivalent. ::"
msgstr ""
"下面是指令用法的示例。测试通过：rst:方向：`doctest`和测试通过：rst:方向：`testcode`和：rst:方向：`testoutput`是等效的。::"

#: ../../sphinx/doc/usage/extensions/doctest.rst:221
msgid "Skipping tests conditionally"
msgstr "有条件地跳过测试"

#: ../../sphinx/doc/usage/extensions/doctest.rst:223
msgid ""
"``skipif``, a string option, can be used to skip directives conditionally. "
"This may be useful e.g. when a different set of tests should be run "
"depending on the environment (hardware, network/VPN, optional dependencies "
"or different versions of dependencies). The ``skipif`` option is supported "
"by all of the doctest directives. Below are typical use cases for ``skipif``"
" when used for different directives:"
msgstr ""
"``skipif```，一个字符串选项，可用于有条件地跳过指令。这可能很有用，例如，根据环境（硬件、网络/VPN、可选依赖项或依赖项的不同版本）运行不同的测试集。所有doctest指令都支持“skipif”选项。以下是“skipif”在用于不同指令时的典型用例："

#: ../../sphinx/doc/usage/extensions/doctest.rst:230
msgid ":rst:dir:`testsetup` and :rst:dir:`testcleanup`"
msgstr ":rst:dir:`testsetup` 和:rst:dir:`testcleanup`"

#: ../../sphinx/doc/usage/extensions/doctest.rst:232
msgid "conditionally skip test setup and/or cleanup"
msgstr "有条件地跳过测试设置和/或清理"

#: ../../sphinx/doc/usage/extensions/doctest.rst:233
msgid "customize setup/cleanup code per environment"
msgstr "根据环境自定义安装/清理代码"

#: ../../sphinx/doc/usage/extensions/doctest.rst:235
msgid ":rst:dir:`doctest`"
msgstr ":rst:dir:`doctest`"

#: ../../sphinx/doc/usage/extensions/doctest.rst:237
msgid "conditionally skip both a test and its output verification"
msgstr "有条件地跳过测试及其输出验证"

#: ../../sphinx/doc/usage/extensions/doctest.rst:239
msgid ":rst:dir:`testcode`"
msgstr ":rst:dir:`testcode`"

#: ../../sphinx/doc/usage/extensions/doctest.rst:241
msgid "conditionally skip a test"
msgstr "有条件地跳过测试"

#: ../../sphinx/doc/usage/extensions/doctest.rst:242
msgid "customize test code per environment"
msgstr "每个自定义测试环境的代码"

#: ../../sphinx/doc/usage/extensions/doctest.rst:244
msgid ":rst:dir:`testoutput`"
msgstr ":rst:dir:`testoutput`"

#: ../../sphinx/doc/usage/extensions/doctest.rst:246
msgid "conditionally skip output assertion for a skipped test"
msgstr "有条件地跳过跳过测试的输出断言"

#: ../../sphinx/doc/usage/extensions/doctest.rst:247
msgid "expect different output depending on the environment"
msgstr "根据环境的不同预期不同的输出"

#: ../../sphinx/doc/usage/extensions/doctest.rst:249
msgid ""
"The value of the ``skipif`` option is evaluated as a Python expression. If "
"the result is a true value, the directive is omitted from the test run just "
"as if it wasn't present in the file at all."
msgstr "将Python`的值计算为'skif`表达式。如果结果是真值，则从测试运行中忽略该指令，就像它根本不存在于文件中一样。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:253
msgid ""
"Instead of repeating an expression, the :confval:`doctest_global_setup` "
"configuration option can be used to assign it to a variable which can then "
"be used instead."
msgstr "可以使用：confval:`doctest_global_setup`配置选项将表达式分配给一个变量，然后可以使用该变量来代替该变量。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:257
msgid "Here's an example which skips some tests if Pandas is not installed:"
msgstr "下面是一个例子，如果没有安装Pandas，它会跳过一些测试："

#: ../../sphinx/doc/usage/extensions/doctest.rst:259
msgid "conf.py"
msgstr "conf.py"

#: ../../sphinx/doc/usage/extensions/doctest.rst:270
msgid "contents.rst"
msgstr "contents.rst"

#: ../../sphinx/doc/usage/extensions/doctest.rst:296
msgid "Configuration"
msgstr "配置"

#: ../../sphinx/doc/usage/extensions/doctest.rst:298
msgid "The doctest extension uses the following configuration values:"
msgstr "doctest扩展使用以下配置值："

#: ../../sphinx/doc/usage/extensions/doctest.rst:302
msgid "By default, these options are enabled:"
msgstr "默认情况下，这些选项处于启用状态："

#: ../../sphinx/doc/usage/extensions/doctest.rst:304
msgid ""
"``ELLIPSIS``, allowing you to put ellipses in the expected output that match"
" anything in the actual output;"
msgstr "``ELLIPSIS``，允许您将省略号放在与实际输出中的任何内容匹配的预期输出中；"

#: ../../sphinx/doc/usage/extensions/doctest.rst:306
msgid ""
"``IGNORE_EXCEPTION_DETAIL``, causing everything following the leftmost colon"
" and any module information in the exception name to be ignored;"
msgstr "``IGNORE_EXCEPTION_DETAIL``，导致忽略最左边冒号后面的所有内容以及异常名称中的任何模块信息；"

#: ../../sphinx/doc/usage/extensions/doctest.rst:308
msgid ""
"``DONT_ACCEPT_TRUE_FOR_1``, rejecting \"True\" in the output where \"1\" is "
"given -- the default behavior of accepting this substitution is a relic of "
"pre-Python 2.2 times."
msgstr "``不要接受“1”的“TRUE”，拒绝在给定“1”的输出中的“TRUE”――接受此替换的默认行为是Python之前的2.2倍的产物。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:316
msgid "Defaults to ``True``. Controls whether successes are reported."
msgstr ""

#: ../../sphinx/doc/usage/extensions/doctest.rst:319
msgid ""
"For a project with many doctests, it may be useful to set this to ``False`` "
"to only highlight failures."
msgstr ""

#: ../../sphinx/doc/usage/extensions/doctest.rst:326
msgid ""
"A list of directories that will be added to :data:`sys.path` when the "
"doctest builder is used.  (Make sure it contains absolute paths.)"
msgstr "将添加到的目录列表：data:`搜索路径`当使用doctest构建器时。（确保它包含绝对路径。）"

#: ../../sphinx/doc/usage/extensions/doctest.rst:331
msgid ""
"Python code that is treated like it were put in a ``testsetup`` directive "
"for *every* file that is tested, and for every group.  You can use this to "
"e.g. import modules you will always need in your doctests."
msgstr ""
"对于每个被测试的*文件和每个组，它被当作放在“testsetup”指令中的Python代码。您可以使用它来导入您的doctest中始终需要的模块。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:339
msgid ""
"Python code that is treated like it were put in a ``testcleanup`` directive "
"for *every* file that is tested, and for every group.  You can use this to "
"e.g. remove any temporary files that the tests leave behind."
msgstr "对于每个测试的*文件和每个组，Python代码被视为放在“testcleanup”指令中。你可以用它来删除测试留下的任何临时文件。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:347
msgid ""
"If this is a nonempty string (the default is ``'default'``), standard "
"reStructuredText doctest blocks will be tested too. They will be assigned to"
" the group name given."
msgstr ""

#: ../../sphinx/doc/usage/extensions/doctest.rst:351
msgid ""
"reStructuredText doctest blocks are simply doctests put into a paragraph of "
"their own, like so::"
msgstr ""

#: ../../sphinx/doc/usage/extensions/doctest.rst:361
msgid ""
"(Note that no special ``::`` is used to introduce a doctest block; docutils "
"recognizes them from the leading ``>>>``.  Also, no additional indentation "
"is used, though it doesn't hurt.)"
msgstr ""
"（请注意，没有特殊的“`:：`”用于引入doctest块；docutils从前导的“>>>”中识别它们。此外，不会使用额外的缩进，尽管不会造成伤害。）"

#: ../../sphinx/doc/usage/extensions/doctest.rst:365
msgid ""
"If this value is left at its default value, the above snippet is interpreted"
" by the doctest builder exactly like the following::"
msgstr "如果将此值保留为默认值，则doctest构建器将对上面的代码段进行如下解释："

#: ../../sphinx/doc/usage/extensions/doctest.rst:377
msgid ""
"This feature makes it easy for you to test doctests in docstrings included "
"with the :mod:`~sphinx.ext.autodoc` extension without marking them up with a"
" special directive."
msgstr "此功能使您可以轻松地测试：mod:`~sphinx.ext.autodoc`没有用特殊指令标记的扩展。"

#: ../../sphinx/doc/usage/extensions/doctest.rst:381
msgid ""
"Note though that you can't have blank lines in reStructuredText doctest "
"blocks. They will be interpreted as one block ending and another one "
"starting. Also, removal of ``<BLANKLINE>`` and ``# doctest:`` options only "
"works in :rst:dir:`doctest` blocks, though you may set "
":confval:`trim_doctest_flags` to achieve that in all code blocks with Python"
" console content."
msgstr ""

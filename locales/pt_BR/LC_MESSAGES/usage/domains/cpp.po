# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-27 00:54+0000\n"
"PO-Revision-Date: 2023-10-03 00:37+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/sphinx-doc/teams/15434/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../sphinx/doc/usage/domains/cpp.rst:5
msgid "The C++ Domain"
msgstr "O domínio C++"

#: ../../sphinx/doc/usage/domains/cpp.rst:9
msgid "The C++ domain (name **cpp**) supports documenting C++ projects."
msgstr ""
"O domínio C++ (nome **cpp**) oferece suporte a documentar projetos C++."

#: ../../sphinx/doc/usage/domains/cpp.rst:12
msgid "Directives for Declaring Entities"
msgstr "Diretivas para declarar entidades"

#: ../../sphinx/doc/usage/domains/cpp.rst:14
msgid ""
"The following directives are available. All declarations can start with a "
"visibility statement (``public``, ``private`` or ``protected``)."
msgstr ""
"As seguintes diretivas estão disponíveis. Todas as declarações podem começar"
" com uma declaração de visibilidade (``public``, ``private`` ou "
"``protected``)."

#: ../../sphinx/doc/usage/domains/cpp.rst:20
msgid ""
"Describe a class/struct, possibly with specification of inheritance, e.g.,::"
msgstr ""
"Descreve uma classe/struct, possivelmente com especificação de herança, por "
"exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:24
msgid ""
"The difference between :rst:dir:`cpp:class` and :rst:dir:`cpp:struct` is "
"only cosmetic: the prefix rendered in the output, and the specifier shown in"
" the index."
msgstr ""
"A diferença entre :rst:dir:`cpp:class` e :rst:dir:`cpp:struct` é apenas "
"cosmética: o prefixo renderizado na saída e o especificador mostrado no "
"índice."

#: ../../sphinx/doc/usage/domains/cpp.rst:28
msgid "The class can be directly declared inside a nested scope, e.g.,::"
msgstr ""
"A classe pode ser declarada diretamente dentro de um escopo aninhado, por "
"exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:32
msgid "A class template can be declared::"
msgstr "Um modelo de classe pode ser declarado::"

#: ../../sphinx/doc/usage/domains/cpp.rst:36
msgid "or with a line break::"
msgstr "ou com uma quebra de linha::"

#: ../../sphinx/doc/usage/domains/cpp.rst:41
msgid "Full and partial template specialisations can be declared::"
msgstr ""
"As especializações de modelo completas e parciais podem ser declaradas::"

#: ../../sphinx/doc/usage/domains/cpp.rst:49
msgid "The :rst:dir:`cpp:struct` directive."
msgstr "A diretiva :rst:dir:`cpp:struct`."

#: ../../sphinx/doc/usage/domains/cpp.rst:54
msgid "Describe a function or member function, e.g.,::"
msgstr "Descreve uma função ou função-membro, por exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:80
msgid "Function templates can also be described::"
msgstr "Os modelos de função também podem ser descritos::"

#: ../../sphinx/doc/usage/domains/cpp.rst:85
msgid "and function template specialisations::"
msgstr "e especializações de modelo de função::"

#: ../../sphinx/doc/usage/domains/cpp.rst:93
msgid ""
"Ensures that the function's parameters will be emitted on a single logical "
"line, overriding :confval:`cpp_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""
"Garante que os parâmetros da função serão emitidos em uma única linha "
"lógica, substituindo :confval:`cpp_maximum_signature_line_length` e "
":confval:`maximum_signature_line_length`."

#: ../../sphinx/doc/usage/domains/cpp.rst:102
msgid "Describe a variable or member variable, e.g.,::"
msgstr "Descreve uma variável ou variável de membro, por exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:110
msgid "Variable templates can also be described::"
msgstr "Os modelos de variáveis também podem ser descritos::"

#: ../../sphinx/doc/usage/domains/cpp.rst:119
msgid ""
"Describe a type as in a typedef declaration, a type alias declaration, or "
"simply the name of a type with unspecified type, e.g.,::"
msgstr ""
"Descreve um tipo como em uma declaração de typedef, uma declaração de alias "
"de tipo ou simplesmente o nome de um tipo com tipo não especificado, por "
"exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:134
msgid "A type alias can also be templated::"
msgstr "Um alias de tipo também pode ser modelado::"

#: ../../sphinx/doc/usage/domains/cpp.rst:139
msgid "The example are rendered as follows."
msgstr "Os exemplos são renderizados como demonstrado a seguir."

#: ../../sphinx/doc/usage/domains/cpp.rst:145
msgid "A typedef-like declaration of a type."
msgstr "Uma declaração semelhante a typedef de um tipo."

#: ../../sphinx/doc/usage/domains/cpp.rst:151
msgid "Declaration of a type alias with unspecified type."
msgstr "Declaração de um alias de tipo com tipo não especificado."

#: ../../sphinx/doc/usage/domains/cpp.rst:157
msgid "Declaration of a type alias."
msgstr "Declaração de um alias de tipo."

#: ../../sphinx/doc/usage/domains/cpp.rst:168
msgid ""
"Describe a (scoped) enum, possibly with the underlying type specified.  Any "
"enumerators declared inside an unscoped enum will be declared both in the "
"enum scope and in the parent scope.  Examples::"
msgstr ""
"Descreve um enum (com escopo definido), possivelmente com o tipo subjacente "
"especificado. Quaisquer enumeradores declarados dentro de um enum sem escopo"
" serão declarados no escopo do enum e no escopo pai. Exemplos::"

#: ../../sphinx/doc/usage/domains/cpp.rst:192
msgid "Describe an enumerator, optionally with its value defined, e.g.,::"
msgstr ""
"Descreve um enumerador, opcionalmente com seu valor definido, por exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:200
msgid "Describe a union."
msgstr "Descreve uma união."

#: ../../sphinx/doc/usage/domains/cpp.rst:206
#: ../../sphinx/doc/usage/domains/cpp.rst:369
msgid ""
"The support for concepts is experimental. It is based on the current draft "
"standard and the Concepts Technical Specification. The features may change "
"as they evolve."
msgstr ""
"O suporte para conceitos é experimental. Baseia-se no projeto de padrão "
"atual e na Especificação Técnica dos Conceitos. Os recursos podem mudar à "
"medida que evoluem."

#: ../../sphinx/doc/usage/domains/cpp.rst:210
msgid ""
"Describe a concept. It must have exactly 1 template parameter list. The name"
" may be a nested name. Example::"
msgstr ""
"Descreve um conceito. Deve ter exatamente 1 lista de parâmetros de modelo. O"
" nome pode ser um nome aninhado. Exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:230
msgid "This will render as follows:"
msgstr "Isso será renderizado da seguinte forma:"

#: ../../sphinx/doc/usage/domains/cpp.rst:236
msgid ""
"Proxy to an element of a notional sequence that can be compared, indirected,"
" or incremented."
msgstr ""
"Proxy to an element of a notional sequence that can be compared, indirected,"
" or incremented."

#: ../../sphinx/doc/usage/domains/cpp.rst:239
msgid "**Notation**"
msgstr "**Notation**"

#: ../../sphinx/doc/usage/domains/cpp.rst:243
msgid "An lvalue."
msgstr "An lvalue."

#: ../../sphinx/doc/usage/domains/cpp.rst:245
msgid "**Valid Expressions**"
msgstr "**Valid Expressions**"

#: ../../sphinx/doc/usage/domains/cpp.rst:247
msgid ":cpp:expr:`*r`, when :cpp:expr:`r` is dereferenceable."
msgstr ":cpp:expr:`*r`, when :cpp:expr:`r` is dereferenceable."

#: ../../sphinx/doc/usage/domains/cpp.rst:248
msgid ""
":cpp:expr:`++r`, with return type :cpp:expr:`It&`, when :cpp:expr:`r` is "
"incrementable."
msgstr ""
":cpp:expr:`++r`, with return type :cpp:expr:`It&`, when :cpp:expr:`r` is "
"incrementable."

#: ../../sphinx/doc/usage/domains/cpp.rst:255
#: ../../sphinx/doc/usage/domains/cpp.rst:349
msgid "Options"
msgstr "Opções"

#: ../../sphinx/doc/usage/domains/cpp.rst:257
msgid "Some directives support options:"
msgstr "Algumas diretivas oferecem suporte às opções:"

#: ../../sphinx/doc/usage/domains/cpp.rst:259
msgid ""
"``:no-index-entry:`` and ``:no-contents-entry:``, see :ref:`basic-domain-"
"markup`."
msgstr ""
"``:no-index-entry:`` e ``:no-contents-entry:``, veja :ref:`basic-domain-"
"markup`."

#: ../../sphinx/doc/usage/domains/cpp.rst:260
msgid ""
"``:tparam-line-spec:``, for templated declarations. If specified, each "
"template parameter will be rendered on a separate line."
msgstr ""
"``:tparam-line-spec:``, para declarações com modelo. Se especificado, cada "
"parâmetro do modelo será renderizado em uma linha separada."

#: ../../sphinx/doc/usage/domains/cpp.rst:266
msgid "Anonymous Entities"
msgstr "Entidades anônimas"

#: ../../sphinx/doc/usage/domains/cpp.rst:268
msgid ""
"C++ supports anonymous namespaces, classes, enums, and unions. For the sake "
"of documentation they must be given some name that starts with ``@``, e.g., "
"``@42`` or ``@data``. These names can also be used in cross-references and "
"(type) expressions, though nested symbols will be found even when omitted. "
"The ``@...`` name will always be rendered as **[anonymous]** (possibly as a "
"link)."
msgstr ""
"C++ oferece suporte a espaços de nomes, classes, enumerações e uniões "
"anônimas. Para fins de documentação, eles devem receber algum nome que "
"comece com ``@``, por exemplo, ``@42`` ou ``@data``. Esses nomes também "
"podem ser usados ​​em referências cruzadas e expressões (de tipo), embora "
"símbolos aninhados sejam encontrados mesmo quando omitidos. O nome ``@...`` "
"sempre será renderizado como **[anonymous]** (possivelmente como um link)."

#: ../../sphinx/doc/usage/domains/cpp.rst:276
msgid "Example::"
msgstr "Exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:288
msgid "This will be rendered as:"
msgstr "Isso será renderizado como:"

#: ../../sphinx/doc/usage/domains/cpp.rst:306
msgid ""
"Explicit ref: :cpp:var:`Data::@data::a`. Short-hand ref: :cpp:var:`Data::a`."
msgstr ""
"Explicit ref: :cpp:var:`Data::@data::a`. Short-hand ref: :cpp:var:`Data::a`."

#: ../../sphinx/doc/usage/domains/cpp.rst:312
msgid "Aliasing Declarations"
msgstr "Fazendo alias de declarações"

#: ../../sphinx/doc/usage/domains/cpp.rst:314
msgid ""
"Sometimes it may be helpful list declarations elsewhere than their main "
"documentation, e.g., when creating a synopsis of a class interface. The "
"following directive can be used for this purpose."
msgstr ""
"Às vezes, declarações de lista podem ser úteis em outros lugares além da "
"documentação principal, por exemplo, ao criar uma sinopse de uma interface "
"de classe. A seguinte diretiva pode ser usada para esse propósito."

#: ../../sphinx/doc/usage/domains/cpp.rst:320
msgid ""
"Insert one or more alias declarations. Each entity can be specified as they "
"can in the :rst:role:`cpp:any` role. If the name of a function is given (as "
"opposed to the complete signature), then all overloads of the function will "
"be listed."
msgstr ""
"Insere uma ou mais declarações de alias. Cada entidade pode ser especificada"
" como pode no papel :rst:role:`cpp:any`. Se o nome de uma função for "
"fornecido (em oposição à assinatura completa), todas as sobrecargas da "
"função serão listadas."

#: ../../sphinx/doc/usage/domains/cpp.rst:325
msgid "For example::"
msgstr "Por exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:330
#: ../../sphinx/doc/usage/domains/cpp.rst:340
msgid "becomes"
msgstr "se torna"

#: ../../sphinx/doc/usage/domains/cpp.rst:335
msgid "whereas::"
msgstr "enquanto::"

#: ../../sphinx/doc/usage/domains/cpp.rst:352
msgid ""
"Insert nested declarations as well, up to the total depth given. Use 0 for "
"infinite depth and 1 for just the mentioned declaration. Defaults to 1."
msgstr ""
"Insere também declarações aninhadas, até a profundidade total fornecida. Use"
" 0 para profundidade infinita e 1 apenas para a declaração mencionada. O "
"padrão é 1."

#: ../../sphinx/doc/usage/domains/cpp.rst:360
msgid ""
"Skip the mentioned declarations and only render nested declarations. "
"Requires ``maxdepth`` either 0 or at least 2."
msgstr ""
"Ignora as declarações mencionadas e renderiza apenas declarações aninhadas. "
"Requer ``maxprofundidade`` 0 ou pelo menos 2."

#: ../../sphinx/doc/usage/domains/cpp.rst:367
msgid "Constrained Templates"
msgstr "Modelos restritos"

#: ../../sphinx/doc/usage/domains/cpp.rst:373
msgid "Sphinx does not currently support ``requires`` clauses."
msgstr "O Sphinx atualmente não tem suporte a cláusulas ``requires``."

#: ../../sphinx/doc/usage/domains/cpp.rst:376
msgid "Placeholders"
msgstr "Espaços reservados"

#: ../../sphinx/doc/usage/domains/cpp.rst:378
msgid ""
"Declarations may use the name of a concept to introduce constrained template"
" parameters, or the keyword ``auto`` to introduce unconstrained template "
"parameters::"
msgstr ""
"As declarações podem usar o nome de um conceito para introduzir parâmetros "
"de modelo restritos, ou a palavra-chave ``auto`` para introduzir parâmetros "
"de modelo irrestrito:"

#: ../../sphinx/doc/usage/domains/cpp.rst:392
msgid "Template Introductions"
msgstr "Introduções de modelos"

#: ../../sphinx/doc/usage/domains/cpp.rst:394
msgid ""
"Simple constrained function or class templates can be declared with a "
"`template introduction` instead of a template parameter list::"
msgstr ""
"Modelos restritos simples de classe e função podem ser declarados com uma "
"`introdução de modelo` em vez de uma lista de parâmetros de modelo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:407
msgid "They are rendered as follows."
msgstr "Eles são renderizados da seguinte maneira."

#: ../../sphinx/doc/usage/domains/cpp.rst:413
msgid ""
"A function template with a template parameter constrained to be an Iterator."
msgstr ""
"A function template with a template parameter constrained to be an Iterator."

#: ../../sphinx/doc/usage/domains/cpp.rst:419
msgid ""
"A class template with a template parameter constrained to be "
"LessThanComparable."
msgstr ""
"A class template with a template parameter constrained to be "
"LessThanComparable."

#: ../../sphinx/doc/usage/domains/cpp.rst:422
msgid ""
"Note however that no checking is performed with respect to parameter "
"compatibility. E.g., ``Iterator{A, B, C}`` will be accepted as an "
"introduction even though it would not be valid C++."
msgstr ""
"Observe, entretanto, que nenhuma verificação é realizada com relação à "
"compatibilidade dos parâmetros. Por exemplo, ``Iterator{A, B, C}`` será "
"aceito como uma introdução mesmo que não seja C++ válido."

#: ../../sphinx/doc/usage/domains/cpp.rst:427
msgid "Inline Expressions and Types"
msgstr "Tipos e expressões em lniha"

#: ../../sphinx/doc/usage/domains/cpp.rst:432
msgid ""
"Insert a C++ expression or type either as inline code (``cpp:expr``) or "
"inline text (``cpp:texpr``). For example::"
msgstr ""
"Insere uma expressão C++ ou digite como código embutido (``cpp:expr``) ou "
"texto embutido (``cpp:texpr``). Por exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:444
msgid "will be rendered as follows:"
msgstr "será renderizado da seguinte maneira:"

#: ../../sphinx/doc/usage/domains/cpp.rst:454
msgid ""
"An expression: :cpp:expr:`a * f(a)` (or as text: :cpp:texpr:`a * f(a)`)."
msgstr ""
"An expression: :cpp:expr:`a * f(a)` (or as text: :cpp:texpr:`a * f(a)`)."

#: ../../sphinx/doc/usage/domains/cpp.rst:456
msgid ""
"A type: :cpp:expr:`const MySortedContainer<int>&` (or as text "
":cpp:texpr:`const MySortedContainer<int>&`)."
msgstr ""
"A type: :cpp:expr:`const MySortedContainer<int>&` (or as text "
":cpp:texpr:`const MySortedContainer<int>&`)."

#: ../../sphinx/doc/usage/domains/cpp.rst:459
msgid "The :rst:role:`cpp:expr` role."
msgstr "O papel :rst:role:`cpp:expr`."

#: ../../sphinx/doc/usage/domains/cpp.rst:462
msgid "The :rst:role:`cpp:texpr` role."
msgstr "O papel :rst:role:`cpp:texpr`."

#: ../../sphinx/doc/usage/domains/cpp.rst:466
msgid "Namespacing"
msgstr "Usando espaços de nomes"

#: ../../sphinx/doc/usage/domains/cpp.rst:468
msgid ""
"Declarations in the C++ domain are as default placed in global scope.  The "
"current scope can be changed using three namespace directives.  They manage "
"a stack declarations where ``cpp:namespace`` resets the stack and changes a "
"given scope."
msgstr ""
"As declarações no domínio C++ são colocadas por padrão no escopo global. O "
"escopo atual pode ser alterado usando três diretivas de espaço de nomes. "
"Eles gerenciam declarações de pilha onde ``cpp:namespace`` redefine a pilha "
"e altera um determinado escopo."

#: ../../sphinx/doc/usage/domains/cpp.rst:473
msgid ""
"The ``cpp:namespace-push`` directive changes the scope to a given inner "
"scope of the current one."
msgstr ""
"A diretiva ``cpp:namespace-push`` altera o escopo para um determinado escopo"
" interno do atual."

#: ../../sphinx/doc/usage/domains/cpp.rst:476
msgid ""
"The ``cpp:namespace-pop`` directive undoes the most recent ``cpp:namespace-"
"push`` directive."
msgstr ""
"A diretiva ``cpp:namespace-pop`` desfaz a diretiva ``cpp:namespace-push`` "
"mais recente."

#: ../../sphinx/doc/usage/domains/cpp.rst:481
msgid ""
"Changes the current scope for the subsequent objects to the given scope, and"
" resets the namespace directive stack.  Note that the namespace does not "
"need to correspond to C++ namespaces, but can end in names of classes, "
"e.g.,::"
msgstr ""
"Altera o escopo atual dos objetos subsequentes para o escopo especificado e "
"redefine a pilha de diretivas de espaço de nomes. Observe que o espaço de "
"nomes não precisa corresponder aos espaços de nomes C++, mas pode terminar "
"em nomes de classes, por exemplo::"

#: ../../sphinx/doc/usage/domains/cpp.rst:487
msgid ""
"All subsequent objects will be defined as if their name were declared with "
"the scope prepended. The subsequent cross-references will be searched for "
"starting in the current scope."
msgstr ""
"Todos os objetos subsequentes serão definidos como se seus nomes tivessem "
"sido declarados com o escopo anexado. As referências cruzadas subsequentes "
"serão pesquisadas a partir do escopo atual."

#: ../../sphinx/doc/usage/domains/cpp.rst:491
msgid ""
"Using ``NULL``, ``0``, or ``nullptr`` as the scope will change to global "
"scope."
msgstr ""
"Usar ``NULL``, ``0`` ou ``nullptr`` como escopo mudará para escopo global."

#: ../../sphinx/doc/usage/domains/cpp.rst:494
msgid "A namespace declaration can also be templated, e.g.,::"
msgstr ""
"Uma declaração de espaço de nomes também pode ser modelada, por exemplo,::"

#: ../../sphinx/doc/usage/domains/cpp.rst:503
msgid ""
"declares ``size`` as a member function of the class template "
"``std::vector``.  Equivalently this could have been declared using::"
msgstr ""
"declara ``size`` como uma função membro do modelo de classe ``std::vector``."
" De forma equivalente, isso poderia ter sido declarado usando::"

#: ../../sphinx/doc/usage/domains/cpp.rst:511
msgid "or::"
msgstr "ou::"

#: ../../sphinx/doc/usage/domains/cpp.rst:518
msgid "Change the scope relatively to the current scope. For example, after::"
msgstr ""
"Altera o escopo relativamente ao escopo atual. Por exemplo, depois de::"

#: ../../sphinx/doc/usage/domains/cpp.rst:524
msgid "the current scope will be ``A::B::C::D``."
msgstr "o escopo atual será ``A::B::C::D``."

#: ../../sphinx/doc/usage/domains/cpp.rst:530
msgid ""
"Undo the previous ``cpp:namespace-push`` directive (*not* just pop a scope)."
" For example, after::"
msgstr ""
"Desfaz a diretiva ``cpp:namespace-push`` anterior (*não* apenas abre um "
"escopo). Por exemplo, depois de::"

#: ../../sphinx/doc/usage/domains/cpp.rst:539
msgid "the current scope will be ``A::B`` (*not* ``A::B::C``)."
msgstr "o escopo atual será ``A::B`` (*não* ``A::B::C``)."

#: ../../sphinx/doc/usage/domains/cpp.rst:541
msgid ""
"If no previous ``cpp:namespace-push`` directive has been used, but only a "
"``cpp:namespace`` directive, then the current scope will be reset to global "
"scope.  That is, ``.. cpp:namespace:: A::B`` is equivalent to::"
msgstr ""
"Se nenhuma diretiva ``cpp:namespace-push`` anterior tiver sido usada, mas "
"apenas uma diretiva ``cpp:namespace``, então o escopo atual será redefinido "
"para o escopo global. Ou seja, ``.. cpp:namespace:: A::B`` é equivalente a::"

#: ../../sphinx/doc/usage/domains/cpp.rst:552
msgid "Info field lists"
msgstr "Lista de campos de informações"

#: ../../sphinx/doc/usage/domains/cpp.rst:554
msgid ""
"All the C++ directives for declaring entities support the following info "
"fields (see also :ref:`info-field-lists`):"
msgstr ""
"Todas as diretivas C++ para declaração de entidades têm suporte aos "
"seguintes campos de informação (veja também :ref:`info-field-lists`):"

#: ../../sphinx/doc/usage/domains/cpp.rst:557
msgid "``tparam``: Description of a template parameter."
msgstr "``tparam``: Descrição de um parâmetro de modelo."

#: ../../sphinx/doc/usage/domains/cpp.rst:559
msgid ""
"The :rst:dir:`cpp:function` directive additionally supports the following "
"fields:"
msgstr ""
"A diretiva :rst:dir:`cpp:function` tem suporte adicionalmente aos seguintes "
"campos:"

#: ../../sphinx/doc/usage/domains/cpp.rst:562
msgid ""
"``param``, ``parameter``, ``arg``, ``argument``: Description of a parameter."
msgstr ""
"``param``, ``parameter``, ``arg``, ``argument``: Descrição de um parâmetro."

#: ../../sphinx/doc/usage/domains/cpp.rst:563
msgid "``returns``, ``return``: Description of a return value."
msgstr "``returns``, ``return``: Descrição de um valor de retorno."

#: ../../sphinx/doc/usage/domains/cpp.rst:564
msgid ""
"``retval``, ``retvals``: An alternative to ``returns`` for describing the "
"result of the function."
msgstr ""
"``retval``, ``retvals``: Uma alternativa a ``returns`` para descrever o "
"resultado da função."

#: ../../sphinx/doc/usage/domains/cpp.rst:566
msgid ""
"``throws``, ``throw``, ``exception``: Description of a possibly thrown "
"exception."
msgstr ""
"``throws``, ``throw``, ``exception``: Descrição de uma exceção possivelmente"
" lançada."

#: ../../sphinx/doc/usage/domains/cpp.rst:568
msgid "The ``retval`` field type."
msgstr "O tipo de campo ``retval``."

#: ../../sphinx/doc/usage/domains/cpp.rst:574
msgid "Cross-referencing"
msgstr "Fazendo referência cruzada"

#: ../../sphinx/doc/usage/domains/cpp.rst:576
msgid "These roles link to the given declaration types:"
msgstr "Esses papéis estão vinculados aos tipos de declaração fornecidos:"

#: ../../sphinx/doc/usage/domains/cpp.rst:589
msgid ""
"Reference a C++ declaration by name (see below for details).  The name must "
"be properly qualified relative to the position of the link."
msgstr ""
"Faz referência a uma declaração C++ por nome (veja detalhes abaixo). O nome "
"deve ser devidamente qualificado em relação à posição do link."

#: ../../sphinx/doc/usage/domains/cpp.rst:592
msgid ""
"The :rst:role:`cpp:struct` role as alias for the :rst:role:`cpp:class` role."
msgstr ""
"O papel :rst:role:`cpp:struct` como um alias para o papel "
":rst:role:`cpp:class`."

#: ../../sphinx/doc/usage/domains/cpp.rst:596
msgid "Note on References with Templates Parameters/Arguments"
msgstr "Nota sobre referências com parâmetros/argumentos de modelos"

#: ../../sphinx/doc/usage/domains/cpp.rst:598
msgid ""
"These roles follow the Sphinx :ref:`xref-syntax` rules. This means care must"
" be taken when referencing a (partial) template specialization, e.g. if the "
"link looks like this: ``:cpp:class:`MyClass<int>```. This is interpreted as "
"a link to ``int`` with a title of ``MyClass``. In this case, escape the "
"opening angle bracket with a backslash, like this: "
"``:cpp:class:`MyClass\\<int>```."
msgstr ""
"Esses papéis seguem as regras de :ref:`xref-syntax` do Sphinx. Isso "
"significa que deve-se ter cuidado ao fazer referência a uma especialização "
"de modelo (parcial), por exemplo. se o link for assim: "
"``:cpp:class:`MinhaClasse<int>```. Isto é interpretado como um link para "
"``int`` com o título ``MinhaClasse``. Nesse caso, escape o sinal de maior "
"que com uma barra invertida, como esta: ``:cpp:class:`MinhaClasse\\<int>```."

#: ../../sphinx/doc/usage/domains/cpp.rst:605
msgid ""
"When a custom title is not needed it may be useful to use the roles for "
"inline expressions, :rst:role:`cpp:expr` and :rst:role:`cpp:texpr`, where "
"angle brackets do not need escaping."
msgstr ""
"Quando um título personalizado não é necessário, pode ser útil usar os "
"papéis para expressões em linha, :rst:role:`cpp:expr` e "
":rst:role:`cpp:texpr`, onde os sinais de maior que não precisam de escape."

#: ../../sphinx/doc/usage/domains/cpp.rst:610
msgid "Declarations without template parameters and template arguments"
msgstr "Declarações sem parâmetros de modelo e argumentos de modelo"

#: ../../sphinx/doc/usage/domains/cpp.rst:612
msgid ""
"For linking to non-templated declarations the name must be a nested name, "
"e.g., ``f`` or ``MyClass::f``."
msgstr ""
"Para vincular a declarações não modeladas, o nome deve ser um nome aninhado,"
" por exemplo, ``f`` ou ``MinhaClasse::f``."

#: ../../sphinx/doc/usage/domains/cpp.rst:617
msgid "Overloaded (member) functions"
msgstr "Funções (membro) sobrecarregadas"

#: ../../sphinx/doc/usage/domains/cpp.rst:619
msgid ""
"When a (member) function is referenced using just its name, the reference "
"will point to an arbitrary matching overload. The :rst:role:`cpp:any` and "
":rst:role:`cpp:func` roles use an alternative format, which simply is a "
"complete function declaration. This will resolve to the exact matching "
"overload. As example, consider the following class declaration:"
msgstr ""
"Quando uma função (membro) é referenciada usando apenas seu nome, a "
"referência apontará para uma sobrecarga de correspondência arbitrária. Os "
"papéis :rst:role:`cpp:any` e :rst:role:`cpp:func` usam um formato "
"alternativo, que é simplesmente uma declaração de função completa. Isso "
"resolverá a sobrecarga de correspondência exata. Como exemplo, considere a "
"seguinte declaração de classe:"

#: ../../sphinx/doc/usage/domains/cpp.rst:644
msgid "References using the :rst:role:`cpp:func` role:"
msgstr "Referências usando o papel :rst:role:`cpp:func`:"

#: ../../sphinx/doc/usage/domains/cpp.rst:646
msgid "Arbitrary overload: ``C::f``, :cpp:func:`C::f`"
msgstr "Sobrecarga arbitrária: ``C::f``, :cpp:func:`C::f`"

#: ../../sphinx/doc/usage/domains/cpp.rst:647
msgid "Also arbitrary overload: ``C::f()``, :cpp:func:`C::f()`"
msgstr "Também sobrecarga arbitrária: ``C::f()``, :cpp:func:`C::f()`"

#: ../../sphinx/doc/usage/domains/cpp.rst:648
msgid "Specific overload: ``void C::f()``, :cpp:func:`void C::f()`"
msgstr "Sobrecarga específica: ``void C::f()``, :cpp:func:`void C::f()`"

#: ../../sphinx/doc/usage/domains/cpp.rst:649
msgid "Specific overload: ``void C::f(int)``, :cpp:func:`void C::f(int)`"
msgstr "Sobrecarga específica: ``void C::f(int)``, :cpp:func:`void C::f(int)`"

#: ../../sphinx/doc/usage/domains/cpp.rst:650
msgid ""
"Specific overload: ``void C::f(double)``, :cpp:func:`void C::f(double)`"
msgstr ""
"Sobrecarga específica: ``void C::f(double)``, :cpp:func:`void C::f(double)`"

#: ../../sphinx/doc/usage/domains/cpp.rst:651
msgid ""
"Specific overload: ``void C::f(double) const``, :cpp:func:`void C::f(double)"
" const`"
msgstr ""
"Sobrecarga específica: ``void C::f(double) const``, :cpp:func:`void "
"C::f(double) const`"

#: ../../sphinx/doc/usage/domains/cpp.rst:654
msgid ""
"Note that the :confval:`add_function_parentheses` configuration variable "
"does not influence specific overload references."
msgstr ""
"Observe que a variável de configuração :confval:`add_function_parentheses` "
"não influencia referências de sobrecarga específicas."

#: ../../sphinx/doc/usage/domains/cpp.rst:661
msgid "Templated declarations"
msgstr "Declarações modeladas"

#: ../../sphinx/doc/usage/domains/cpp.rst:663
#: ../../sphinx/doc/usage/domains/cpp.rst:706
msgid "Assume the following declarations."
msgstr "Considere as seguintes declarações."

#: ../../sphinx/doc/usage/domains/cpp.rst:679
msgid ""
"In general the reference must include the template parameter declarations, "
"and template arguments for the prefix of qualified names. For example:"
msgstr ""
"Em geral, a referência deve incluir as declarações de parâmetros do modelo e"
" os argumentos do modelo para o prefixo dos nomes qualificados. Por exemplo:"

#: ../../sphinx/doc/usage/domains/cpp.rst:682
msgid ""
"``template\\<typename TOuter> Wrapper::Outer`` "
"(:cpp:class:`template\\<typename TOuter> Wrapper::Outer`)"
msgstr ""
"``template\\<typename TOuter> Wrapper::Outer`` "
"(:cpp:class:`template\\<typename TOuter> Wrapper::Outer`)"

#: ../../sphinx/doc/usage/domains/cpp.rst:684
msgid ""
"``template\\<typename TOuter> template\\<typename TInner> "
"Wrapper::Outer<TOuter>::Inner`` (:cpp:class:`template\\<typename TOuter> "
"template\\<typename TInner> Wrapper::Outer<TOuter>::Inner`)"
msgstr ""
"``template\\<typename TOuter> template\\<typename TInner> "
"Wrapper::Outer<TOuter>::Inner`` (:cpp:class:`template\\<typename TOuter> "
"template\\<typename TInner> Wrapper::Outer<TOuter>::Inner`)"

#: ../../sphinx/doc/usage/domains/cpp.rst:687
msgid ""
"Currently the lookup only succeed if the template parameter identifiers are "
"equal strings.  That is, ``template\\<typename UOuter> Wrapper::Outer`` will"
" not work."
msgstr ""
"Atualmente, a pesquisa só é bem-sucedida se os identificadores dos "
"parâmetros do modelo forem strings iguais. Ou seja, ``template\\<typename "
"UOuter> Wrapper::Outer`` não funcionará."

#: ../../sphinx/doc/usage/domains/cpp.rst:691
msgid ""
"As a shorthand notation, if a template parameter list is omitted, then the "
"lookup will assume either a primary template or a non-template, but not a "
"partial template specialisation. This means the following references work as"
" well:"
msgstr ""
"Como uma notação abreviada, se uma lista de parâmetros do modelo for "
"omitida, a pesquisa presumirá um modelo primário ou um não modelo, mas não "
"uma especialização parcial do modelo. Isso significa que as seguintes "
"referências também funcionam:"

#: ../../sphinx/doc/usage/domains/cpp.rst:696
msgid "``Wrapper::Outer`` (:cpp:class:`Wrapper::Outer`)"
msgstr "``Wrapper::Outer`` (:cpp:class:`Wrapper::Outer`)"

#: ../../sphinx/doc/usage/domains/cpp.rst:698
msgid "``Wrapper::Outer::Inner`` (:cpp:class:`Wrapper::Outer::Inner`)"
msgstr "``Wrapper::Outer::Inner`` (:cpp:class:`Wrapper::Outer::Inner`)"

#: ../../sphinx/doc/usage/domains/cpp.rst:700
msgid ""
"``template\\<typename TInner> Wrapper::Outer::Inner`` "
"(:cpp:class:`template\\<typename TInner> Wrapper::Outer::Inner`)"
msgstr ""
"``template\\<typename TInner> Wrapper::Outer::Inner`` "
"(:cpp:class:`template\\<typename TInner> Wrapper::Outer::Inner`)"

#: ../../sphinx/doc/usage/domains/cpp.rst:704
msgid "(Full) Template Specialisations"
msgstr "Especializações (completas) de modelos"

#: ../../sphinx/doc/usage/domains/cpp.rst:733
msgid ""
"In general the reference must include a template parameter list for each "
"template argument list.  The full specialisation above can therefore be "
"referenced with ``template\\<> Outer\\<int>`` (:cpp:class:`template\\<> "
"Outer\\<int>`) and ``template\\<> template\\<> Outer\\<int>::Inner\\<bool>``"
" (:cpp:class:`template\\<> template\\<> Outer\\<int>::Inner\\<bool>`).  As a"
" shorthand the empty template parameter list can be omitted, e.g., "
"``Outer\\<int>`` (:cpp:class:`Outer\\<int>`) and "
"``Outer\\<int>::Inner\\<bool>`` (:cpp:class:`Outer\\<int>::Inner\\<bool>`)."
msgstr ""
"Em geral, a referência deve incluir uma lista de parâmetros de modelo para "
"cada lista de argumentos de modelo. A especialização completa acima pode, "
"portanto, ser referenciada com ``template\\<> Outer\\<int>`` "
"(:cpp:class:`template\\<> Outer\\<int>`) e ``template\\<> template\\<> "
"Outer\\<int>::Inner\\<bool>`` (:cpp:class:`template\\<> template\\<> "
"Outer\\<int>::Inner\\<bool>`). Como abreviação, a lista de parâmetros do "
"modelo vazio pode ser omitida, por exemplo, ``Outer\\<int>`` "
"(:cpp:class:`Outer\\<int>`) e ``Outer\\<int>::Inner\\<bool>`` "
"(:cpp:class:`Outer\\<int>::Inner\\<bool>`)."

#: ../../sphinx/doc/usage/domains/cpp.rst:743
msgid "Partial Template Specialisations"
msgstr "Especializações parciais de modelo"

#: ../../sphinx/doc/usage/domains/cpp.rst:745
msgid "Assume the following declaration."
msgstr "Considere a seguinte declaração."

#: ../../sphinx/doc/usage/domains/cpp.rst:752
msgid ""
"References to partial specialisations must always include the template "
"parameter lists, e.g., ``template\\<typename T> Outer\\<T*>`` "
"(:cpp:class:`template\\<typename T> Outer\\<T*>`).  Currently the lookup "
"only succeed if the template parameter identifiers are equal strings."
msgstr ""
"Referências a especializações parciais devem sempre incluir as listas de "
"parâmetros do modelo, por exemplo, ``template\\<typename T> Outer\\<T*>`` "
"(:cpp:class:`template\\<typename T> Outer\\<T*>` ). Atualmente, a pesquisa "
"só é bem-sucedida se os identificadores dos parâmetros do modelo forem "
"strings iguais."

#: ../../sphinx/doc/usage/domains/cpp.rst:758
msgid "Configuration Variables"
msgstr "Variáveis de configuração"

#: ../../sphinx/doc/usage/domains/cpp.rst:760
msgid "See :ref:`cpp-config`."
msgstr "Veja :ref:`cpp-config`."

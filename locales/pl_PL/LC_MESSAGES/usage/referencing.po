# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-28 00:52+0000\n"
"PO-Revision-Date: 2023-10-04 00:36+0000\n"
"Language-Team: Polish (Poland) (https://app.transifex.com/sphinx-doc/teams/15434/pl_PL/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl_PL\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && (n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

#: ../../sphinx/doc/usage/referencing.rst:5
msgid "Cross-references"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:7
msgid ""
"One of Sphinx's most useful features is creating automatic cross-references "
"through semantic cross-referencing roles. A cross reference to an object "
"description, such as ``:func:`spam```, will create a link to the place where"
" ``spam()`` is documented, appropriate to each output format (HTML, PDF, "
"ePUB, etc.)."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:16
msgid "Syntax"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:18
msgid ""
"Sphinx supports various cross-referencing roles to create links to other "
"elements in the documentation. In general, writing ``:role:`target``` "
"creates a link to the object called *target* of the type indicated by "
"*role*. The link's text depends the role but is often the same as or similar"
" to *target*."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:26
msgid "The behavior can be modified in the following ways:"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:28
msgid ""
"**Custom link text:** You can specify the link text explicitly using the "
"same notation as in reStructuredText :ref:`external links <rst-external-"
"links>`: ``:role:`custom text <target>``` will refer to *target* and display"
" *custom text* as the text of the link."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:34
msgid ""
"**Suppressed link:** Prefixing with an exclamation mark (``!``) prevents the"
" creation of a link but otherwise keeps the visual output of the role."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:38
msgid ""
"For example, writing ``:py:func:`!target``` displays :py:func:`!target`, "
"with no link generated."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:41
msgid ""
"This is helpful for cases in which the link target does not exist; e.g. "
"changelog entries that describe removed functionality, or third-party "
"libraries that don't support :doc:`intersphinx "
"</usage/extensions/intersphinx>`. Suppressing the link prevents warnings in "
":confval:`nitpicky` mode."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:47
msgid ""
"**Modified domain reference:** When :ref:`referencing domain objects <ref-"
"objects>`, a tilde ``~`` prefix shortens the link text to the last component"
" of the target. For example, ``:py:meth:`~queue.Queue.get``` will refer to "
"``queue.Queue.get`` but only display ``get`` as the link text."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:53
msgid ""
"In HTML output, the link's ``title`` attribute (that is e.g. shown as a "
"tool-tip on mouse-hover) will always be the full target name."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:61
msgid "Cross-referencing objects"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:63
msgid "These roles are described with their respective domains:"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:65
msgid ":ref:`C <c-xref-roles>`"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:66
msgid ":ref:`C++ <cpp-xref-roles>`"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:67
msgid ":ref:`JavaScript <js-xref-roles>`"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:68
msgid ":ref:`reStructuredText <rst-xref-roles>`"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:69
msgid ":ref:`Python <python-xref-roles>`"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:75
msgid "Cross-referencing arbitrary locations"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:79
msgid ""
"To support cross-referencing to arbitrary locations in any document, the "
"standard reStructuredText labels are used. For this to work label names must"
" be unique throughout the entire documentation. There are two ways in which "
"you can refer to labels:"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:85
msgid ""
"If you place a label directly before a section title, you can reference to "
"it with ``:ref:`label-name```.  For example::"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:97
msgid ""
"The ``:ref:`` role would then generate a link to the section, with the link "
"title being \"Section to cross-reference\".  This works just as well when "
"section and reference are in different source files."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:101
msgid "Automatic labels also work with figures. For example::"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:109
msgid ""
"In this case, a  reference ``:ref:`my-figure``` would insert a reference to "
"the figure with link text \"Figure caption\"."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:112
msgid ""
"The same works for tables that are given an explicit caption using the "
":dudir:`table` directive."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:115
msgid ""
"Labels that aren't placed before a section title can still be referenced, "
"but you must give the link an explicit title, using this syntax: "
"``:ref:`Link title <label-name>```."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:121
msgid ""
"Reference labels must start with an underscore. When referencing a label, "
"the underscore must be omitted (see examples above)."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:124
msgid ""
"Using :rst:role:`ref` is advised over standard reStructuredText links to "
"sections (like ```Section title`_``) because it works across files, when "
"section headings are changed, will raise warnings if incorrect, and works "
"for all builders that support cross-references."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:131
msgid "Cross-referencing documents"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:135
msgid "There is also a way to directly link to documents:"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:139
msgid ""
"Link to the specified document; the document name can be specified in "
"absolute or relative fashion.  For example, if the reference "
"``:doc:`parrot``` occurs in the document ``sketches/index``, then the link "
"refers to ``sketches/parrot``.  If the reference is ``:doc:`/people``` or "
"``:doc:`../people```, the link refers to ``people``."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:145
msgid ""
"If no explicit link text is given (like usual: ``:doc:`Monty Python members "
"</people>```), the link caption will be the title of the given document."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:150
msgid "Referencing downloadable files"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:156
msgid ""
"This role lets you link to files within your source tree that are not "
"reStructuredText documents that can be viewed, but files that can be "
"downloaded."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:160
msgid ""
"When you use this role, the referenced file is automatically marked for "
"inclusion in the output when building (obviously, for HTML output only). All"
" downloadable files are put into a ``_downloads/<unique hash>/`` "
"subdirectory of the output directory; duplicate filenames are handled."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:165
msgid "An example::"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:169
msgid ""
"The given filename is usually relative to the directory the current source "
"file is contained in, but if it absolute (starting with ``/``), it is taken "
"as relative to the top source directory."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:173
msgid ""
"The ``example.py`` file will be copied to the output directory, and a "
"suitable link generated to it."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:176
msgid ""
"Not to show unavailable download links, you should wrap whole paragraphs "
"that have this role::"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:184
msgid "Cross-referencing figures by figure number"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:188
msgid ""
":rst:role:`numref` role can also refer sections. And :rst:role:`numref` "
"allows ``{name}`` for the link text."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:194
msgid ""
"Link to the specified figures, tables, code-blocks and sections; the "
"standard reStructuredText labels are used. When you use this role, it will "
"insert a reference to the figure with link text by its figure number like "
"\"Fig. 1.1\"."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:199
msgid ""
"If an explicit link text is given (as usual: ``:numref:`Image of Sphinx "
"(Fig. %s) <my-figure>```), the link caption will serve as title of the "
"reference. As placeholders, `%s` and `{number}` get replaced by the figure "
"number and  `{name}` by the figure caption. If no explicit link text is "
"given, the :confval:`numfig_format` setting is used as fall-back default."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:206
msgid ""
"If :confval:`numfig` is ``False``, figures are not numbered, so this role "
"inserts not a reference but the label or the link text."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:210
msgid "Cross-referencing other items of interest"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:212
msgid ""
"The following roles do possibly create a cross-reference, but do not refer "
"to objects:"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:217
msgid ""
"A configuration value or setting. Index entries are generated. Also "
"generates a link to the matching :rst:dir:`confval` directive, if it exists."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:224
msgid ""
"An environment variable.  Index entries are generated.  Also generates a "
"link to the matching :rst:dir:`envvar` directive, if it exists."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:229
msgid ""
"The name of a grammar token (used to create links between "
":rst:dir:`productionlist` directives)."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:234
msgid ""
"The name of a keyword in Python.  This creates a link to a reference label "
"with that name, if it exists."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:239
msgid ""
"A command-line option to an executable program.  This generates a link to a "
":rst:dir:`option` directive, if it exists."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:243
msgid ""
"The following role creates a cross-reference to a term in a :ref:`glossary "
"<glossary-directive>`:"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:248
msgid ""
"Reference to a term in a glossary.  A glossary is created using the "
"``glossary`` directive containing a definition list with terms and "
"definitions.  It does not have to be in the same file as the ``term`` "
"markup, for example the Python docs have one global glossary in the "
"``glossary.rst`` file."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:254
msgid ""
"If you use a term that's not explained in a glossary, you'll get a warning "
"during build."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:261
msgid "Cross-referencing anything"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:267
msgid ""
"This convenience role tries to do its best to find a valid target for its "
"reference text."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:270
msgid ""
"First, it tries standard cross-reference targets that would be referenced by"
" :rst:role:`doc`, :rst:role:`ref` or :rst:role:`option`."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:273
msgid ""
"Custom objects added to the standard domain by extensions (see "
":meth:`.Sphinx.add_object_type`) are also searched."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:276
msgid ""
"Then, it looks for objects (targets) in all loaded domains.  It is up to the"
" domains how specific a match must be.  For example, in the Python domain a "
"reference of ``:any:`Builder``` would match the ``sphinx.builders.Builder`` "
"class."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:281
msgid ""
"If none or multiple targets are found, a warning will be emitted.  In the "
"case of multiple targets, you can change \"any\" to a specific role."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:284
msgid ""
"This role is a good candidate for setting :confval:`default_role`.  If you "
"do, you can write cross-references without a lot of markup overhead.  For "
"example, in this Python function documentation::"
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:293
msgid ""
"there could be references to a glossary term (usually ``:term:`handler```), "
"a Python module (usually ``:py:mod:`signal``` or ``:mod:`signal```) and a "
"section (usually ``:ref:`about-signals```)."
msgstr ""

#: ../../sphinx/doc/usage/referencing.rst:297
msgid ""
"The :rst:role:`any` role also works together with the "
":mod:`~sphinx.ext.intersphinx` extension: when no local cross-reference is "
"found, all object types of intersphinx inventories are also searched."
msgstr ""

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-03 01:11+0000\n"
"PO-Revision-Date: 2018-11-20 17:15+0000\n"
"Language-Team: Italian (Italy) (https://app.transifex.com/sphinx-doc/teams/15434/it_IT/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it_IT\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../sphinx/doc/usage/advanced/websupport/searchadapters.rst:6
msgid "Search adapters"
msgstr ""

#: ../../sphinx/doc/usage/advanced/websupport/searchadapters.rst:8
msgid ""
"To create a custom search adapter you will need to subclass the "
":class:`BaseSearch` class.  Then create an instance of the new class and "
"pass that as the *search* keyword argument when you create the "
":class:`~.WebSupport` object::"
msgstr ""

#: ../../sphinx/doc/usage/advanced/websupport/searchadapters.rst:17
msgid ""
"For more information about creating a custom search adapter, please see the "
"documentation of the :class:`BaseSearch` class below."
msgstr ""

#: ../../sphinx/doc/usage/advanced/websupport/searchadapters.rst:22
msgid "Defines an interface for search adapters."
msgstr ""

#: ../../sphinx/doc/usage/advanced/websupport/searchadapters.rst:26
msgid ""
"BaseSearch class is moved to sphinxcontrib.websupport.search from "
"sphinx.websupport.search."
msgstr ""

#: ../../sphinx/doc/usage/advanced/websupport/searchadapters.rst:30
msgid "Methods"
msgstr ""

#: ../../sphinx/doc/usage/advanced/websupport/searchadapters.rst:32
msgid ""
"The following methods are defined in the BaseSearch class. Some methods do "
"not need to be overridden, but some (:meth:`~BaseSearch.add_document` and "
":meth:`~BaseSearch.handle_query`) must be overridden in your subclass. For a"
" working example, look at the built-in adapter for whoosh."
msgstr ""

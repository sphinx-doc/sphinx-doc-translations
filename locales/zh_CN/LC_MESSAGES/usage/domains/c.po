# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Georg Brandl <g.brandl@gmx.net>, 2023
# cdarlint <cdarling@126.com>, 2023
# Lu <lu2github@gmail.com>, 2023
# Melia Lee <lixiuyu97@163.com>, 2023
# wendi cao <651645601@qq.com>, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-27 00:54+0000\n"
"PO-Revision-Date: 2023-10-03 00:37+0000\n"
"Last-Translator: wendi cao <651645601@qq.com>, 2023\n"
"Language-Team: Chinese (China) (https://app.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/usage/domains/c.rst:5
msgid "The C Domain"
msgstr "C域"

#: ../../sphinx/doc/usage/domains/c.rst:9
msgid "The C domain (name **c**) is suited for documentation of C API."
msgstr "C域(名称 **c**)适用于C API的文档。"

#: ../../sphinx/doc/usage/domains/c.rst:14
msgid "Describes a C struct member or variable. Example signature::"
msgstr "描述C结构成员或变量。签名示例："

#: ../../sphinx/doc/usage/domains/c.rst:18
msgid "The difference between the two directives is only cosmetic."
msgstr "这两个指令之间的区别只是表面上的。"

#: ../../sphinx/doc/usage/domains/c.rst:22
msgid "Describes a C function. The signature should be given as in C, e.g.::"
msgstr "描述C函数。签名应如C所示，例如::"

#: ../../sphinx/doc/usage/domains/c.rst:26
msgid ""
"Note that you don't have to backslash-escape asterisks in the signature, as "
"it is not parsed by the reStructuredText inliner."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:29
msgid ""
"In the description of a function you can use the following info fields (see "
"also :ref:`info-field-lists`)."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:32
msgid ""
"``param``, ``parameter``, ``arg``, ``argument``, Description of a parameter."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:34
msgid ""
"``type``: Type of a parameter, written as if passed to the "
":rst:role:`c:expr` role."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:36
msgid "``returns``, ``return``: Description of the return value."
msgstr "“returns”，“return”： 返回值的描述。"

#: ../../sphinx/doc/usage/domains/c.rst:37
msgid ""
"``rtype``: Return type, written as if passed to the :rst:role:`c:expr` role."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:39
msgid ""
"``retval``, ``retvals``: An alternative to ``returns`` for describing the "
"result of the function."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:42
msgid "The ``retval`` field type."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:45
#: ../../sphinx/doc/usage/domains/c.rst:218
msgid "For example::"
msgstr "例如："

#: ../../sphinx/doc/usage/domains/c.rst:55
msgid "which renders as"
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:0
msgid "no-contents-entry"
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:0
msgid "no-index-entry"
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:0
msgid "Parameters"
msgstr "参数"

#: ../../sphinx/doc/usage/domains/c.rst:64
msgid "description of the first parameter."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:65
msgid "description of the second parameter."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:0
msgid "Returns"
msgstr "返回"

#: ../../sphinx/doc/usage/domains/c.rst:66
msgid "a result."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:0
msgid "Return values"
msgstr "返回值"

#: ../../sphinx/doc/usage/domains/c.rst:67
msgid "under some conditions."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:68
msgid "under some other conditions as well."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:73
msgid ""
"Ensures that the function's parameters will be emitted on a single logical "
"line, overriding :confval:`c_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:83
msgid ""
"Describes a C macro, i.e., a C-language ``#define``, without the replacement"
" text."
msgstr "描述一个C宏，即，C语言的“#define”，不包含替换文本。"

#: ../../sphinx/doc/usage/domains/c.rst:86
msgid ""
"In the description of a macro you can use the same info fields as for the "
":rst:dir:`c:function` directive."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:89
msgid "The function style variant."
msgstr "函数样式的变体。"

#: ../../sphinx/doc/usage/domains/c.rst:95
msgid ""
"Ensures that the macro's parameters will be emitted on a single logical "
"line, overriding :confval:`c_maximum_signature_line_length` and "
":confval:`maximum_signature_line_length`."
msgstr ""

#: ../../sphinx/doc/usage/domains/c.rst:103
msgid "Describes a C struct."
msgstr "描述一个C结构。"

#: ../../sphinx/doc/usage/domains/c.rst:109
msgid "Describes a C union."
msgstr "描述C联。"

#: ../../sphinx/doc/usage/domains/c.rst:115
msgid "Describes a C enum."
msgstr "描述一个C枚举。"

#: ../../sphinx/doc/usage/domains/c.rst:121
msgid "Describes a C enumerator."
msgstr "描述C枚举数。"

#: ../../sphinx/doc/usage/domains/c.rst:128
msgid ""
"Describes a C type, either as a typedef, or the alias for an unspecified "
"type."
msgstr "将C类型描述为类型定义或未指定类型的别名。"

#: ../../sphinx/doc/usage/domains/c.rst:134
msgid "Cross-referencing C constructs"
msgstr "交叉引用C构造"

#: ../../sphinx/doc/usage/domains/c.rst:136
msgid ""
"The following roles create cross-references to C-language constructs if they"
" are defined in the documentation:"
msgstr "如果在文档中定义了以下角色，则会创建对C语言构造的交叉引用::c:func:"

#: ../../sphinx/doc/usage/domains/c.rst:150
msgid ""
"Reference a C declaration, as defined above. Note that :rst:role:`c:member`,"
" :rst:role:`c:data`, and :rst:role:`c:var` are equivalent."
msgstr ""
"引用C声明，如上所述。注意 :rst:role:`c:member`、 "
":rst:role:`c:data`和:rst:role:`c:var`是等价的。"

#: ../../sphinx/doc/usage/domains/c.rst:154
msgid "The var, struct, union, enum, and enumerator roles."
msgstr "var、struct、union、枚举和枚举器角色。"

#: ../../sphinx/doc/usage/domains/c.rst:159
msgid "Anonymous Entities"
msgstr "匿名的实体"

#: ../../sphinx/doc/usage/domains/c.rst:161
msgid ""
"C supports anonymous structs, enums, and unions. For the sake of "
"documentation they must be given some name that starts with ``@``, e.g., "
"``@42`` or ``@data``. These names can also be used in cross-references, "
"though nested symbols will be found even when omitted. The ``@...`` name "
"will always be rendered as **[anonymous]** (possibly as a link)."
msgstr ""
"C++ 支持匿名命名空间、类、枚举和联合。为了文档起见，必须给它们一些以 “@ ”开头的名字，例如，“@42”或 "
"“@data”。这些名称也可以在交叉引用中使用，尽管嵌套符号即使在省略时也会被找到。 “@...”名称将始终显示为**[匿名]**（可能作为链接）。"

#: ../../sphinx/doc/usage/domains/c.rst:169
msgid "Example::"
msgstr "例如::"

#: ../../sphinx/doc/usage/domains/c.rst:181
msgid "This will be rendered as:"
msgstr "这将呈现为："

#: ../../sphinx/doc/usage/domains/c.rst:199
msgid "Explicit ref: :c:var:`Data.@data.a`. Short-hand ref: :c:var:`Data.a`."
msgstr "显式 ref: :c:var:`Data.@data.a` 。简写 ref: :c:var:`Data.a`。"

#: ../../sphinx/doc/usage/domains/c.rst:205
msgid "Aliasing Declarations"
msgstr "别名声明"

#: ../../sphinx/doc/usage/domains/c.rst:209
msgid ""
"Sometimes it may be helpful list declarations elsewhere than their main "
"documentation, e.g., when creating a synopsis of an interface. The following"
" directive can be used for this purpose."
msgstr "有时，除了主要文档之外，它可能是有用的列表声明，例如，在创建类接口的概要时。以下指令可用于此目的。"

#: ../../sphinx/doc/usage/domains/c.rst:215
msgid ""
"Insert one or more alias declarations. Each entity can be specified as they "
"can in the :rst:role:`c:any` role."
msgstr "插入一个或多个别名声明。可以在 :rst:role:`c:any`角色中指定每个实体。"

#: ../../sphinx/doc/usage/domains/c.rst:226
msgid "becomes"
msgstr "变成"

#: ../../sphinx/doc/usage/domains/c.rst:243
msgid "Options"
msgstr "选项"

#: ../../sphinx/doc/usage/domains/c.rst:246
msgid ""
"Insert nested declarations as well, up to the total depth given. Use 0 for "
"infinite depth and 1 for just the mentioned declaration. Defaults to 1."
msgstr "也可以插入嵌套的声明，最多可以达到给定的总深度。使用0表示无限的深度，使用1表示 mentioned declaration 。默认为1。"

#: ../../sphinx/doc/usage/domains/c.rst:254
msgid ""
"Skip the mentioned declarations and only render nested declarations. "
"Requires ``maxdepth`` either 0 or at least 2."
msgstr "跳过 mentioned declarations ，只渲染嵌套的声明。要求 ``maxdepth`` 为0或至少为2。"

#: ../../sphinx/doc/usage/domains/c.rst:264
msgid "Inline Expressions and Types"
msgstr "内联表达式和类型"

#: ../../sphinx/doc/usage/domains/c.rst:269
msgid ""
"Insert a C expression or type either as inline code (``cpp:expr``) or inline"
" text (``cpp:texpr``). For example::"
msgstr "插入C++ 表达式或键入内联代码（“`cpp:expr”）或内联文本 （“cpp:texpr”）。例如："

#: ../../sphinx/doc/usage/domains/c.rst:281
msgid "will be rendered as follows:"
msgstr "将呈现如下："

#: ../../sphinx/doc/usage/domains/c.rst:291
msgid "An expression: :c:expr:`a * f(a)` (or as text: :c:texpr:`a * f(a)`)."
msgstr "表达式:  :c:expr:`a * f(a)`（或文本:  :c:texpr:`a * f(a)`）。"

#: ../../sphinx/doc/usage/domains/c.rst:293
msgid "A type: :c:expr:`const Data*` (or as text :c:texpr:`const Data*`)."
msgstr "类型: :c:expr:`const Data*`（或作为文本 :c:texpr:`const Data*`）。"

#: ../../sphinx/doc/usage/domains/c.rst:300
msgid "Namespacing"
msgstr "命名空间"

#: ../../sphinx/doc/usage/domains/c.rst:304
msgid ""
"The C language it self does not support namespacing, but it can sometimes be"
" useful to emulate it in documentation, e.g., to show alternate "
"declarations. The feature may also be used to document members of "
"structs/unions/enums separate from their parent declaration."
msgstr ""
"C语言本身不支持命名空间，但有时在文档中模拟它会很有用，例如，显示替代声明。该特性还可以用于将结构体/联合/枚举的成员从其父声明中分离出来。"

#: ../../sphinx/doc/usage/domains/c.rst:309
msgid ""
"The current scope can be changed using three namespace directives.  They "
"manage a stack declarations where ``c:namespace`` resets the stack and "
"changes a given scope."
msgstr "可以使用三个名称空间指令更改当前范围。它们管理一个堆栈声明，其中“c:namespace”重置堆栈并更改给定的范围。"

#: ../../sphinx/doc/usage/domains/c.rst:313
msgid ""
"The ``c:namespace-push`` directive changes the scope to a given inner scope "
"of the current one."
msgstr "“cpp:namespace-push” 指令将范围更改为当前范围的给定内部范围。"

#: ../../sphinx/doc/usage/domains/c.rst:316
msgid ""
"The ``c:namespace-pop`` directive undoes the most recent ``c:namespace-"
"push`` directive."
msgstr "“cpp:namespace-pop” 指令撤消了最新的 “cpp:namespace-push” 指令。"

#: ../../sphinx/doc/usage/domains/c.rst:321
msgid ""
"Changes the current scope for the subsequent objects to the given scope, and"
" resets the namespace directive stack. Note that nested scopes can be "
"specified by separating with a dot, e.g.::"
msgstr "将后续对象的当前范围更改为给定范围，并重置命名空间指令堆栈。请注意，命名空间不需要与C++ 命名空间相对应，但可以以类的名称结尾，例如::"

#: ../../sphinx/doc/usage/domains/c.rst:327
msgid ""
"All subsequent objects will be defined as if their name were declared with "
"the scope prepended. The subsequent cross-references will be searched for "
"starting in the current scope."
msgstr "将定义所有后续对象，就好像它们的名称是在前置范围的情况下声明的一样。将在当前范围中搜索后续交叉引用。"

#: ../../sphinx/doc/usage/domains/c.rst:331
msgid "Using ``NULL`` or ``0`` as the scope will change to global scope."
msgstr "使用“NULL”，“0”或“nullptr”作为范围将变为全局范围。"

#: ../../sphinx/doc/usage/domains/c.rst:335
msgid "Change the scope relatively to the current scope. For example, after::"
msgstr "相对于当前范围更改范围。例如，之后："

#: ../../sphinx/doc/usage/domains/c.rst:341
msgid "the current scope will be ``A.B.C.D``."
msgstr "当前范围将是“A.B.C.D”。"

#: ../../sphinx/doc/usage/domains/c.rst:345
msgid ""
"Undo the previous ``c:namespace-push`` directive (*not* just pop a scope). "
"For example, after::"
msgstr "撤消之前的“c:namespace-push”指令（*不* 只是弹出作用域）。例如，之后："

#: ../../sphinx/doc/usage/domains/c.rst:354
msgid "the current scope will be ``A.B`` (*not* ``A.B.C``)."
msgstr "当前范围将是“A.”（*不是*“A.B.C”）。"

#: ../../sphinx/doc/usage/domains/c.rst:356
msgid ""
"If no previous ``c:namespace-push`` directive has been used, but only a "
"``c:namespace`` directive, then the current scope will be reset to global "
"scope.  That is, ``.. c:namespace:: A.B`` is equivalent to::"
msgstr ""
"如果没有使用先前的“c:namespace-push”指令，但只使用“c:namespace”指令，则当前作用域将重置为全局作用域。也就是说，“.. "
"c:namespace:: A.B”相当于::"

#: ../../sphinx/doc/usage/domains/c.rst:365
msgid "Configuration Variables"
msgstr "配置变量"

#: ../../sphinx/doc/usage/domains/c.rst:367
msgid "See :ref:`c-config`."
msgstr "请参阅 :ref:`c-config`。"

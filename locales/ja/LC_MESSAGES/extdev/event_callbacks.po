# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-17 00:49+0000\n"
"PO-Revision-Date: 2024-06-24 06:45+0000\n"
"Last-Translator: Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/sphinx-doc/teams/15434/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/extdev/event_callbacks.rst:4
msgid "Event callbacks API"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:6
msgid ""
"Connecting callback functions to events is a simple way to extend Sphinx, by"
" hooking into the build process at various points."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:9
msgid ""
"Use :meth:`.Sphinx.connect` in an extension's ``setup`` function, or a "
"``setup`` function in your projects :file:`conf.py`, to connect functions to"
" the events:"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:23
msgid ""
"Extensions can add their own events by using :meth:`.Sphinx.add_event`, and "
"calling them them with :meth:`.Sphinx.emit` or "
":meth:`.Sphinx.emit_firstresult`."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:28
msgid "Core events overview"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:30
msgid "Below is an overview of the core event that happens during a build."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:79
msgid ""
"Here is also a flow diagram of the events, within the context of the Sphinx "
"build process:"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:82
msgid "Sphinx core events flow"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:86
msgid "Core event details"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:88
msgid "Here is a more detailed list of these events."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:0
msgid "Parameters"
msgstr "パラメータ"

#: ../../sphinx/doc/extdev/event_callbacks.rst:92
#: ../../sphinx/doc/extdev/event_callbacks.rst:101
#: ../../sphinx/doc/extdev/event_callbacks.rst:108
#: ../../sphinx/doc/extdev/event_callbacks.rst:125
#: ../../sphinx/doc/extdev/event_callbacks.rst:142
#: ../../sphinx/doc/extdev/event_callbacks.rst:160
#: ../../sphinx/doc/extdev/event_callbacks.rst:179
#: ../../sphinx/doc/extdev/event_callbacks.rst:201
#: ../../sphinx/doc/extdev/event_callbacks.rst:214
#: ../../sphinx/doc/extdev/event_callbacks.rst:223
#: ../../sphinx/doc/extdev/event_callbacks.rst:247
#: ../../sphinx/doc/extdev/event_callbacks.rst:264
#: ../../sphinx/doc/extdev/event_callbacks.rst:277
#: ../../sphinx/doc/extdev/event_callbacks.rst:297
#: ../../sphinx/doc/extdev/event_callbacks.rst:315
#: ../../sphinx/doc/extdev/event_callbacks.rst:325
#: ../../sphinx/doc/extdev/event_callbacks.rst:335
#: ../../sphinx/doc/extdev/event_callbacks.rst:345
#: ../../sphinx/doc/extdev/event_callbacks.rst:364
#: ../../sphinx/doc/extdev/event_callbacks.rst:377
#: ../../sphinx/doc/extdev/event_callbacks.rst:416
msgid ":class:`.Sphinx`"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:93
msgid ":class:`.Config`"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:95
msgid "Emitted when the config object has been initialized."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:103
msgid ""
"Emitted when the builder object has been created (available as "
"``app.builder``)."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:109
#: ../../sphinx/doc/extdev/event_callbacks.rst:126
#: ../../sphinx/doc/extdev/event_callbacks.rst:143
#: ../../sphinx/doc/extdev/event_callbacks.rst:224
#: ../../sphinx/doc/extdev/event_callbacks.rst:278
#: ../../sphinx/doc/extdev/event_callbacks.rst:280
#: ../../sphinx/doc/extdev/event_callbacks.rst:298
#: ../../sphinx/doc/extdev/event_callbacks.rst:316
#: ../../sphinx/doc/extdev/event_callbacks.rst:326
msgid ":class:`.BuildEnvironment`"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:110
#: ../../sphinx/doc/extdev/event_callbacks.rst:111
#: ../../sphinx/doc/extdev/event_callbacks.rst:112
msgid "``Set[str]``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:0
msgid "returns"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:113
msgid "``Sequence[str]`` of additional docnames to re-read"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:115
msgid ""
"Emitted when the environment determines which source files have changed and "
"should be re-read. *added*, *changed* and *removed* are sets of docnames "
"that the environment has determined. You can return a list of docnames to "
"re-read in addition to these."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:127
#: ../../sphinx/doc/extdev/event_callbacks.rst:161
#: ../../sphinx/doc/extdev/event_callbacks.rst:202
#: ../../sphinx/doc/extdev/event_callbacks.rst:203
#: ../../sphinx/doc/extdev/event_callbacks.rst:266
#: ../../sphinx/doc/extdev/event_callbacks.rst:378
#: ../../sphinx/doc/extdev/event_callbacks.rst:379
msgid "``str``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:129
msgid ""
"Emitted when all traces of a source file should be cleaned from the "
"environment, that is, if the source file is removed or before it is freshly "
"read. This is for extensions that keep their own caches in attributes of the"
" environment."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:134
msgid ""
"For example, there is a cache of all modules on the environment. When a "
"source file has been changed, the cache's entries for the file are cleared, "
"since the module declarations could have been removed from the file."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:144
#: ../../sphinx/doc/extdev/event_callbacks.rst:279
msgid "``list[str]``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:146
msgid ""
"Emitted after the environment has determined the list of all added and "
"changed files and just before it reads them. It allows extension authors to "
"reorder the list of docnames (*inplace*) before processing, or add more "
"docnames that Sphinx did not consider changed (but never add any docnames "
"that are not in :attr:`.found_docs`)."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:153
msgid ""
"You can also remove document names; do this with caution since it will make "
"Sphinx treat changed files as unchanged."
msgstr ""
"イベントハンドラはドキュメント名をリストから削除することもできます; "
"注意深くこの方法を利用することで、Sphinxに変更済みのファイルを未変更であるとして扱わせることができます。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:162
#: ../../sphinx/doc/extdev/event_callbacks.rst:186
msgid ""
"``list[str]`` with a single element, representing the content of the "
"included file."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:166
msgid "Emitted when a source file has been read."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:168
msgid ""
"You can process the ``content`` and replace this item to implement source-"
"level transformations."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:171
msgid ""
"For example, if you want to use ``$`` signs to delimit inline math, like in "
"LaTeX, you can use a regular expression to replace ``$...$`` by "
"``:math:`...```."
msgstr ""
"もしも、LaTeXと同じように、 ``$`` 記号を、インラインの数式の区切り文字にしたい場合には、このイベントハンドラの中で、正規表現を使用して "
"``$...$`` を ``:math:`...``` に置き換えることで実現できます。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:180
msgid ""
":class:`~pathlib.Path` representing the included file relative to the "
":term:`source directory`."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:183
msgid ""
"``str`` of the document name that contains the :dudir:`include` directive."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:190
msgid "Emitted when a file has been read with the :dudir:`include` directive."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:192
msgid ""
"You can process the ``content`` and replace this item to transform the "
"included content, as with the :event:`source-read` event."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:197
msgid "The :dudir:`include` directive and the :event:`source-read` event."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:204
msgid ":class:`.desc_content`"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:206
msgid ""
"Emitted when an object description directive has run.  The *domain* and "
"*objtype* arguments are strings indicating object description of the object."
" And *contentnode* is a content for the object.  It can be modified in-"
"place."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:215
#: ../../sphinx/doc/extdev/event_callbacks.rst:265
msgid ":class:`docutils.nodes.document`"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:217
msgid ""
"Emitted when a doctree has been parsed and read by the environment, and is "
"about to be pickled. The ``doctree`` can be modified in-place."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:225
msgid ""
"The :class:`.pending_xref` node to be resolved. Its ``reftype``, "
"``reftarget``, ``modname`` and ``classname`` attributes determine the type "
"and target of the reference."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:228
msgid ""
"The node that carries the text and formatting inside the future reference "
"and should be a child of the returned reference node."
msgstr "このノードは、将来の参照が持つ、テキストとフォーマット情報を持ちます。これは返される参照ノードの子供にならなければなりません。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:230
msgid ""
"A new node to be inserted in the document tree in place of the node, or "
"``None`` to let other handlers try."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:233
msgid ""
"Emitted when a cross-reference to an object cannot be resolved. If the event"
" handler can resolve the reference, it should return a new docutils node to "
"be inserted in the document tree in place of the node *node*.  Usually this "
"node is a :class:`~nodes.reference` node containing *contnode* as a child. "
"If the handler can not resolve the cross-reference, it can either return "
"``None`` to let other handlers try, or raise :class:`~sphinx.errors.NoUri` "
"to prevent other handlers in trying and suppress a warning about this cross-"
"reference being unresolved."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:248
msgid "The :class:`.Domain` of the missing reference."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:249
msgid "The :class:`.pending_xref` node that could not be resolved."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:250
msgid "``True`` if a warning was emitted, else ``None``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:252
msgid ""
"Emitted when a cross-reference to an object cannot be resolved even after "
":event:`missing-reference`. If the event handler can emit warnings for the "
"missing reference, it should return ``True``. The configuration variables "
":confval:`nitpick_ignore` and :confval:`nitpick_ignore_regex` prevent the "
"event from being emitted for the corresponding nodes."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:268
msgid ""
"Emitted when a doctree has been \"resolved\" by the environment, that is, "
"all references have been resolved and TOCs have been inserted.  The "
"*doctree* can be modified in place."
msgstr ""
"環境がdoctreeに関して\"resolved(解決)\"と判断したときに発行されます。これは、すべての参照が解決され、目次が挿入された時、ということになります。"
" *doctree* はこのイベントハンドラ内で操作できます。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:272
msgid ""
"Here is the place to replace custom nodes that don't have visitor methods in"
" the writers, so that they don't cause errors when the writers encounter "
"them."
msgstr ""
"このイベントは、ライタークラスにビジターメソッドが存在しない、カスタムのノードを置換して処理するのに使用できます。もしもここで設定しない場合、未知のノードを見つけると、ライターはエラーを出しますが、設定することでエラーが出なくなります。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:282
msgid ""
"This event is only emitted when parallel reading of documents is enabled.  "
"It is emitted once for every subprocess that has read some documents."
msgstr ""
"このイベントはドキュメントの並列読み込みが有効の場合にのみ発行されます。それぞれのサブプロセスがドキュメントを読み込んだ場合に一度だけ発行されます。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:285
msgid ""
"You must handle this event in an extension that stores data in the "
"environment in a custom location.  Otherwise the environment in the main "
"process will not be aware of the information stored in the subprocess."
msgstr ""
"このイベントは拡張機能が特定の場所の環境中にデータを保存する場合に使用される必要があります。使用しないと、サブプロセス中で保存された情報をメインプロセスの環境内で利用できなくなります。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:289
msgid ""
"*other* is the environment object from the subprocess, *env* is the "
"environment from the main process.  *docnames* is a set of document names "
"that have been read in the subprocess."
msgstr ""
"*other* はサブプロセス中での環境、*env* はメインプロセスでの環境です。*docnames* "
"はこのサブプロセスにおいて読み込まれたドキュメント名のセットです。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:299
#: ../../sphinx/doc/extdev/event_callbacks.rst:317
msgid "iterable of ``str``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:301
msgid ""
"Emitted after reading all documents, when the environment and all doctrees "
"are now up-to-date."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:304
msgid ""
"You can return an iterable of docnames from the handler.  These documents "
"will then be considered updated, and will be (re-)written during the writing"
" phase."
msgstr ""
"イベントハンドラより、ドキュメント名のイテレータを返すことができます。これらのドキュメントはアップデートされたとみなされ、書き込みフェイズにて新規書き込み(または書き換え)が行われます。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:310
msgid "The handlers' return value is now used."
msgstr "イベントハンドラからの戻り値が利用されるようになりました。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:319
msgid ""
"Emitted when the environment determines which source files have changed and "
"should be re-read. You can return an iterable of docnames to re-read."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:328
msgid ""
"Emitted when Consistency checks phase.  You can check consistency of "
"metadata for whole of documents."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:336
msgid ":class:`.Builder`"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:338
msgid "Emitted before the builder starts to resolve and write documents."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:346
msgid "``Exception`` or ``None``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:348
msgid ""
"Emitted when a build has finished, before Sphinx exits, usually used for "
"cleanup.  This event is emitted even when the build process raised an "
"exception, given as the *exception* argument.  The exception is reraised in "
"the application after the event handlers have run.  If the build process "
"raised no exception, *exception* will be ``None``.  This allows to customize"
" cleanup actions depending on the exception status."
msgstr ""
"ビルドが完了し、Sphinxが終了する際に発行されます。通常はクリーンアップに使用されます。このイベントは、ビルドプロセスが例外を上げたときにも発行されます。その場合には、"
" *exception* "
"引数が渡されます。アプリケーションの中で発生した例外は、このイベントハンドラが終了した段階で、再度投げられます。もしもビルドプロセスが例外を発生しなかった場合には、"
" *exception* は ``None`` になります。これによって、例外の種類ごとの、クリーンアップの処理をカスタム化できます。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:358
msgid "Builder specific events"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:360
msgid "These events are emitted by specific builders."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:365
msgid ""
"iterable of ``(pagename, context, templatename)`` where *pagename* and "
"*templatename* are strings and *context* is a ``dict[str, Any]``."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:369
msgid "Emitted when the HTML builder is starting to write non-document pages."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:371
msgid "You can add pages to write by returning an iterable from this event."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:380
msgid "``dict[str, Any]``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:381
msgid ":class:`docutils.nodes.document` or ``None``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:382
#: ../../sphinx/doc/extdev/event_callbacks.rst:418
msgid "``str`` or ``None``"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:384
msgid ""
"Emitted when the HTML builder has created a context dictionary to render a "
"template with -- this can be used to add custom elements to the context."
msgstr ""
"HTMLビルダーがコンテキストの辞書を作り、テンプレートを使用してレンダリングを行う時に発行されます。このイベントは、追加のカスタムの要素をコンテキストに追加する場合に使用できます。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:387
msgid ""
"The *pagename* argument is the canonical name of the page being rendered, "
"that is, without ``.html`` suffix and using slashes as path separators. The "
"*templatename* is the name of the template to render, this will be "
"``'page.html'`` for all pages from reStructuredText documents."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:392
msgid ""
"The *context* argument is a dictionary of values that are given to the "
"template engine to render the page and can be modified to include custom "
"values."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:396
msgid ""
"The *doctree* argument will be a doctree when the page is created from a "
"reStructuredText documents; it will be ``None`` when the page is created "
"from an HTML template alone."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:400
msgid ""
"You can return a string from the handler, it will then replace "
"``'page.html'`` as the HTML template for this page."
msgstr ""
"イベントハンドラは文字列を返すことができます、この文字列は ``'page.html'`` "
"に代わりHTMLテンプレートとして、このページのレンダリングに利用されるテンプレート名になります。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:405
msgid ""
"You can install JS/CSS files for the specific page via "
":meth:`.Sphinx.add_js_file` and :meth:`.Sphinx.add_css_file` (since v3.5.0)."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:411
msgid "The return value can now specify a template name."
msgstr "戻り値により使用するテンプレート名を指定できるようになりました。"

#: ../../sphinx/doc/extdev/event_callbacks.rst:417
msgid "``str`` of the collected URI"
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:420
msgid "Emitted when the linkcheck builder collects hyperlinks from document."
msgstr ""

#: ../../sphinx/doc/extdev/event_callbacks.rst:422
msgid "The event handlers can modify the URI by returning a string."
msgstr ""

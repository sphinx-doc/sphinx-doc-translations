# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Georg Brandl <g.brandl@gmx.net>, 2018
# Yinian Chin <yinian1992@live.com>, 2018
# cdarlint <cdarling@126.com>, 2018
# Melia Lee <lixiuyu97@163.com>, 2020
# wendi cao <651645601@qq.com>, 2020
# Lu <lu2github@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-18 00:49+0000\n"
"PO-Revision-Date: 2018-02-12 13:46+0000\n"
"Last-Translator: Lu <lu2github@gmail.com>, 2022\n"
"Language-Team: Chinese (China) (https://app.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/glossary.rst:4
msgid "Glossary"
msgstr "术语表"

#: ../../sphinx/doc/glossary.rst:7
msgid "builder"
msgstr "构建器"

#: ../../sphinx/doc/glossary.rst:9
msgid ""
"A class (inheriting from :class:`~sphinx.builders.Builder`) that takes "
"parsed documents and performs an action on them.  Normally, builders "
"translate the documents to an output format, but it is also possible to use "
"builders that e.g. check for broken links in the documentation, or build "
"coverage information."
msgstr ""
"一个类（继承自： :class:`~sphinx.builders.Builder` "
"）接收已解析的文档并对其执行操作。通常，生成器将文档转换为输出格式，但也可以用生成器来检查文档中的换行，或评估覆盖情况。"

#: ../../sphinx/doc/glossary.rst:15
msgid ""
"See :doc:`/usage/builders/index` for an overview over Sphinx's built-in "
"builders."
msgstr "请参见：doc:`/usage/builders/index`查看Sphinx内置构建器的概述。"

#: ../../sphinx/doc/glossary.rst:17
msgid "configuration directory"
msgstr "配置目录"

#: ../../sphinx/doc/glossary.rst:19
msgid ""
"The directory containing :file:`conf.py`.  By default, this is the same as "
"the :term:`source directory`, but can be set differently with the **-c** "
"command-line option."
msgstr ""
"包含：文件的目录：`conf.py`. 默认情况下，这与：term:`source "
"directory`相同，但是可以使用**-c**命令行选项进行不同的设置。"

#: ../../sphinx/doc/glossary.rst:22
msgid "directive"
msgstr "指令"

#: ../../sphinx/doc/glossary.rst:24
msgid ""
"A reStructuredText markup element that allows marking a block of content "
"with special meaning.  Directives are supplied not only by docutils, but "
"Sphinx and custom extensions can add their own.  The basic directive syntax "
"looks like this:"
msgstr ""
"一种重新构造的文本标记元素，允许用特殊含义标记一个内容块。指令不仅由docutils提供，Sphinx和自定义扩展也可以添加它们自己的。基本指令语法如下所示："

#: ../../sphinx/doc/glossary.rst:36
msgid "See :ref:`rst-directives` for more information."
msgstr "有关详细信息，请参见：ref:`rst directives'。"

#: ../../sphinx/doc/glossary.rst:37
msgid "document name"
msgstr "文档名"

#: ../../sphinx/doc/glossary.rst:39
msgid ""
"Since reStructuredText source files can have different extensions (some "
"people like ``.txt``, some like ``.rst`` -- the extension can be configured "
"with :confval:`source_suffix`) and different OSes have different path "
"separators, Sphinx abstracts them: :dfn:`document names` are always relative"
" to the :term:`source directory`, the extension is stripped, and path "
"separators are converted to slashes.  All values, parameters and such "
"referring to \"documents\" expect such document names."
msgstr ""

#: ../../sphinx/doc/glossary.rst:48
msgid ""
"Examples for document names are ``index``, ``library/zipfile``, or "
"``reference/datamodel/types``.  Note that there is no leading or trailing "
"slash."
msgstr ""
"文档名的示例有“index”、“library/zipfile”或“reference/datamodel/types”。请注意，没有前导或尾随斜杠。"

#: ../../sphinx/doc/glossary.rst:51
msgid "domain"
msgstr "域"

#: ../../sphinx/doc/glossary.rst:53
msgid ""
"A domain is a collection of markup (reStructuredText :term:`directive`\\ s "
"and :term:`role`\\ s) to describe and link to :term:`object`\\ s belonging "
"together, e.g. elements of a programming language.  Directive and role names"
" in a domain have names like ``domain:name``, e.g. ``py:function``."
msgstr ""
"域是一组标记（structuredText:term:`directive`\\s和：term:`role`\\s），用于描述和链接到：term:`object`\\s，属于一起，例如编程语言的元素。域中的指令名和角色名的名称如下``域名：name``，例如`py:function``。"

#: ../../sphinx/doc/glossary.rst:58
msgid ""
"Having domains means that there are no naming problems when one set of "
"documentation wants to refer to e.g. C++ and Python classes.  It also means "
"that extensions that support the documentation of whole new languages are "
"much easier to write."
msgstr "拥有域意味着当一组文档引用（例如c++和Python类）时不会出现命名问题。这还意味着支持全新语言文档的扩展更容易编写。"

#: ../../sphinx/doc/glossary.rst:63
msgid "For more information, refer to :doc:`/usage/domains/index`."
msgstr ""

#: ../../sphinx/doc/glossary.rst:64
msgid "environment"
msgstr "环境"

#: ../../sphinx/doc/glossary.rst:66
msgid ""
"A structure where information about all documents under the root is saved, "
"and used for cross-referencing.  The environment is pickled after the "
"parsing stage, so that successive runs only need to read and parse new and "
"changed documents."
msgstr "保存根目录下所有文档的信息并用于交叉引用的结构。环境在解析阶段之后被处理，因此后续运行只需要读取和解析新的和更改的文档。"

#: ../../sphinx/doc/glossary.rst:70
msgid "extension"
msgstr "插件"

#: ../../sphinx/doc/glossary.rst:72
msgid ""
"A custom :term:`role`, :term:`directive` or other aspect of Sphinx that "
"allows users to modify any aspect of the build process within Sphinx."
msgstr "自定义：term:`role`，：term:`directive`或Sphinx的其他方面，允许用户修改Sphinx中构建过程的任何方面。"

#: ../../sphinx/doc/glossary.rst:75
msgid "For more information, refer to :doc:`/usage/extensions/index`."
msgstr "有关详细信息，请参阅：doc:`/usage/extensions/index`。"

#: ../../sphinx/doc/glossary.rst:76
msgid "master document"
msgstr "主控文件"

#: ../../sphinx/doc/glossary.rst:77
msgid "root document"
msgstr ""

#: ../../sphinx/doc/glossary.rst:79
msgid "The document that contains the root :rst:dir:`toctree` directive."
msgstr "包含根目录的文档：rst:方向：`toctree`指令。"

#: ../../sphinx/doc/glossary.rst:80
msgid "object"
msgstr "对象"

#: ../../sphinx/doc/glossary.rst:82
msgid ""
"The basic building block of Sphinx documentation.  Every \"object "
"directive\" (e.g. :rst:dir:`py:function` or :rst:dir:`object`) creates such "
"a block; and most objects can be cross-referenced to."
msgstr ""

#: ../../sphinx/doc/glossary.rst:85
msgid "RemoveInSphinxXXXWarning"
msgstr "清除sphinx的警告"

#: ../../sphinx/doc/glossary.rst:87
msgid ""
"The feature which is warned will be removed in Sphinx-XXX version. It "
"usually caused from Sphinx extensions which is using deprecated. See also "
":ref:`when-deprecation-warnings-are-displayed`."
msgstr ""
"在Sphinx XXX版本中，警告的功能将被删除。它通常是由Sphinx扩展引起的，它使用了不推荐使用的扩展。另请参阅：ref:`当显示不推荐警告时'。"

#: ../../sphinx/doc/glossary.rst:90
msgid "role"
msgstr "角色"

#: ../../sphinx/doc/glossary.rst:92
msgid ""
"A reStructuredText markup element that allows marking a piece of text. Like "
"directives, roles are extensible.  The basic syntax looks like this: "
"``:rolename:`content```.  See :ref:`rst-inline-markup` for details."
msgstr ""
"允许标记一段文本的structedText标记元素。与指令一样，角色也是可扩展的。基本语法如下：``:rolename:`content````。有关详细信息，请参见：ref:`rst"
" inline markup`。"

#: ../../sphinx/doc/glossary.rst:95
msgid "source directory"
msgstr "源目录"

#: ../../sphinx/doc/glossary.rst:97
msgid ""
"The directory which, including its subdirectories, contains all source files"
" for one Sphinx project."
msgstr "包含一个Sphinx项目的所有源文件的目录，包括它的子目录。"

#: ../../sphinx/doc/glossary.rst:99
msgid "reStructuredText"
msgstr "reStructuredText"

#: ../../sphinx/doc/glossary.rst:101
msgid ""
"An easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and "
"parser system."
msgstr "一个易读的，你看到的是你得到的明文标记语法和解析器系统。"

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Georg Brandl <g.brandl@gmx.net>, 2018
# gilberto dos santos alves <gsavix@gmail.com>, 2019
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2019
# Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-18 00:49+0000\n"
"PO-Revision-Date: 2018-06-26 15:58+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/sphinx-doc/teams/15434/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:4
msgid ":mod:`sphinx.ext.autodoc` -- Include documentation from docstrings"
msgstr ":mod:`sphinx.ext.autodoc` - Inclui documentação das docstrings"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:15
msgid ""
"This extension can import the modules you are documenting, and pull in "
"documentation from docstrings in a semi-automatic way."
msgstr ""
"Essa extensão pode importar módulos que estão sendo documentados, e carregar"
" na documentação a partir de docstrings de forma semiautomática."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:20
msgid ""
":mod:`~sphinx.ext.autodoc` **imports** the modules to be documented. If any "
"modules have side effects on import, these will be executed by ``autodoc`` "
"when :program:`sphinx-build` is run."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:24
msgid ""
"If you document scripts (as opposed to library modules), make sure that the "
"main routine is protected by an ``if __name__ == '__main__'`` condition."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:28
msgid ""
"For this to work, the docstrings must of course be written in correct "
"reStructuredText. You can then use all of the usual Sphinx markup in the "
"docstrings, and it will end up correctly in the documentation. Together with"
" hand-written documentation, this technique eases the pain of having to "
"maintain two locations for documentation, while at the same time avoiding "
"auto-generated-looking pure API documentation."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:36
msgid ""
"If you prefer `NumPy`_ or `Google`_ style docstrings over reStructuredText, "
"you can also enable the :mod:`napoleon <sphinx.ext.napoleon>` extension. "
":mod:`!napoleon` is a preprocessor that converts docstrings to correct "
"reStructuredText before ``autodoc`` processes them."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:46
msgid "Getting started"
msgstr "Primeiros passos"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:50
msgid "Setup"
msgstr "Configuração"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:52
msgid ""
"Activate the plugin by adding ``'sphinx.ext.autodoc'`` to the "
":confval:`extensions` list in :file:`conf.py`:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:64
msgid "Ensuring the code can be imported"
msgstr "Garantir que o código possa ser importado"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:66
msgid ""
":mod:`~sphinx.ext.autodoc` analyses the code and docstrings by introspection"
" after **importing the modules**. For importing to work, you have to make "
"sure that your modules can be found by Sphinx and that dependencies can be "
"resolved (if your module does ``import foo``, but ``foo`` is not available "
"in the python environment that Sphinx runs in, your module import will "
"fail)."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:73
msgid "There are two ways to ensure this:"
msgstr "Existem duas maneiras de garantir isso:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:75
msgid ""
"Use an environment that contains your package and Sphinx. This can e.g. be "
"your local development environment (with an editable install), or an "
"environment in CI in which you install Sphinx and your package. The regular "
"installation process ensures that your package can be found by Sphinx and "
"that all dependencies are available."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:81
msgid ""
"It is alternatively possible to patch the Sphinx run so that it can operate "
"directly on the sources; e.g. if you want to be able to do a Sphinx build "
"from a source checkout."
msgstr ""
"Alternativamente, é possível corrigir a execução do Sphinx para que ele "
"possa operar diretamente nas fontes; por exemplo, se você quiser fazer uma "
"construção de Sphinx a partir de um checkout local de fontes."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:85
msgid ""
"Patch :data:`sys.path` in :file:`conf.py` to include your source path. For "
"example if you have a repository structure with :file:`doc/conf.py` and your"
" package is at :file:`src/my_package`, then you should add the following to "
"your :file:`conf.py`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:97
msgid ""
"To cope with missing dependencies, specify the missing modules in the "
":confval:`autodoc_mock_imports` setting."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:102
msgid "Usage"
msgstr "Uso"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:104
msgid ""
"You can now use the :ref:`autodoc-directives` to add formatted documentation"
" for Python code elements like functions, classes, modules, etc. For "
"example, to document the function ``io.open()``, reading its signature and "
"docstring from the source file, you'd write:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:113
msgid ""
"You can also document whole classes or even modules automatically, using "
"member options for the auto directives, like:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:122
msgid ""
"As a hint to autodoc extension, you can put a ``::`` separator between the "
"module name and the object name to let autodoc know the correct module, if "
"it is ambiguous:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:132
msgid "Marking objects as public or private"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:134
msgid ""
"autodoc considers a member private if its docstring contains ``:meta "
"private:`` in its :ref:`info-field-lists`. For example:"
msgstr ""
"autodoc considera um membro privado se sua docstring contém ``:meta "
"private:`` em sua :ref:`info-field-lists`. Por exemplo:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:148
msgid ""
"autodoc considers a member public if its docstring contains ``:meta "
"public:`` in its :ref:`info-field-lists`, even if it starts with an "
"underscore. For example:"
msgstr ""
"autodoc considera um membro público se sua docstring contém ``:meta "
"public:`` em sua :ref:`info-field-lists`, mesmo se começar com um "
"sublinhado. Por exemplo:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:163
msgid ""
"autodoc considers a variable member does not have any default value if its "
"docstring contains ``:meta hide-value:`` in its :ref:`info-field-lists`. "
"Example:"
msgstr ""
"autodoc considera que um membro variável não tem nenhum valor padrão se sua "
"docstring contém ``:meta hide-value:`` em sua :ref:`info-field-lists`. "
"Exemplo:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:177
msgid "Doc comments and docstrings"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:179
msgid ""
"Python has no built-in support for docstrings for module data members or "
"class attributes. To allow documenting these, ``autodoc`` recognises a "
"special format of :ref:`comment <python:comments>` called a 'doc comment' or"
" 'documentation comment'."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:184
msgid ""
"These comments start with a colon and an optional space character, ``'#:'`` "
"or ``'#: '``. To be recognised, the comments must appear either on the same "
"line as the variable or on one or more lines before the variable. Multi-line"
" doc-comments must always  appear on the lines before the variable's "
"definition."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:191
msgid ""
"For example, all three of the following variables have valid doc-comments:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:205
msgid ""
"Alternatively, ``autodoc`` can recognise a docstring on the line immediately"
" following the definition."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:208
msgid ""
"In the the following class definition, all attributes have documentation "
"recognised by ``autodoc``:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:236
msgid "Directives"
msgstr "Diretivas"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:238
msgid ""
":mod:`autodoc` provides several directives that are versions of the usual "
":rst:dir:`py:module`, :rst:dir:`py:class` and so forth. On parsing time, "
"they import the corresponding module and extract the docstring of the given "
"objects, inserting them into the page source under a suitable "
":rst:dir:`py:module`, :rst:dir:`py:class` etc. directive."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:247
msgid ""
"Just as :rst:dir:`py:class` respects the current :rst:dir:`py:module`, "
":rst:dir:`autoclass` will also do so. Likewise, :rst:dir:`automethod` will "
"respect the current :rst:dir:`py:class`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:253
msgid "Default directive options"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:255
msgid ""
"To make any of the options described below the default, use the "
":confval:`autodoc_default_options` dictionary in :file:`conf.py`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:258
msgid ""
"If using defaults for the ``:members:``, ``:exclude-members:``, ``:private-"
"members:``, or ``:special-members:`` options, setting the option on a "
"directive will override the default. Instead, to extend the default list "
"with the per-directive option, the list may be prepended with a plus sign "
"(``+``), as follows:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:272
msgid ""
"If using :confval:`autodoc_default_options`, the defaults can be disabled "
"per-directive with the negated form, :samp:`:no-{option}:` as an option of "
"the directive For example:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:284
msgid "Automatically document modules"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:288
msgid ""
"Document a module. By default, the directive only inserts the docstring of "
"the module itself:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:295
#: ../../sphinx/doc/usage/extensions/autodoc.rst:531
#: ../../sphinx/doc/usage/extensions/autodoc.rst:797
#: ../../sphinx/doc/usage/extensions/autodoc.rst:871
msgid "will produce source like this:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:303
#: ../../sphinx/doc/usage/extensions/autodoc.rst:539
msgid ""
"The directive can also contain content of its own, which will be inserted "
"into the resulting non-auto directive source after the docstring (but before"
" any automatic member documentation)."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:307
#: ../../sphinx/doc/usage/extensions/autodoc.rst:543
#: ../../sphinx/doc/usage/extensions/autodoc.rst:883
msgid ""
"Therefore, you can also mix automatic and non-automatic member "
"documentation, as follows:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:320
#: ../../sphinx/doc/usage/extensions/autodoc.rst:572
#: ../../sphinx/doc/usage/extensions/autodoc.rst:849
#: ../../sphinx/doc/usage/extensions/autodoc.rst:899
msgid "Options"
msgstr "Opções"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:324
msgid ""
"Do not generate an index entry for the documented module or any auto-"
"documented members."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:332
msgid ""
"Indicate platforms on which the module is available. This is identical to "
":rst:dir:`py:module`'s ``:platform:`` option."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:338
msgid ""
"A sentence describing the module's purpose. This is identical to "
":rst:dir:`py:module`'s ``:synopsis:`` option."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:346
msgid ""
"Mark a module as deprecated. This is identical to :rst:dir:`py:module`'s "
"``:deprecated:`` option."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:354
msgid "Do not use ``__all__`` when analysing the module to document."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:359
#: ../../sphinx/doc/usage/extensions/autodoc.rst:605
msgid "Options for selecting members to document"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:363
msgid "Generate automatic documentation for all members of the target module:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:370
msgid ""
"By default, ``autodoc`` only includes public members with a docstring or "
":ref:`doc-comment <doc-comment>` (``#:``). If ``__all__`` exists, it will be"
" used to define which members are public, unless the :rst:dir:`:ignore-"
"module-all: <automodule:ignore-module-all>` option is set."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:376
#: ../../sphinx/doc/usage/extensions/autodoc.rst:620
msgid ""
"To only document certain members, an explicit comma-separated list may be "
"used as the argument to ``:members:``:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:387
#: ../../sphinx/doc/usage/extensions/autodoc.rst:631
msgid "Exclude the given names from the members to document. For example:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:401
msgid ""
"To prevent documentation of imported classes or functions, in an "
":rst:dir:`!automodule` directive with the ``members`` option set, only "
"module members where the ``__module__`` attribute is equal to the module "
"name given to ``automodule`` will be documented."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:406
msgid ""
"Set the ``imported-members`` option if you want to prevent this behavior and"
" document all available members."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:409
msgid ""
"Note that attributes from imported modules will not be documented, because "
"attribute documentation is discovered by parsing the source file of the "
"current module."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:418
msgid ""
"Generate automatic documentation for members of the target module that don't"
" have a docstring or doc-comment. For example:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:431
msgid ""
"Generate automatic documentation for private members of the target module. "
"This includes names with a leading underscore (e.g. ``_private``) and those "
"members explicitly marked as private with ``:meta private:``."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:441
#: ../../sphinx/doc/usage/extensions/autodoc.rst:708
msgid ""
"To only document certain private members, an explicit comma-separated list "
"may be used as the argument to ``:private-members:``:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:451
#: ../../sphinx/doc/usage/extensions/autodoc.rst:479
#: ../../sphinx/doc/usage/extensions/autodoc.rst:746
msgid "The option can now take a comma-separated list of arguments."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:457
msgid ""
"Generate automatic documentation for special members of the target module, "
"also known as :ref:`'dunder' names <python:specialnames>`. This includes all"
" names enclosed with a double-underscore, e.g. ``__special__``:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:468
#: ../../sphinx/doc/usage/extensions/autodoc.rst:735
msgid ""
"To only document certain special members, an explicit comma-separated list "
"may be used as the argument to ``:special-members:``:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:483
#: ../../sphinx/doc/usage/extensions/autodoc.rst:750
msgid "Options for documented members"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:487
#: ../../sphinx/doc/usage/extensions/autodoc.rst:754
msgid ""
"Choose the ordering of automatically documented members (default: "
"``alphabetical``). This overrides the :confval:`autodoc_member_order` "
"setting."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:491
msgid "``alphabetical``: Use simple alphabetical order."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:493
msgid ""
"``groupwise``: Group by object type (class, function, etc), use alphabetical"
" order within groups."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:496
msgid ""
"``bysource``: Use the order of objects in the module's source. The "
"``__all__`` variable can be used to override this order."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:500
#: ../../sphinx/doc/usage/extensions/autodoc.rst:767
msgid ""
"Note that for source order, the module must be a Python module with the "
"source code available."
msgstr ""
"Observe que, para a ordem de origem, o módulo deve ser um módulo Python com "
"o código-fonte disponível."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:504
#: ../../sphinx/doc/usage/extensions/autodoc.rst:771
msgid "Support the ``'bysource'`` option."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:510
msgid ""
"Enable the :rst:dir:`:show-inheritance: <autoclass:show-inheritance>` option"
" for all members of the module, if ``:members:`` is enabled."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:518
msgid "Automatically document classes or exceptions"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:523
msgid ""
"Document a class. For exception classes, prefer ``.. autoexception::``. By "
"default, the directive only inserts the docstring of the class itself:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:556
#: ../../sphinx/doc/usage/extensions/autodoc.rst:833
msgid "Advanced usage"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:557
#: ../../sphinx/doc/usage/extensions/autodoc.rst:834
msgid ""
"It is possible to override the signature for explicitly documented callable "
"objects (functions, methods, classes) with the regular syntax that will "
"override the signature gained from introspection:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:567
#: ../../sphinx/doc/usage/extensions/autodoc.rst:844
msgid ""
"This is useful if the signature from the method is hidden by a decorator."
msgstr ""
"Isso é útil se a assinatura do método estiver oculta por um decorador."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:576
#: ../../sphinx/doc/usage/extensions/autodoc.rst:903
msgid ""
"Do not generate an index entry for the documented class or any auto-"
"documented members."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:584
msgid ""
"Select which docstring will be used for the main body of the directive. This"
" overrides the global value of :confval:`autoclass_content`. The possible "
"values are:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:588
msgid ""
"``class``: Only use the class's docstring. The :meth:`!__init__` method can "
"be separately documented using the ``:members:`` option or "
":rst:dir:`automethod`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:592
msgid "``init``: Only use the docstring of the :meth:`!__init__` method."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:594
msgid ""
"``both``: Use both, appending the docstring of the :meth:`!__init__` method "
"to the class's docstring."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:598
msgid ""
"If the :meth:`!__init__` method doesn't exist or has a blank docstring, "
"``autodoc`` will attempt to use the :meth:`!__new__` method's docstring, if "
"it exists and is not blank."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:609
msgid "Generate automatic documentation for all members of the target class:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:616
msgid ""
"By default, ``autodoc`` only includes public members with a docstring or "
":ref:`doc-comment <doc-comment>` (``#:``) that are attributes of the target "
"class (i.e. not inherited)."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:645
msgid ""
"To generate automatic documentation for members inherited from base classes,"
" use the ``:inherited-members:`` option:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:654
msgid ""
"This can be combined with the ``:undoc-members:`` option to generate "
"automatic documentation for *all* available members of the class."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:657
msgid ""
"The members of classes listed in the argument to ``:inherited-members:`` are"
" excluded from the automatic documentation. This defaults to "
":py:class:`python:object` if no argument is provided, meaning that members "
"of the ``object`` class are not documented. To include these, use ``None`` "
"as the argument."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:663
msgid ""
"For example; If your class ``MyList`` is derived from ``list`` class and you"
" don't want to document ``list.__len__()``, you should specify a option "
"``:inherited-members: list`` to avoid special members of list class."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:669
msgid ""
"Should any of the inherited members use a format other than reStructuredText"
" for their docstrings, there may be markup warnings or errors."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:675
msgid ""
"``:inherited-members:`` now takes the name of a base class to exclude as an "
"argument."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:679
msgid "A comma separated list of base class names can be used."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:685
msgid ""
"Generate automatic documentation for members of the target class that don't "
"have a docstring or doc-comment. For example:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:698
msgid ""
"Generate automatic documentation for private members of the target class. "
"This includes names with a leading underscore (e.g. ``_private``) and those "
"members explicitly marked as private with ``:meta private:``."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:718
msgid "The option can now take arguments."
msgstr "A opção agora pode receber argumentos."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:724
msgid ""
"Generate automatic documentation for special members of the target class, "
"also known as :ref:`'dunder' names <python:specialnames>`. This includes all"
" names enclosed with a double-underscore, e.g. ``__special__``:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:758
msgid "``'alphabetical'``: Use simple alphabetical order."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:760
msgid ""
"``'groupwise'``: Group by object type (class, function, etc), use "
"alphabetical order within groups."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:763
msgid ""
"``'bysource'``: Use the order of objects in the module's source. The "
"``__all__`` variable can be used to override this order."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:777
msgid "Insert the class's base classes after the class signature."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:783
msgid "Automatically document function-like objects"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:790
msgid ""
"Document a function, method, property, or decorator. By default, the "
"directive only inserts the docstring of the function itself:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:805
#: ../../sphinx/doc/usage/extensions/autodoc.rst:879
msgid ""
"The directive can also contain content of its own, which will be inserted "
"into the resulting non-auto directive source after the docstring."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:809
msgid ""
"Therefore, you can also mix automatic and non-automatic documentation, as "
"follows:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:818
msgid ":rst:dir:`autodecorator`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:820
msgid ":rst:dir:`autoproperty`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:825
msgid ""
"If you document decorated functions or methods, keep in mind that "
"``autodoc`` retrieves its docstrings by importing the module and inspecting "
"the ``__doc__`` attribute of the given function or method. That means that "
"if a decorator replaces the decorated function with another, it must copy "
"the original ``__doc__`` to the new function."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:853
msgid "Do not generate an index entry for the documented function."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:859
msgid "Automatically document attributes or data"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:864
msgid ""
"Document a module level variable or constant ('data') or class attribute. By"
" default, the directive only inserts the docstring of the variable itself:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:892
msgid ""
":rst:dir:`autodata` and :rst:dir:`autoattribute` can now extract docstrings."
msgstr ""
":rst:dir:`autodata` e :rst:dir:`autoattribute` agora podem extrair "
"docstrings."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:895
msgid "Doc-comments are now allowed on the same line of an assignment."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:913
msgid ""
"By default, ``autodoc`` attempts to obtain the type annotation and value of "
"the variable by introspection, displaying it after the variable's name. To "
"override this, a custom string for the variable's value may be used as the "
"argument to ``annotation``."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:919
msgid ""
"For example, if the runtime value of ``FILE_MODE`` is ``0o755``, the "
"displayed value will be ``493`` (as ``oct(493) == '0o755'``). This can be "
"fixed by setting ``:annotation: = 0o755``."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:923
msgid ""
"If ``:annotation:`` is used without arguments, no value or type hint will be"
" shown for the variable."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:930
msgid ""
"To display the type hint of the variable without a value, use the ``:no-"
"value:`` option. If both the ``:annotation:`` and ``:no-value:`` options are"
" used, ``:no-value:`` has no effect."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:937
msgid "Configuration"
msgstr "Configuração"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:939
msgid "There are also config values that you can set:"
msgstr "Existem também valores de configuração que você pode definir:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:0
msgid "Type"
msgstr "Type"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:0
msgid "Default"
msgstr "Default"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:945
msgid ""
"This value selects what content will be inserted into the main body of an "
":rst:dir:`autoclass` directive.  The possible values are:"
msgstr ""
"Este valor seleciona qual conteúdo será inserido no corpo principal de uma "
"diretiva :rst:dir:`autoclass`. Os valores possíveis são:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:948
msgid "``'class'``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:949
msgid ""
"Only the class' docstring is inserted.  You can still document ``__init__`` "
"as a separate method using :rst:dir:`automethod` or the ``members`` option "
"to :rst:dir:`autoclass`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:952
msgid "``'both'``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:953
msgid ""
"Both the class' and the ``__init__`` method's docstring are concatenated and"
" inserted."
msgstr ""
"As docstrings da classe e do método ``__init__`` são concatenadas e "
"inseridas."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:955
msgid "``'init'``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:956
msgid "Only the ``__init__`` method's docstring is inserted."
msgstr "Somente a docstring do método ``__init__`` é inserida."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:960
msgid ""
"If the class has no ``__init__`` method or if the ``__init__`` method's "
"docstring is empty, but the class has a ``__new__`` method's docstring, it "
"is used instead."
msgstr ""
"Se a classe não tiver o método ``__init__`` ou se a docstring do método "
"``__init__`` estiver vazia, mas a classe tem a docstring do método "
"``__new__``, ela é usada no lugar."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:970
msgid ""
"This value selects how the signature will be displayed for the class defined"
" by :rst:dir:`autoclass` directive.  The possible values are:"
msgstr ""
"Este valor seleciona como a assinatura será exibida para a classe definida "
"pela diretiva :rst:dir:`autoclass`. Os valores possíveis são:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:973
msgid "``'mixed'``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:974
msgid "Display the signature with the class name."
msgstr "Exibe a assinatura com o nome da classe."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:975
msgid "``'separated'``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:976
msgid "Display the signature as a method."
msgstr "Exibe a assinatura como um método."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:984
msgid ""
"Define the order in which :rst:dir:`automodule` and :rst:dir:`autoclass` "
"members are listed. Supported values are:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:987
msgid "``'alphabetical'``: Use alphabetical order."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:989
msgid "``'groupwise'``: order by member type. The order is:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:991
msgid "for modules, exceptions, classes, functions, data"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:992
msgid "for classes: methods, then properties and attributes"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:994
msgid "Members are ordered alphabetically within groups."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:996
msgid ""
"``'bysource'``: Use the order in which the members appear in the source "
"code. This requires that the module must be a Python module with the source "
"code available."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1002
msgid "Support for ``'bysource'``."
msgstr "Suporte para ``'bysource'``."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1009
msgid ""
"The default options for autodoc directives.  They are applied to all autodoc"
" directives automatically.  It must be a dictionary which maps option names "
"to the values.  For example:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1023
msgid ""
"Setting ``None`` or ``True`` to the value is equivalent to giving only the "
"option name to the directives."
msgstr ""
"Definir ``None`` ou ``True`` como o valor é equivalente a fornecer apenas o "
"nome da opção às diretivas."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1026
msgid "The supported options are:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1028
msgid "``'members'``: See :rst:dir:`automodule:members`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1029
msgid "``'undoc-members'`` See :rst:dir:`automodule:undoc-members`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1030
msgid "``'private-members'``: See :rst:dir:`automodule:private-members`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1031
msgid "``'special-members'``: See :rst:dir:`automodule:special-members`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1032
msgid "``'inherited-members'``: See :rst:dir:`autoclass:inherited-members`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1033
msgid "``'imported-members'``: See :rst:dir:`automodule:imported-members`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1034
msgid "``'exclude-members'``: See :rst:dir:`automodule:exclude-members`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1035
msgid "``'ignore-module-all'``: See :rst:dir:`automodule:ignore-module-all`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1036
msgid "``'member-order'``: See :rst:dir:`automodule:member-order`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1037
msgid "``'show-inheritance'``: See :rst:dir:`autoclass:show-inheritance`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1038
msgid "``'class-doc-from'``: See :rst:dir:`autoclass:class-doc-from`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1039
msgid "``'no-value'``: See :rst:dir:`autodata:no-value`."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1043
msgid "Accepts ``True`` as a value."
msgstr "Aceita ``True`` como valor."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1046
msgid "Added ``'imported-members'``."
msgstr "Adicionado ``'imported-members'``."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1049
msgid "Added ``'class-doc-from'``."
msgstr "Adicionado ``'class-doc-from'``."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1052
msgid "Added ``'no-value'``."
msgstr "Adicionado ``'no-value'``."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1059
msgid ""
"Functions imported from C modules cannot be introspected, and therefore the "
"signature for such functions cannot be automatically determined.  However, "
"it is an often-used convention to put the signature into the first line of "
"the function's docstring."
msgstr ""
"As funções importadas dos módulos ``C`` não podem ser introspectivas e, "
"portanto, a assinatura dessas funções não pode ser determinada "
"automaticamente. No entanto, é uma convenção frequentemente usada para "
"colocar a assinatura na primeira linha da docstring da função."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1064
msgid ""
"If this boolean value is set to ``True`` (which is the default), autodoc "
"will look at the first line of the docstring for functions and methods, and "
"if it looks like a signature, use the line as the signature and remove it "
"from the docstring content."
msgstr ""
"Se este valor booleano é definido como ``True`` (que é o padrão), o autodoc "
"irá olhar para a primeira linha da docstring para funções e métodos, e se "
"parecer com uma assinatura, use a linha como assinatura e remova-a do "
"conteúdo da docstring."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1069
msgid ""
"autodoc will continue to look for multiple signature lines, stopping at the "
"first line that does not look like a signature. This is useful for declaring"
" overloaded function signatures."
msgstr ""
"autodoc continuará a procurar por várias linhas de assinatura, parando na "
"primeira linha que não se parece com uma assinatura. Isso é útil para "
"declarar assinaturas de função sobrecarregadas."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1076
msgid "Support overloaded signatures"
msgstr "Suporte a assinaturas sobrecarregadas"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1080
msgid "Overloaded signatures do not need to be separated by a backslash"
msgstr ""
"Assinaturas sobrecarregadas não precisam ser separadas por uma barra "
"invertida"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1086
msgid ""
"This value contains a list of modules to be mocked up. This is useful when "
"some external dependencies are not met at build time and break the building "
"process. You may only specify the root package of the dependencies "
"themselves and omit the sub-modules:"
msgstr ""
"Este valor contém uma lista de módulos a serem reproduzidos. Isso é útil "
"quando algumas dependências externas não são atendidas no momento da criação"
" e interrompem o processo de construção. Você só pode especificar o pacote "
"raiz das próprias dependências e omitir os submódulos:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1095
msgid "Will mock all imports under the ``django`` package."
msgstr "Fará um mock de todas as importações sob o pacote ``django``."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1099
msgid ""
"This config value only requires to declare the top-level modules that should"
" be mocked."
msgstr ""
"Esse valor de configuração requer apenas para declarar os módulos de nível "
"superior que devem ser mockados."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1107
msgid ""
"This value controls how to represent typehints.  The setting takes the "
"following values:"
msgstr ""
"Este valor controla como representar dicas de tipo. A configuração presume "
"os seguintes valores:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1110
msgid "``'signature'`` -- Show typehints in the signature"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1111
msgid ""
"``'description'`` -- Show typehints as content of the function or method The"
" typehints of overloaded functions or methods will still be represented in "
"the signature."
msgstr ""
"``'description'`` -- Mostra dicas de tipo como conteúdo da função ou método "
"As dicas de tipo de funções ou métodos sobrecarregados ainda serão "
"representadas na assinatura."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1114
msgid "``'none'`` -- Do not show typehints"
msgstr "``'none'`` -- Não mostra dicas de tipo"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1115
msgid ""
"``'both'`` -- Show typehints in the signature and as content of the function"
" or method"
msgstr ""
"``'both'`` -- Mostra dicas de tipo na assinatura e como conteúdo da função "
"ou método"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1118
msgid ""
"Overloaded functions or methods will not have typehints included in the "
"description because it is impossible to accurately represent all possible "
"overloads as a list of parameters."
msgstr ""
"Funções ou métodos sobrecarregados não terão dicas de tipo incluídas na "
"descrição porque é impossível representar com precisão todas as sobrecargas "
"possíveis como uma lista de parâmetros."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1125
msgid "New option ``'description'`` is added."
msgstr "A nova opção ``'description'`` foi adicionada."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1129
msgid "New option ``'both'`` is added."
msgstr "A nova opção ``'both'`` foi adicionada."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1135
msgid ""
"This value controls whether the types of undocumented parameters and return "
"values are documented when :confval:`autodoc_typehints` is set to "
"``'description'``. Supported values:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1140
msgid ""
"``'all'``: Types are documented for all parameters and return values, "
"whether they are documented or not."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1143
msgid ""
"``'documented'``: Types will only be documented for a parameter or a return "
"value that is already documented by the docstring."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1146
msgid ""
"``'documented_params'``: Parameter types will only be annotated if the "
"parameter is documented in the docstring. The return type is always "
"annotated (except if it is ``None``)."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1155
msgid "New option ``'documented_params'`` is added."
msgstr "Nova opção ``'documented_params'`` foi adicionada."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1161
msgid ""
"A dictionary for users defined `type aliases`__ that maps a type name to the"
" full-qualified object name.  It is used to keep type aliases not evaluated "
"in the document."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1165
msgid ""
"The type aliases are only available if your program enables :pep:`Postponed "
"Evaluation of Annotations (PEP 563) <563>` feature via ``from __future__ "
"import annotations``."
msgstr ""
"Os aliases de tipo só estão disponíveis se o seu programa habilitar o "
"recurso :pep:`Avaliação Adiada de Anotações (PEP 563) <563>` via ``from "
"__future__ import annotations``."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1169
msgid "For example, there is code using a type alias:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1180
msgid ""
"If ``autodoc_type_aliases`` is not set, autodoc will generate internal mark-"
"up from this code as following:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1189
msgid ""
"If you set ``autodoc_type_aliases`` as ``{'AliasType': "
"'your.module.AliasType'}``, it generates the following document internally:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1206
msgid ""
"This value controls the format of typehints.  The setting takes the "
"following values:"
msgstr ""
"Este valor controla o formato das dicas de tipo. A configuração assume os "
"seguintes valores:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1209
msgid ""
"``'fully-qualified'`` -- Show the module name and its name of typehints"
msgstr ""
"``'fully-qualified'`` -- Mostra o nome do módulo e seu nome de dicas de tipo"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1210
msgid ""
"``'short'`` -- Suppress the leading module names of the typehints (e.g. "
"``io.StringIO`` -> ``StringIO``)"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1217
msgid "The default setting was changed to ``'short'``"
msgstr "A configuração padrão foi alterada para ``'short'``"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1223
msgid ""
"If True, the default argument values of functions will be not evaluated on "
"generating document.  It preserves them as is in the source code."
msgstr ""
"Se for True, os valores de argumento padrão das funções não serão avaliados "
"na geração do documento. Ele os preserva como estão no código-fonte."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1228
msgid ""
"Added as an experimental feature.  This will be integrated into autodoc core"
" in the future."
msgstr ""
"Adicionado como um recurso experimental. Isso será integrado ao autodoc core"
" no futuro."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1235
msgid ""
"This value controls the behavior of :option:`sphinx-build --fail-on-warning`"
" during importing modules. If ``False`` is given, autodoc forcedly "
"suppresses the error if the imported module emits warnings."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1240
msgid ""
"This option now has no effect as :option:`!--fail-on-warning` no longer "
"exits early."
msgstr ""
"Esta opção agora não tem efeito, pois :option:`!--fail-on-warning` não mais "
"encerra cedo."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1248
msgid ""
"This value controls the docstrings inheritance. If set to True the docstring"
" for classes or methods, if not explicitly set, is inherited from parents."
msgstr ""
"Este valor controla a herança de docstrings. Se definido como True, a "
"docstring para classes ou métodos, se não for definida explicitamente, é "
"herdada dos pais."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1259
msgid ""
":mod:`autodoc` supports suppressing warning messages via "
":confval:`suppress_warnings`. It defines the following additional warnings "
"types:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1263
msgid "autodoc"
msgstr "autodoc"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1264
msgid "autodoc.import_object"
msgstr "autodoc.import_object"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1268
msgid "Docstring preprocessing"
msgstr "Pré-processamento de docstrings"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1270
msgid "autodoc provides the following additional events:"
msgstr "autodoc fornece os seguintes eventos adicionais:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1276
msgid ""
"Emitted when autodoc has read and processed a docstring.  *lines* is a list "
"of strings -- the lines of the processed docstring -- that the event handler"
" can modify **in place** to change what Sphinx puts into the output."
msgstr ""
"Emitido quando o autodoc leu e processou uma docstring. *lines* é uma lista "
"de strings -- as linhas da docstring processada -- que o manipulador de "
"eventos pode modificar **in place** para alterar o que o Sphinx coloca na "
"saída."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:0
msgid "Parameters"
msgstr "Parâmetros"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1280
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1299
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1311
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1340
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1372
msgid "the Sphinx application object"
msgstr "o objeto do aplicativo Sphinx"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1281
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1312
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1373
msgid ""
"the type of the object which the docstring belongs to (one of ``'module'``, "
"``'class'``, ``'exception'``, ``'function'``, ``'method'``, ``'attribute'``)"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1284
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1315
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1341
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1376
msgid "the fully qualified name of the object"
msgstr "o nome totalmente qualificado do objeto"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1285
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1300
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1316
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1342
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1377
msgid "the object itself"
msgstr "o objeto em si"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1286
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1317
#: ../../sphinx/doc/usage/extensions/autodoc.rst:1380
msgid ""
"the options given to the directive: an object with attributes "
"``inherited_members``, ``undoc_members``, ``show_inheritance`` and ``no-"
"index`` that are true if the flag option of same name was given to the auto "
"directive"
msgstr ""
"as opções dadas à diretiva: um objeto com os atributos "
"``inherited_members``, ``undoc_members``, ``show_inheritance`` e ``no-"
"index`` que são verdadeiros se a opção de sinalizador com o mesmo nome foi "
"dada à diretiva auto"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1290
msgid "the lines of the docstring, see above"
msgstr "as linhas da docstring, veja acima"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1296
msgid ""
"Emitted before autodoc formats a signature for an object. The event handler "
"can modify an object to change its signature."
msgstr ""
"Emitido antes do autodoc formatar uma assinatura para um objeto. O "
"manipulador de eventos pode modificar um objeto para alterar sua assinatura."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1301
msgid "a boolean indicates an object is bound method or not"
msgstr "um booleano indica que um objeto é um método vinculado ou não"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1307
msgid ""
"Emitted when autodoc has formatted a signature for an object. The event "
"handler can return a new tuple ``(signature, return_annotation)`` to change "
"what Sphinx puts into the output."
msgstr ""
"Emitido quando o autodoc formatou uma assinatura para um objeto. O "
"manipulador de eventos pode retornar uma nova tupla ``(signature, "
"return_annotation)`` para alterar o que o Sphinx coloca na saída."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1321
msgid ""
"function signature, as a string of the form ``'(parameter_1, "
"parameter_2)'``, or ``None`` if introspection didn't succeed and signature "
"wasn't specified in the directive."
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1324
msgid ""
"function return annotation as a string of the form ``' -> annotation'``, or "
"``None`` if there is no return annotation"
msgstr ""

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1327
msgid ""
"The :mod:`sphinx.ext.autodoc` module provides factory functions for commonly"
" needed docstring processing in event :event:`autodoc-process-docstring`:"
msgstr ""
"O módulo :mod:`sphinx.ext.autodoc` fornece funções de fábrica para o "
"processamento ``docstring`` comumente necessário no evento :event:`autodoc-"
"process-docstring`:"

#: ../../../../../../../opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/sphinx/ext/autodoc/__init__.pydocstring
#: of sphinx.ext.autodoc.cut_lines:1
msgid ""
"Return a listener that removes the first *pre* and last *post* lines of "
"every docstring.  If *what* is a sequence of strings, only docstrings of a "
"type in *what* will be processed."
msgstr ""
"Retorna um \"listener\" que remove o primeiro *pre* e as últimas linhas "
"*post* de cada docstring. Se *what* for uma sequência de strings, somente as"
" docstrings de um tipo em *what* serão processadas."

#: ../../../../../../../opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/sphinx/ext/autodoc/__init__.pydocstring
#: of sphinx.ext.autodoc.cut_lines:5
msgid "Use like this (e.g. in the ``setup()`` function of :file:`conf.py`)::"
msgstr "Use assim (por exemplo, na função ``setup()`` do :file:`conf.py`)::"

#: ../../../../../../../opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/sphinx/ext/autodoc/__init__.pydocstring
#: of sphinx.ext.autodoc.cut_lines:10
msgid ""
"This can (and should) be used in place of :confval:`automodule_skip_lines`."
msgstr ""
"Isso pode (e deve) ser usado no lugar de :confval:`automodule_skip_lines`."

#: ../../../../../../../opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/sphinx/ext/autodoc/__init__.pydocstring
#: of sphinx.ext.autodoc.between:1
msgid ""
"Return a listener that either keeps, or if *exclude* is True excludes, lines"
" between lines that match the *marker* regular expression.  If no line "
"matches, the resulting docstring would be empty, so no change will be made "
"unless *keepempty* is true."
msgstr ""
"Retorna um \"listener\" que mantém, ou se *exclude* for True, linhas entre "
"as linhas que correspondem à expressão regular *marker*. Se nenhuma linha "
"corresponder, a docstring resultante estará vazia, portanto nenhuma "
"alteração será feita a menos que *keepempty* seja True."

#: ../../../../../../../opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/sphinx/ext/autodoc/__init__.pydocstring
#: of sphinx.ext.autodoc.between:6
msgid ""
"If *what* is a sequence of strings, only docstrings of a type in *what* will"
" be processed."
msgstr ""
"Se *what* for uma sequência de strings, somente as docstrings de um tipo em "
"*what* serão processadas."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1335
msgid ""
"Emitted when autodoc has read and processed a class to determine the base-"
"classes.  *bases* is a list of classes that the event handler can modify "
"**in place** to change what Sphinx puts into the output.  It's emitted only "
"if ``show-inheritance`` option given."
msgstr ""
"Emitido quando autodoc leu e processou uma classe para determinar as classes"
" básicas. *bases* é uma lista de classes que o manipulador de eventos pode "
"modificar **no local** para alterar o que o Sphinx coloca na saída. É "
"emitido apenas se a opção ``show-inheritance`` for fornecida."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1343
msgid "the options given to the class directive"
msgstr "as opções fornecidas para a diretiva da classe"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1344
msgid "the list of base classes signature. see above."
msgstr "a lista de assinatura de classes base, veja acima."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1349
msgid ""
"``bases`` can contain a string as a base class name. It will be processed as"
" reStructuredText."
msgstr ""
"``bases`` pode conter uma string como nome de classe base. Ele será "
"processado como texto com marcação reStructuredText."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1354
msgid "Skipping members"
msgstr "Ignorando membros"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1356
msgid ""
"autodoc allows the user to define a custom method for determining whether a "
"member should be included in the documentation by using the following event:"
msgstr ""
"O autodoc permite que o usuário defina um método personalizado para "
"determinar se um membro deve ser incluído na documentação usando o seguinte "
"evento:"

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1363
msgid ""
"Emitted when autodoc has to decide whether a member should be included in "
"the documentation.  The member is excluded if a handler returns ``True``.  "
"It is included if the handler returns ``False``."
msgstr ""
"Emitido quando o autodoc tem que decidir se um membro deve ser incluído na "
"documentação. O membro é excluído se um manipulador retornar ``True``. Está "
"incluído se o manipulador retornar ``False``."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1367
msgid ""
"If more than one enabled extension handles the ``autodoc-skip-member`` "
"event, autodoc will use the first non-``None`` value returned by a handler. "
"Handlers should return ``None`` to fall back to the skipping behavior of "
"autodoc and other enabled extensions."
msgstr ""
"Se mais de uma extensão ativada manipular o evento ``autodoc-skip-member``, "
"o autodoc usará o primeiro valor não ``None`` retornado por um manipulador. "
"Os manipuladores devem retornar ``None`` para retornar ao comportamento de "
"salto do autodoc e de outras extensões ativadas."

#: ../../sphinx/doc/usage/extensions/autodoc.rst:1378
msgid ""
"a boolean indicating if autodoc will skip this member if the user handler "
"does not override the decision"
msgstr ""
"um booleano indicando se o autodoc pulará este membro se o manipulador de "
"usuário não substituir a decisão"

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# wendi cao <651645601@qq.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-18 00:49+0000\n"
"PO-Revision-Date: 2022-03-06 06:35+0000\n"
"Last-Translator: wendi cao <651645601@qq.com>, 2022\n"
"Language-Team: Chinese (China) (https://app.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/tutorial/deploying.rst:2
msgid "Appendix: Deploying a Sphinx project online"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:4
msgid ""
"When you are ready to show your documentation project to the world, there "
"are many options available to do so. Since the HTML generated by Sphinx is "
"static, you can decouple the process of building your HTML documentation "
"from hosting such files in the platform of your choice. You will not need a "
"sophisticated server running Python: virtually every web hosting service "
"will suffice."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:10
msgid ""
"Therefore, the challenge is less how or where to serve the static HTML, but "
"rather how to pick a workflow that automatically updates the deployed "
"documentation every time there is a change in the source files."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:14
msgid ""
"The following sections describe some of the available options to deploy your"
" online documentation, and give some background information. If you want to "
"go directly to the practical part, you can skip to :ref:`publishing-"
"sources`."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:19
msgid "Sphinx-friendly deployment options"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:21
msgid ""
"There are several possible options you have to host your Sphinx "
"documentation. Some of them are:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:24
msgid "**Read the Docs**"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:25
msgid ""
"`Read the Docs`_ is an online service specialized in hosting technical "
"documentation written in Sphinx, as well as MkDocs. They have a number of "
"extra features, such as versioned documentation, traffic and search "
"analytics, custom domains, user-defined redirects, and more."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:30
msgid "**GitHub Pages**"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:31
msgid ""
"`GitHub Pages`_ is a simple static web hosting tightly integrated with "
"`GitHub`_: static HTML is served from one of the branches of a project, and "
"usually sources are stored in another branch so that the output can be "
"updated every time the sources change (for example using `GitHub Actions`_)."
" It is free to use and supports custom domains."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:37
msgid "**GitLab Pages**"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:38
msgid ""
"`GitLab Pages`_ is a similar concept to GitHub Pages, integrated with "
"`GitLab`_ and usually automated with `GitLab CI`_ instead."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:41
msgid "**Netlify**"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:42
msgid ""
"`Netlify`_ is a sophisticated hosting for static sites enhanced by client-"
"side web technologies like JavaScript (so-called `\"Jamstack\"`_). They "
"offer support for headless content management systems and serverless "
"computing."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:47
msgid "**Your own server**"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:48
msgid ""
"You can always use your own web server to host Sphinx HTML documentation. It"
" is the option that gives more flexibility, but also more complexity."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:51
msgid ""
"All these options have zero cost, with the option of paying for extra "
"features."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:64
msgid "Embracing the \"Docs as Code\" philosophy"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:66
msgid ""
"The free offerings of most of the options listed above require your "
"documentation sources to be publicly available. Moreover, these services "
"expect you to use a `Version Control System`_, a technology that tracks the "
"evolution of a collection of files as a series of snapshots (\"commits\"). "
"The practice of writing documentation in plain text files with the same "
"tools as the ones used for software development is commonly known as `\"Docs"
" as Code\"`_."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:73
msgid ""
"The most popular Version Control System nowadays is Git_, a free and open "
"source tool that is the backbone of services like GitHub and GitLab. Since "
"both Read the Docs and Netlify have integrations with GitHub and GitLab, and"
" both GitHub and GitLab have an integrated Pages product, the most effective"
" way of automatically build your documentation online is to upload your "
"sources to either of these Git hosting services."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:87
msgid "Publishing your documentation sources"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:90
msgid "GitHub"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:92
msgid "The quickest way to upload an existing project to GitHub is to:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:94
msgid "`Sign up for a GitHub account <https://github.com/signup>`_."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:95
msgid "`Create a new repository <https://github.com/new>`_."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:96
msgid "Open `the \"Upload files\" page`_ of your new repository."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:97
msgid ""
"Select the files on your operating system file browser (in your case "
"``README.rst``, ``lumache.py``, the makefiles under the ``docs`` directory, "
"and everything under ``docs/source``) and drag them to the GitHub interface "
"to upload them all."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:101
msgid "Click on the :guilabel:`Commit changes` button."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:107
#: ../../sphinx/doc/tutorial/deploying.rst:142
msgid ""
"Make sure you don't upload the ``docs/build`` directory, as it contains the "
"output generated by Sphinx and it will change every time you change the "
"sources, complicating your workflow."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:111
msgid ""
"These steps do not require access to the command line or installing any "
"additional software. To learn more, read `this quickstart tutorial`_ or "
"consult the `official GitHub documentation`_"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:119
msgid "GitLab"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:121
msgid ""
"Similarly to GitHub, the fastest way to upload your project to GitLab is "
"using the web interface:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:124
msgid "`Sign up for a GitLab account <https://gitlab.com/users/sign_up>`_."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:125
msgid "`Create a new blank project <https://gitlab.com/projects/new>`_."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:126
msgid ""
"Upload the project files (in your case ``README.rst``, ``lumache.py``, the "
"makefiles under the ``docs`` directory, and everything under "
"``docs/source``) one by one using the :guilabel:`Upload File` button [#f1]_."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:130
msgid ""
"Again, these steps do not require additional software on your computer. To "
"learn more, you can:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:133
msgid "Follow `this tutorial`_ to install Git on your machine."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:134
msgid ""
"Browse the `GitLab User documentation`_ to understand the possibilities of "
"the platform."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:146
msgid ""
"At the time of writing, `uploading whole directories to GitLab using only "
"the web interface <https://gitlab.com/gitlab-org/gitlab/-/issues/228490>`_ "
"is not yet implemented."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:152
msgid "Publishing your HTML documentation"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:155
msgid "Read the Docs"
msgstr "阅读文档"

#: ../../sphinx/doc/tutorial/deploying.rst:157
msgid ""
"`Read the Docs`_ offers integration with both GitHub and GitLab. The "
"quickest way of getting started is to follow :doc:`the RTD tutorial "
"<readthedocs:tutorial/index>`, which is loosely based on this one. You can "
"publish your sources on GitHub as explained :ref:`in the previous section "
"<publishing-sources>`, then skip directly to "
":ref:`readthedocs:tutorial/index:Creating a Read the Docs account`. If you "
"choose GitLab instead, the process is similar."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:166
msgid "GitHub Pages"
msgstr "GitHub页面"

#: ../../sphinx/doc/tutorial/deploying.rst:168
msgid ""
"`GitHub Pages`_ requires you to :ref:`publish your sources <publishing-"
"sources>` on `GitHub`_. After that, you will need an automated process that "
"performs the ``make html`` step every time the sources change. That can be "
"achieved using `GitHub Actions`_."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:173
msgid ""
"After you have published your sources on GitHub, create a file named "
"``.github/workflows/sphinx.yml`` in your repository with the following "
"contents:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:177
msgid ".github/workflows/"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:205
msgid ""
"This contains a GitHub Actions workflow with a single job of four steps:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:207
msgid "Checkout the code."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:208
#: ../../sphinx/doc/tutorial/deploying.rst:266
msgid "Build the HTML documentation using Sphinx."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:209
msgid ""
"Attach the HTML output the artifacts to the GitHub Actions job, for easier "
"inspection."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:211
msgid ""
"If the change happens on the default branch, take the contents of "
"``docs/build/html`` and push it to the ``gh-pages`` branch."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:214
msgid ""
"Next, you need to specify the dependencies for the ``make html`` step to be "
"successful. For that, create a file ``docs/requirements.txt`` and add the "
"following contents:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:218
msgid "docs/requirements.txt"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:223
msgid ""
"And finally, you are ready to `enable GitHub Pages on your repository`_. For"
" that, go to :guilabel:`Settings`, then :guilabel:`Pages` on the left "
"sidebar, select the ``gh-pages`` branch in the \"Source\" dropdown menu, and"
" click :guilabel:`Save`. After a few minutes, you should be able to see your"
" HTML at the designated URL."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:232
msgid "GitLab Pages"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:234
msgid ""
"`GitLab Pages`_, on the other hand, requires you to :ref:`publish your "
"sources <publishing-sources>` on `GitLab`_. When you are ready, you can "
"automate the process of running ``make html`` using `GitLab CI`_."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:238
msgid ""
"After you have published your sources on GitLab, create a file named "
"``.gitlab-ci.yml`` in your repository with these contents:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:241
msgid ".gitlab-ci.yml"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:263
msgid "This contains a GitLab CI workflow with one job of several steps:"
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:265
msgid "Install the necessary dependencies."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:267
msgid "Move the output to a known artifacts location."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:270
msgid ""
"You will need to `validate your account`_ by entering a payment method (you "
"will be charged a small amount that will then be reimbursed)."
msgstr ""

#: ../../sphinx/doc/tutorial/deploying.rst:275
msgid ""
"After that, if the pipeline is successful, you should be able to see your "
"HTML at the designated URL."
msgstr ""

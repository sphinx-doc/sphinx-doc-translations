# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-18 00:49+0000\n"
"PO-Revision-Date: 2020-06-03 21:56+0000\n"
"Language-Team: Arabic (https://app.transifex.com/sphinx-doc/teams/15434/ar/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ar\n"
"Plural-Forms: nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 && n%100<=99 ? 4 : 5;\n"

#: ../../sphinx/doc/internals/release-process.rst:3
msgid "Sphinx's release process"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:6
msgid "Versioning"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:8
msgid ""
"Sphinx adheres to :pep:`440` versions, with a ``major.minor.micro`` scheme "
"for the *release segment* (e.g. 1.2.3). The major, minor, and micro version "
"parts should be altered as follows:"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:12
msgid ""
"The major version part should be incremented for incompatible behavior "
"change and public API updates."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:15
msgid ""
"The minor version part should be incremented for most releases of Sphinx, "
"where backwards-compatibility of API and features are preserves."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:18
msgid ""
"The micro version part should only be incremented for urgent bugfix-only "
"releases."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:20
msgid ""
"When the major version part is incremented, the minor and micro version "
"parts must be set to ``0``. When the minor version part is incremented, the "
"micro version part must be set to ``0``."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:25
msgid ""
"New major versions should come with a beta-testing period before the final "
"release."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:30
msgid "Deprecating a feature"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:32
msgid "There are a couple reasons that code in Sphinx might be deprecated:"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:34
msgid ""
"If a feature has been improved or modified in a backwards-incompatible way, "
"the old feature or behavior will be deprecated."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:37
msgid ""
"Sometimes Sphinx will include a backport of a Python library that's not "
"included in a version of Python that Sphinx currently supports. When Sphinx "
"no longer needs to support the older version of Python that doesn't include "
"the library, the library will be deprecated in Sphinx."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:42
msgid ""
"As the :ref:`deprecation-policy` describes, the first release of Sphinx that"
" deprecates a feature (``A.B``) should raise a ``RemovedInSphinxXXWarning`` "
"(where ``XX`` is the Sphinx version where the feature will be removed) when "
"the deprecated feature is invoked. Assuming we have good test coverage, "
"these warnings are converted to errors when running the test suite with "
"warnings enabled::"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:51
msgid ""
"Thus, when adding a ``RemovedInSphinxXXWarning`` you need to eliminate or "
"silence any warnings generated when running the tests."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:58
msgid "Deprecation policy"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:60
msgid ""
"MAJOR and MINOR releases may deprecate certain features from previous "
"releases. If a feature is deprecated in a release A.x, it will continue to "
"work in all A.x.x versions (for all versions of x). It will continue to work"
" in all B.x.x versions but raise deprecation warnings. Deprecated features "
"will be removed at the C.0.0. It means the deprecated feature will work "
"during 2 MAJOR releases at least."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:67
msgid ""
"So, for example, if we decided to start the deprecation of a function in "
"Sphinx 2.x:"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:70
msgid ""
"Sphinx 2.x will contain a backwards-compatible replica of the function which"
" will raise a ``RemovedInSphinx40Warning``. This is a subclass of "
":exc:`python:PendingDeprecationWarning`, i.e. it will not get displayed by "
"default."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:75
msgid ""
"Sphinx 3.x will still contain the backwards-compatible replica, but "
"``RemovedInSphinx40Warning`` will be a subclass of "
":exc:`python:DeprecationWarning` then, and gets displayed by default."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:79
msgid "Sphinx 4.0 will remove the feature outright."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:82
msgid "Deprecation warnings"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:84
msgid ""
"Sphinx will enable its ``RemovedInNextVersionWarning`` warnings by default, "
"if :envvar:`python:PYTHONWARNINGS` is not set.  Therefore you can disable "
"them using:"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:88
msgid "``PYTHONWARNINGS= make html`` (Linux/Mac)"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:89
msgid "``export PYTHONWARNINGS=`` and do ``make html`` (Linux/Mac)"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:90
msgid "``set PYTHONWARNINGS=`` and do ``make html`` (Windows)"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:92
msgid ""
"But you can also explicitly enable the pending ones using e.g. "
"``PYTHONWARNINGS=default`` (see the :ref:`Python docs on configuring "
"warnings <python:describing-warning-filters>`) for more details."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:97
msgid "Python version support policy"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:99
msgid ""
"Sphinx supports at all minor versions of Python released in the past 3 years"
" from the anticipated release date with a minimum of 3 minor versions of "
"Python. This policy is derived from `SPEC 0`_, a scientific Python domain "
"standard."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:105
msgid ""
"For example, a version of Sphinx released in May 2025 would support Python "
"3.11, 3.12, and 3.13."
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:108
msgid "This is a summary table with the current policy:"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:111
msgid "Date"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:111
msgid "Python"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:113
msgid "05 Oct 2023"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:113
msgid "3.10+"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:115
msgid "04 Oct 2024"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:115
msgid "3.11+"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:117
msgid "24 Oct 2025"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:117
msgid "3.12+"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:119
msgid "01 Oct 2026"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:119
msgid "3.13+"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:121
msgid "01 Oct 2027"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:121
msgid "3.14+"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:125
msgid "Release procedures"
msgstr ""

#: ../../sphinx/doc/internals/release-process.rst:127
msgid ""
"The release procedures are listed in :file:`utils/release-checklist.rst`."
msgstr ""

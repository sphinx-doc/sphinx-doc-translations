# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Georg Brandl <g.brandl@gmx.net>, 2018
# Hyeonho Kang, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-24 00:54+0000\n"
"PO-Revision-Date: 2018-06-26 15:59+0000\n"
"Last-Translator: Hyeonho Kang, 2025\n"
"Language-Team: Korean (https://app.transifex.com/sphinx-doc/teams/15434/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:2
msgid ""
":mod:`sphinx.ext.napoleon` -- Support for NumPy and Google style docstrings"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:15
msgid "Overview"
msgstr "개요"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:17
msgid "Are you tired of writing docstrings that look like this:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:31
msgid ""
"`reStructuredText`_ is great, but it creates visually dense, hard to read "
":pep:`docstrings <287>`. Compare the jumble above to the same thing "
"rewritten according to the `Google Python Style Guide`_:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:46
msgid "Much more legible, no?"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:48
msgid ""
"Napoleon is a :term:`extension` that enables Sphinx to parse both `NumPy`_ "
"and `Google`_ style docstrings - the style recommended by `Khan Academy`_."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:51
msgid ""
"Napoleon is a pre-processor that parses `NumPy`_ and `Google`_ style "
"docstrings and converts them to reStructuredText before Sphinx attempts to "
"parse them. This happens in an intermediate step while Sphinx is processing "
"the documentation, so it doesn't modify any of the docstrings in your actual"
" source code files."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:68
msgid "Getting Started"
msgstr "시작하기"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:70
msgid ""
"After :doc:`setting up Sphinx </usage/quickstart>` to build your docs, "
"enable napoleon in the Sphinx ``conf.py`` file:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:80
msgid "Use ``sphinx-apidoc`` to build your API documentation:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:88
msgid "Docstrings"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:90
msgid ""
"Napoleon interprets every docstring that :mod:`autodoc <sphinx.ext.autodoc>`"
" can find, including docstrings on: ``modules``, ``classes``, "
"``attributes``, ``methods``, ``functions``, and ``variables``. Inside each "
"docstring, specially formatted `Sections`_ are parsed and converted to "
"reStructuredText."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:96
msgid "All standard reStructuredText formatting still works as expected."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:102
msgid "Docstring Sections"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:104
msgid "All of the following section headers are supported:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:106
msgid "``Args`` *(alias of Parameters)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:107
msgid "``Arguments`` *(alias of Parameters)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:108
msgid "``Attention``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:109
msgid "``Attributes``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:110
msgid "``Caution``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:111
msgid "``Danger``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:112
msgid "``Error``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:113
msgid "``Example``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:114
msgid "``Examples``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:115
msgid "``Hint``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:116
msgid "``Important``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:117
msgid "``Keyword Args`` *(alias of Keyword Arguments)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:118
msgid "``Keyword Arguments``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:119
msgid "``Methods``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:120
msgid "``Note``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:121
msgid "``Notes``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:122
msgid "``Other Parameters``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:123
msgid "``Parameters``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:124
msgid "``Return`` *(alias of Returns)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:125
msgid "``Returns``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:126
msgid "``Raise`` *(alias of Raises)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:127
msgid "``Raises``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:128
msgid "``References``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:129
msgid "``See Also``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:130
msgid "``Tip``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:131
msgid "``Todo``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:132
msgid "``Warning``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:133
msgid "``Warnings`` *(alias of Warning)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:134
msgid "``Warn`` *(alias of Warns)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:135
msgid "``Warns``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:136
msgid "``Yield`` *(alias of Yields)*"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:137
msgid "``Yields``"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:140
msgid "Google vs NumPy"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:142
msgid ""
"Napoleon supports two styles of docstrings: `Google`_ and `NumPy`_. The main"
" difference between the two styles is that Google uses indentation to "
"separate sections, whereas NumPy uses underlines."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:146
msgid "Google style:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:165
msgid "NumPy style:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:189
msgid ""
"NumPy style tends to require more vertical space, whereas Google style tends"
" to use more horizontal space. Google style tends to be easier to read for "
"short and simple docstrings, whereas NumPy style tends be easier to read for"
" long and in-depth docstrings."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:194
msgid ""
"The choice between styles is largely aesthetic, but the two styles should "
"not be mixed. Choose one style for your project and be consistent with it."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:199
msgid "For complete examples:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:201
msgid ":ref:`example_google`"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:202
msgid ":ref:`example_numpy`"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:206
msgid "Type Annotations"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:208
msgid ""
":pep:`484` introduced a standard way to express types in Python code. This "
"is an alternative to expressing types directly in docstrings. One benefit of"
" expressing types according to :pep:`484` is that type checkers and IDEs can"
" take advantage of them for static code analysis. :pep:`484` was then "
"extended by :pep:`526` which introduced a similar way to annotate variables "
"(and attributes)."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:215
msgid "Google style with type annotations:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:247
msgid "Google style with types in docstrings:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:278
msgid "Configuration"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:280
msgid ""
"Listed below are all the settings used by napoleon and their default values."
" These settings can be changed in the Sphinx ``conf.py`` file. Make sure "
"that \"sphinx.ext.napoleon\" is enabled in ``conf.py``:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:0
msgid "Type"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:0
msgid "Default"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:316
msgid ""
"True to parse `Google style`_ docstrings. False to disable support for "
"Google style docstrings."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:323
msgid ""
"True to parse `NumPy style`_ docstrings. False to disable support for NumPy "
"style docstrings."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:330
msgid ""
"True to list ``__init___`` docstrings separately from the class docstring. "
"False to fall back to Sphinx's default behavior, which considers the "
"``__init___`` docstring as part of the class documentation."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:335
#: ../../sphinx/doc/usage/extensions/napoleon.rst:354
#: ../../sphinx/doc/usage/extensions/napoleon.rst:376
#: ../../sphinx/doc/usage/extensions/napoleon.rst:407
#: ../../sphinx/doc/usage/extensions/napoleon.rst:464
#: ../../sphinx/doc/usage/extensions/napoleon.rst:499
#: ../../sphinx/doc/usage/extensions/napoleon.rst:550
msgid "**If True**:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:351
msgid ""
"True to include private members (like ``_membername``) with docstrings in "
"the documentation. False to fall back to Sphinx's default behavior."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:372
msgid ""
"True to include special members (like ``__membername__``) with docstrings in"
" the documentation. False to fall back to Sphinx's default behavior."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:394
msgid ""
"True to use the ``.. admonition::`` directive for the **Example** and "
"**Examples** sections. False to use the ``.. rubric::`` directive instead. "
"One may look better than the other depending on what HTML theme is used."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:399
#: ../../sphinx/doc/usage/extensions/napoleon.rst:455
#: ../../sphinx/doc/usage/extensions/napoleon.rst:488
#: ../../sphinx/doc/usage/extensions/napoleon.rst:541
msgid "This `NumPy style`_ snippet will be converted as follows:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:415
#: ../../sphinx/doc/usage/extensions/napoleon.rst:471
#: ../../sphinx/doc/usage/extensions/napoleon.rst:508
#: ../../sphinx/doc/usage/extensions/napoleon.rst:557
msgid "**If False**:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:427
msgid ""
"True to use the ``.. admonition::`` directive for **Notes** sections. False "
"to use the ``.. rubric::`` directive instead."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:430
msgid ""
"The singular **Note** section will always be converted to a ``.. note::`` "
"directive."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:435
#: ../../sphinx/doc/usage/extensions/napoleon.rst:446
msgid ":confval:`napoleon_use_admonition_for_examples`"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:441
msgid ""
"True to use the ``.. admonition::`` directive for **References** sections. "
"False to use the ``.. rubric::`` directive instead."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:452
msgid ""
"True to use the ``:ivar:`` role for instance variables. False to use the "
"``.. attribute::`` directive instead."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:485
msgid ""
"True to use a ``:param:`` role for each function parameter. False to use a "
"single ``:parameters:`` role for all the parameters."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:521
msgid ""
"True to use a ``:keyword:`` role for each function keyword argument. False "
"to use a single ``:keyword arguments:`` role for all the keywords."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:525
msgid ""
"This behaves similarly to :confval:`napoleon_use_param`. Note unlike "
"docutils, ``:keyword:`` and ``:param:`` will not be treated the same way - "
"there will be a separate \"Keyword Arguments\" section, rendered in the same"
" fashion as \"Parameters\" section (type links created if possible)"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:532
msgid ":confval:`napoleon_use_param`"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:538
msgid ""
"True to use the ``:rtype:`` role for the return type. False to output the "
"return type inline with the description."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:567
msgid "True to convert the type definitions in the docstrings as references."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:572
msgid "Do preprocess the Google style docstrings also."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:578
msgid ""
"A mapping to translate type names to other names or references. Works only "
"when ``napoleon_use_param = True``."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:581
msgid "With:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:590
msgid "This `NumPy style`_ snippet:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:601
msgid "becomes:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:616
msgid ""
"True to allow using :pep:`526` attributes annotations in classes. If an "
"attribute is documented in the docstring without a type and has an "
"annotation in the class body, that type is used."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:626
msgid ""
"Add a list of custom sections to include, expanding the list of parsed "
"sections."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:628
msgid ""
"The entries can either be strings or tuples, depending on the intention:"
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:630
msgid "To create a custom \"generic\" section, just pass a string."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:631
msgid ""
"To create an alias for an existing section, pass a tuple containing the "
"alias name and the original, in that order."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:633
msgid ""
"To create a custom section that displays like the parameters or returns "
"section, pass a tuple containing the custom section name and a string value,"
" \"params_style\" or \"returns_style\"."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:637
msgid ""
"If an entry is just a string, it is interpreted as a header for a generic "
"section. If the entry is a tuple/list/indexed container, the first entry is "
"the name of the section, the second is the section key to emulate. If the "
"second entry value is \"params_style\" or \"returns_style\", the custom "
"section will be displayed like the parameters section or returns section."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:644
msgid "Support ``params_style`` and ``returns_style``"
msgstr ""

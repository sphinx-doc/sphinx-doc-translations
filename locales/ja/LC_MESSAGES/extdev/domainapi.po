# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2018
# Tetsuo Koyama <tkoyama010@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-27 01:00+0000\n"
"PO-Revision-Date: 2018-02-12 13:48+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2020\n"
"Language-Team: Japanese (https://app.transifex.com/sphinx-doc/teams/15434/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/extdev/domainapi.rst:4
msgid "Domain API"
msgstr "ドメインAPI"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain:1
msgid ""
"A Domain is meant to be a group of \"object\" description directives for "
"objects of a similar nature, and corresponding roles to create references to"
" them.  Examples would be Python modules, classes, functions etc., elements "
"of a templating language, Sphinx roles and directives, etc."
msgstr ""
"ドメインというのは、似たような特性を持つオブジェクトごとに用意された「オブジェクト」説明ディレクティブと、それらに対応してリファレンスを作成するロールを集めたものです。例えば、Pythonのモジュール、クラス、関数、テンプレート言語であればエレメント、Sphinxであればロールとディレクティブなどです。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain:6
msgid ""
"Each domain has a separate storage for information about existing objects "
"and how to reference them in `self.data`, which must be a dictionary.  It "
"also must implement several functions that expose the object information in "
"a uniform way to parts of Sphinx that allow the user to reference or search "
"for objects in a domain-agnostic way."
msgstr ""
"ドメインごとに、既存のオブジェクトの情報や、それらへの参照の仕方などを個別の領域に保存します。保存先は `self.data` "
"で、辞書でなければなりません。また、Sphinxの一部として決まったフォーマットでオブジェクトの情報を公開するための関数や、ユーザが参照できるようにしたり、ドメインごとの方法でオブジェクトを探索する関数をいくつか実装する必要があります。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain:12
msgid ""
"About `self.data`: since all object and cross-referencing information is "
"stored on a BuildEnvironment instance, the `domain.data` object is also "
"stored in the `env.domaindata` dict under the key `domain.name`.  Before the"
" build process starts, every active domain is instantiated and given the "
"environment object; the `domaindata` dict must then either be nonexistent or"
" a dictionary whose 'version' key is equal to the domain class' "
":attr:`data_version` attribute.  Otherwise, `OSError` is raised and the "
"pickled environment is discarded."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.add_object_type:1
msgid "Add an object type."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.check_consistency:1
msgid "Do consistency checks (**experimental**)."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.clear_doc:1
msgid "Remove traces of a document in the domain-specific inventories."
msgstr "ドメインに特化した領域から、指定されたドキュメントの情報を削除します。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.directive:1
msgid ""
"Return a directive adapter class that always gives the registered directive "
"its full name ('domain:name') as ``self.name``."
msgstr ""
"``self.name`` で指定されたドメイン付きで、完全な名前('ドメイン:名前')で登録されたディレクティブ "
"を与える、ディレクティブアダプタークラスを返します。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_enumerable_node_type:1
msgid "Get type of enumerable nodes (experimental)."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_full_qualified_name:1
msgid "Return full qualified name for given node."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:1
msgid "Return an iterable of \"object descriptions\"."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:3
msgid "Object descriptions are tuples with six items:"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:5
msgid "``name``"
msgstr "``name``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:6
msgid "Fully qualified name."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:8
msgid "``dispname``"
msgstr "``dispname``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:9
msgid "Name to display when searching/linking."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:11
msgid "``type``"
msgstr "``type``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:12
msgid "Object type, a key in ``self.object_types``."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:14
msgid "``docname``"
msgstr "``docname``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:15
msgid "The document where it is to be found."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:17
msgid "``anchor``"
msgstr "``anchor``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:18
msgid "The anchor name for the object."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:20
msgid "``priority``"
msgstr "``priority``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:21
msgid ""
"How \"important\" the object is (determines placement in search results). "
"One of:"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:24 ../docstring of
#: sphinx.domains.IndexEntry.subtype:5
msgid "``1``"
msgstr "``1``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:25
msgid "Default priority (placed before full-text matches)."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:26 ../docstring of
#: sphinx.domains.IndexEntry.subtype:3
msgid "``0``"
msgstr "``0``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:27
msgid "Object is important (placed before default-priority objects)."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:28 ../docstring of
#: sphinx.domains.IndexEntry.subtype:7
msgid "``2``"
msgstr "``2``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:29
msgid "Object is unimportant (placed after full-text matches)."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:30
msgid "``-1``"
msgstr "``-1``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_objects:31
msgid "Object should not show up in search at all."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.get_type_name:1
msgid "Return full name for given ObjType."
msgstr "与えられたObjTypeの完全な名前を返します。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.merge_domaindata:1
msgid ""
"Merge in data regarding *docnames* from a different domaindata inventory "
"(coming from a subprocess in parallel builds)."
msgstr " (並行ビルドのサブプロセスから生成された) 異なるdomaindataインベントリから *docnames*  へマージします。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.process_doc:1
msgid "Process a document after it is read by the environment."
msgstr "ドキュメントが環境によって読まれた後で、そのドキュメントを処理します。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.process_field_xref:1
msgid ""
"Process a pending xref created in a doc field. For example, attach "
"information about the current scope."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.resolve_any_xref:1
msgid "Resolve the pending_xref *node* with the given *target*."
msgstr "*target* を持つ、 ``pending_xref`` (未解決のクロスリファレンス) *node* の参照先の解決を行います。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.resolve_any_xref:3
msgid ""
"The reference comes from an \"any\" or similar role, which means that we "
"don't know the type.  Otherwise, the arguments are the same as for "
":meth:`resolve_xref`."
msgstr ""
"\"any\", もしくはそれに類似するロールに基づくリファレンスは、タイプがわからないということを意味します。もしくは、引数が "
":meth:`resolve_xref` と同様のものであるかです。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.resolve_any_xref:7
msgid ""
"The method must return a list (potentially empty) of tuples "
"``('domain:role', newnode)``, where ``'domain:role'`` is the name of a role "
"that could have created the same reference, e.g. ``'py:func'``. ``newnode`` "
"is what :meth:`resolve_xref` would return."
msgstr ""
"このメソッドはタプルを要素に持つリストを返す必要があります(リストは空の可能性があります)。各要素はタプルで、 ``('domain:role', "
"newnode)`` の形式です。 ``'domain:role'`` は ``'py:func'`` "
"のようなnewnodeを生成するときに使われるロール名で、 ``newnode`` は :meth:`resolve_xref` の返値と同じです。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.resolve_xref:1
msgid "Resolve the pending_xref *node* with the given *typ* and *target*."
msgstr ""
"*typ* 型と、 *target* を持つ、 ``pending_xref`` (未解決のクロスリファレンス) *node* "
"の参照先の解決を行います。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.resolve_xref:3
msgid ""
"This method should return a new node, to replace the xref node, containing "
"the *contnode* which is the markup content of the cross-reference."
msgstr ""
"このメソッドは、xrefノードと置き換えるための、新しいノードを返さなければなりません。また、この新しいノードには、クロスリファレンスのマークアップのコンテンツである、"
" *contnode* を含めます。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.resolve_xref:7
msgid ""
"If no resolution can be found, None can be returned; the xref node will then"
" given to the :event:`missing-reference` event, and if that yields no "
"resolution, replaced by *contnode*."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.resolve_xref:11
msgid ""
"The method can also raise :exc:`sphinx.environment.NoUri` to suppress the "
":event:`missing-reference` event being emitted."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.role:1
msgid ""
"Return a role adapter function that always gives the registered role its "
"full name ('domain:name') as the first argument."
msgstr "登録された完全な名前を持つロール('ドメイン:名前')を最初の引数として与える、ロールアダプター関数を返します。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.Domain.setup:1
msgid "Set up domain object."
msgstr ""

#: ../docstring of sphinx.domains.Domain.dangling_warnings:1
msgid "role name -> a warning message if reference is missing"
msgstr "ロール名 -> リファレンスが存在しないときの警告メッセージ"

#: ../docstring of sphinx.domains.Domain.data:1
msgid "data value"
msgstr ""

#: ../docstring of sphinx.domains.Domain.data_version:1
msgid "data version, bump this when the format of `self.data` changes"
msgstr "データのバージョンです。もしも `self.data` 内のフォーマットを変更したときには、この数字を上げてください。"

#: ../docstring of sphinx.domains.Domain.directives:1
msgid "directive name -> directive class"
msgstr "ディレクティブ名→ディレクティブのクラスとなる辞書です。"

#: ../docstring of sphinx.domains.Domain.enumerable_nodes:1
msgid "node_class -> (enum_node_type, title_getter)"
msgstr ""

#: ../docstring of sphinx.domains.Domain.indices:1
msgid "a list of Index subclasses"
msgstr "Indexのサブクラスが格納されたリストです。"

#: ../docstring of sphinx.domains.Domain.initial_data:1
msgid "data value for a fresh environment"
msgstr "新しい環境に入れる値です。"

#: ../docstring of sphinx.domains.Domain.label:1
msgid "domain label: longer, more descriptive (used in messages)"
msgstr "ドメインのラベルです。 ``name`` よりも長く、説明的な名前です。メッセージ内で利用されます。"

#: ../docstring of sphinx.domains.Domain.name:1
msgid "domain name: should be short, but unique"
msgstr "ドメイン名です。なるべく短く、重複のない名前にする必要があります。"

#: ../docstring of sphinx.domains.Domain.object_types:1
msgid "type (usually directive) name -> ObjType instance"
msgstr "型(通常はディレクティブ)名→ObjTypeのインスタンスとなる辞書です。"

#: ../docstring of sphinx.domains.Domain.roles:1
msgid "role name -> role callable"
msgstr "ロール名→ロールの呼び出し可能オブジェクトとなる辞書です。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.ObjType:1
msgid ""
"An ObjType is the description for a type of object that a domain can "
"document.  In the object_types attribute of Domain subclasses, object type "
"names are mapped to instances of this class."
msgstr ""
"ObjTypeは、そのドメインでドキュメントを書くことができる、オブジェクトの種類に対する説明ユニットです。Domainのサブクラスの "
"**object_types** の辞書の中に、オブジェクト名と、このクラスのインスタンスのマッピングが保持されます。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.ObjType:5
msgid "Constructor arguments:"
msgstr "コンストラクタ引数"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.ObjType:7
msgid "*lname*: localized name of the type (do not include domain name)"
msgstr "*lname*: ローカライズされた型名"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.ObjType:8
msgid "*roles*: all the roles that can refer to an object of this type"
msgstr "*roles*: この型を参照できる、すべてのロール"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/__init__.pydocstring
#: of sphinx.domains.ObjType:9
msgid ""
"*attrs*: object attributes -- currently only \"searchprio\" is known, which "
"defines the object's priority in the full-text search index, see "
":meth:`Domain.get_objects()`."
msgstr ""
"*attrs*: "
"オブジェクトの属性。現在では、全文検索インデックス内での、オブジェクトの優先順位(:meth:`Domain.get_objects()` "
"参照)のみが定義されています。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index:1
msgid ""
"An Index is the description for a domain-specific index.  To add an index to"
" a domain, subclass Index, overriding the three name attributes:"
msgstr ""
"Indexは、ドメインに特化した索引のための説明を行うクラスです。ドメインに対する索引を追加する場合には、Indexのサブクラスを作り、3つの名前属性をオーバーライドします:"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index:4
msgid ""
"`name` is an identifier used for generating file names. It is also used for "
"a hyperlink target for the index. Therefore, users can refer the index page "
"using ``ref`` role and a string which is combined domain name and ``name`` "
"attribute (ex. ``:ref:`py-modindex```)."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index:8
msgid "`localname` is the section title for the index."
msgstr "`localname` は索引のセクションタイトルです。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index:9
msgid ""
"`shortname` is a short name for the index, for use in the relation bar in "
"HTML output.  Can be empty to disable entries in the relation bar."
msgstr ""
"`shortname` "
"は索引に対する短い名前です。これは、HTML出力のリレーションバーで使用されます。もしも空であれば、リレーションバーのエントリーは無効化されます。"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index:12
msgid ""
"and providing a :meth:`generate` method.  Then, add the index class to your "
"domain's `indices` list.  Extensions can add indices to existing domains "
"using :meth:`~sphinx.application.Sphinx.add_index_to_domain`."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index:18
msgid ""
"Index pages can be referred by domain name and index name via "
":rst:role:`ref` role."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index.generate:1
msgid "Get entries for the index."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index.generate:3
msgid ""
"If ``docnames`` is given, restrict to entries referring to these docnames."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index.generate:6
msgid "The return value is a tuple of ``(content, collapse)``:"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index.generate:8
msgid "``collapse``"
msgstr "``collapse``"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index.generate:9
msgid ""
"A boolean that determines if sub-entries should start collapsed (for output "
"formats that support collapsing sub-entries)."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index.generate:12
msgid "``content``:"
msgstr "``content``:"

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.Index.generate:13
msgid ""
"A sequence of ``(letter, entries)`` tuples, where ``letter`` is the "
"\"heading\" for the given ``entries``, usually the starting letter, and "
"``entries`` is a sequence of single entries. Each entry is an "
":py:class:`IndexEntry`."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.IndexEntry:1
msgid "An index entry."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/_index.pydocstring
#: of sphinx.domains._index.IndexEntry:5
msgid ""
"The *qualifier* and *description* are not rendered for some output formats, "
"such as LaTeX."
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.name:1
msgid "The name of the index entry to be displayed."
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.subtype:1
msgid "The sub-entry related type. One of:"
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.subtype:4
msgid "A normal entry."
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.subtype:6
msgid "An entry with sub-entries."
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.subtype:8
msgid "A sub-entry."
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.docname:1
msgid "*docname* where the entry is located."
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.anchor:1
msgid "Anchor for the entry within `docname`"
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.extra:1
msgid "Extra info for the entry."
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.qualifier:1
msgid "Qualifier for the description."
msgstr ""

#: ../docstring of sphinx.domains.IndexEntry.descr:1
msgid "Description for the entry."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription:1
msgid "Directive to describe a class, function or similar object."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription:3
msgid ""
"Not used directly, but subclassed (in domain-specific directives) to add "
"custom behaviour."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription._object_hierarchy_parts:1
msgid ""
"Returns a tuple of strings, one entry for each part of the object's "
"hierarchy (e.g. ``('module', 'submodule', 'Class', 'method')``). The "
"returned tuple is used to properly nest children within parents in the table"
" of contents, and can also be used within the :py:meth:`_toc_entry_name` "
"method."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription._object_hierarchy_parts:7
msgid "This method must not be used outwith table of contents generation."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription._toc_entry_name:1
msgid "Returns the text of the table of contents entry for the object."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription._toc_entry_name:3
msgid ""
"This function is called once, in :py:meth:`run`, to set the name for the "
"table of contents entry (a special attribute ``_toc_name`` is set on the "
"object node, later used in "
"``environment.collectors.toctree.TocTreeCollector.process_doc().build_toc()``"
" when the table of contents entries are collected)."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription._toc_entry_name:9
msgid ""
"To support table of contents entries for their objects, domains must "
"override this method, also respecting the configuration setting "
"``toc_object_entries_show_parents``. Domains must also override "
":py:meth:`_object_hierarchy_parts`, with one (string) entry for each part of"
" the object's hierarchy. The result of this method is set on the signature "
"node, and can be accessed as ``sig_node['_toc_parts']`` for use within this "
"method. The resulting tuple is also used to properly nest children within "
"parents in the table of contents."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription._toc_entry_name:18
msgid ""
"An example implementations of this method is within the python domain "
"(:meth:`!PyObject._toc_entry_name`). The python domain sets the "
"``_toc_parts`` attribute within the :py:meth:`handle_signature()` method."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.add_target_and_index:1
msgid "Add cross-reference IDs and entries to self.indexnode, if applicable."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.add_target_and_index:3
msgid "*name* is whatever :meth:`handle_signature()` returned."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.after_content:1
msgid "Called after parsing content."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.after_content:3
msgid ""
"Used to reset information about the current directive context on the build "
"environment."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.before_content:1
msgid "Called before parsing content."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.before_content:3
msgid ""
"Used to set information about the current directive context on the build "
"environment."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.get_signatures:1
msgid "Retrieve the signatures to document from the directive arguments."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.get_signatures:3
msgid "By default, signatures are given as arguments, one per line."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.handle_signature:1
msgid "Parse the signature *sig*."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.handle_signature:3
msgid ""
"The individual nodes are then appended to *signode*. If ValueError is "
"raised, parsing is aborted and the whole *sig* is put into a single "
"desc_name node."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.handle_signature:7
msgid ""
"The return value should be a value that identifies the object.  It is passed"
" to :meth:`add_target_and_index()` unchanged, and otherwise only used to "
"skip duplicates."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:1
msgid ""
"Main directive entry function, called by docutils upon encountering the "
"directive."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:4
msgid ""
"This directive is meant to be quite easily subclassable, so it delegates to "
"several additional methods.  What it does:"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:7
msgid "find out if called as a domain-specific directive, set self.domain"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:8
msgid "create a `desc` node to fit all description inside"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:9
msgid "parse standard options, currently `no-index`"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:10
msgid "create an index node if needed as self.indexnode"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:11
msgid ""
"parse all given signatures (as returned by self.get_signatures()) using "
"self.handle_signature(), which should either return a name or raise "
"ValueError"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:14
msgid "add index entries using self.add_target_and_index()"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.run:15
msgid "parse the content and handle doc fields in it"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.transform_content:1
msgid "Can be used to manipulate the content."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/directives/__init__.pydocstring
#: of sphinx.directives.ObjectDescription.transform_content:3
msgid ""
"Called after creating the content through nested parsing, but before the "
"``object-description-transform`` event is emitted, and before the info-"
"fields are transformed."
msgstr ""

#: ../docstring of
#: sphinx.directives.ObjectDescription.final_argument_whitespace:1
msgid "May the final argument contain whitespace?"
msgstr ""

#: ../docstring of sphinx.directives.ObjectDescription.has_content:1
msgid "May the directive have content?"
msgstr ""

#: ../docstring of sphinx.directives.ObjectDescription.option_spec:1
msgid "Mapping of option names to validator functions."
msgstr ""

#: ../docstring of sphinx.directives.ObjectDescription.optional_arguments:1
msgid "Number of optional arguments after the required arguments."
msgstr ""

#: ../docstring of sphinx.directives.ObjectDescription.required_arguments:1
msgid "Number of required directive arguments."
msgstr ""

#: ../../sphinx/doc/extdev/domainapi.rst:27
msgid "Python Domain"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/python/__init__.pydocstring
#: of sphinx.domains.python.PythonDomain:1
msgid "Python language domain."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/python/__init__.pydocstring
#: of sphinx.domains.python.PythonDomain.note_object:1
msgid "Note a python object for cross reference."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/sphinx/domains/python/__init__.pydocstring
#: of sphinx.domains.python.PythonDomain.note_module:1
msgid "Note a python module for cross reference."
msgstr ""

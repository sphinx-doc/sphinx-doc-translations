# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Melia Lee <lixiuyu97@163.com>, 2023
# ws, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-05 06:32+0000\n"
"PO-Revision-Date: 2023-10-03 00:37+0000\n"
"Last-Translator: ws, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/usage/domains/index.rst:7
msgid "Domains"
msgstr "域"

#: ../../sphinx/doc/usage/domains/index.rst:11
msgid ""
"Originally, Sphinx was conceived for a single project, the documentation of "
"the Python language.  Shortly afterwards, it was made available for everyone"
" as a documentation tool, but the documentation of Python modules remained "
"deeply built in -- the most fundamental directives, like ``function``, were "
"designed for Python objects.  Since Sphinx has become somewhat popular, "
"interest developed in using it for many different purposes: C/C++ projects, "
"JavaScript, or even reStructuredText markup (like in this documentation)."
msgstr ""
"最初，Sphinx是为单个项目构思的，即Python语言的文档。不久之后，它作为一个文档工具开放给每个人，但Python模块的文档仍然内置 —— "
"最基本的指令，如“function”，是为Python对象设计的。由于Sphinx在某种程度上变得流行起来，人们对将它用于许多不同目的产生了兴趣：C/ "
"C++项目、JavaScript，甚至是重构文本标记（如本文档中所示）。"

#: ../../sphinx/doc/usage/domains/index.rst:19
msgid ""
"While this was always possible, it is now much easier to easily support "
"documentation of projects using different programming languages or even ones"
" not supported by the main Sphinx distribution, by providing a **domain** "
"for every such purpose."
msgstr ""
"虽然这一直都是可能的，但是现在，通过为每种目的提供一个 "
"**域**\\，可以更容易地支持使用不同编程语言（甚至是主Sphinx发行版不支持的语言）的项目文档。"

#: ../../sphinx/doc/usage/domains/index.rst:24
msgid ""
"A domain is a collection of markup (reStructuredText :term:`directive`\\ s "
"and :term:`role`\\ s) to describe and link to :term:`object`\\ s belonging "
"together, e.g. elements of a programming language.  Directive and role names"
" in a domain have names like ``domain:name``, e.g. ``py:function``.  Domains"
" can also provide custom indices (like the Python Module Index)."
msgstr ""
"域是一组标签（reStructuredText :term:`directive`\\ s and :term:`role`\\ s），用于描述和链接"
"  :term:`object`\\ s ，属于一起，例如编程语言的元素。域中的指令和角色名称具有诸如 domain:name 之类的名称，例如 "
"py:function 。域还可以提供自定义索引(例如Python模块索引)。一个域是一个标记的集合（reStructuredText "
":term:`指令` and :term:`角色`），用来描述和链接属于一起的 :term:`对象` "
"，例如编程语言的元素。域中的指令名和角色名有如下名称“domain:name”，例如“py:function”。域还可以提供自定义索引（如Python "
"模块索引）。"

#: ../../sphinx/doc/usage/domains/index.rst:30
msgid ""
"Having domains means that there are no naming problems when one set of "
"documentation wants to refer to e.g. C++ and Python classes.  It also means "
"that extensions that support the documentation of whole new languages are "
"much easier to write."
msgstr "拥有域意味着当一组文档引用（例如c++和Python类）时不会出现命名问题。这还意味着支持全新语言文档的扩展更容易编写。"

#: ../../sphinx/doc/usage/domains/index.rst:35
msgid ""
"This section describes what the domains that are included with Sphinx "
"provide. The domain API is documented as well, in the section :ref:`domain-"
"api`."
msgstr "本节描述Sphinx包含的域提供了什么。域API也被记录在 :ref:`domain-api`一节中。"

#: ../../sphinx/doc/usage/domains/index.rst:39
msgid "Built-in domains"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:41
msgid "The following domains are included within Sphinx:"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:56
msgid "Third-party domains"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:58
msgid "Several third-party domains are available as extensions, including:"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:60
msgid "`Ada <https://pypi.org/project/sphinxcontrib-adadomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:61
msgid "`Antlr4 <https://pypi.org/project/sphinx-syntax/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:62
msgid "`Bazel <https://pypi.org/project/sphinx-bazel/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:63
msgid "`BibTex <https://pypi.org/project/sphinxcontrib-bibtex/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:64
msgid "`Bison/YACC <https://pypi.org/project/sphinx-syntax/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:65
msgid "`Chapel <https://pypi.org/project/sphinxcontrib-chapeldomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:66
msgid "`CMake <https://pypi.org/project/sphinxcontrib-moderncmakedomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:67
msgid "`Common Lisp <https://pypi.org/project/sphinxcontrib-cldomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:68
msgid "`Erlang <https://pypi.org/project/sphinxcontrib-erlangdomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:69
msgid "`Fortran <https://pypi.org/project/sphinx-fortran/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:70
msgid "`GraphQL <https://pypi.org/project/graphqldomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:71
msgid "`Go <https://pypi.org/project/sphinxcontrib-golangdomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:72
msgid "`HTTP <https://pypi.org/project/sphinxcontrib-httpdomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:73
msgid "`Hy <https://pypi.org/project/sphinxcontrib-hydomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:74
msgid "`Lua <https://pypi.org/project/sphinx-lua-ls/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:75
msgid "`MATLAB <https://pypi.org/project/sphinxcontrib-matlabdomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:76
msgid "`PHP <https://pypi.org/project/sphinxcontrib-phpdomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:77
msgid "`Ruby <https://pypi.org/project/sphinxcontrib-rubydomain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:78
msgid "`Rust <https://pypi.org/project/sphinxcontrib-rust/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:79
msgid "`Verilog <https://pypi.org/project/sphinx-verilog-domain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:80
msgid "`VHDL <https://pypi.org/project/sphinx-vhdl/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:81
msgid "`Visual Basic <https://pypi.org/project/sphinx-vb-domain/>`__"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:83
msgid ""
"Other domains may be found on the Python Package Index (via the `Framework "
":: Sphinx :: Domain`__ classifier), `GitHub "
"<https://github.com/search?q=sphinx%20domain&type=repositories>`__, or "
"`GitLab <https://gitlab.com/explore/projects?name=sphinx%20domain>`__."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:107
msgid "Basic Markup"
msgstr "基本标记"

#: ../../sphinx/doc/usage/domains/index.rst:109
msgid ""
"Most domains provide a number of :dfn:`object description directives`, used "
"to describe specific objects provided by modules.  Each directive requires "
"one or more signatures to provide basic information about what is being "
"described, and the content should be the description."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:114
msgid ""
"A domain will typically keep an internal index of all entities to aid cross-"
"referencing. Typically, it will also add entries in the shown general index."
" If you want to suppress the addition of an entry in the shown index, you "
"can give the directive option flag ``:no-index-entry:``. If you want to "
"exclude the object description from the table of contents, you can give the "
"directive option flag ``:no-contents-entry:``. If you want to typeset an "
"object description, without even making it available for cross-referencing, "
"you can give the directive option flag ``:no-index:`` (which implies ``:no-"
"index-entry:``). If you do not want to typeset anything, you can give the "
"directive option flag ``:no-typesetting:``.  This can for example be used to"
" create only a target and index entry for later reference. Though, note that"
" not every directive in every domain may support these options."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:130
msgid ""
"The directive option ``noindexentry`` in the Python, C, C++, and Javascript "
"domains."
msgstr "指令选项“`noindexentry”在Python、C、C++和Javascript域。"

#: ../../sphinx/doc/usage/domains/index.rst:134
msgid ""
"The directive option ``:nocontentsentry:`` in the Python, C, C++, "
"Javascript, and reStructuredText domains."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:138
msgid ""
"The directive option ``no-typesetting`` in the Python, C, C++, Javascript, "
"and reStructuredText domains."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:144
msgid "The directive option ``:noindex:`` was renamed to ``:no-index:``."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:146
msgid ""
"The directive option ``:noindexentry:`` was renamed to ``:no-index-entry:``."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:148
msgid ""
"The directive option ``:nocontentsentry:`` was renamed to ``:no-contents-"
"entry:``."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:151
msgid ""
"The previous names are retained as aliases, but will be deprecated and "
"removed in a future version of Sphinx."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:155
msgid "An example using a Python domain directive::"
msgstr "使用Python域指令的一个例子::"

#: ../../sphinx/doc/usage/domains/index.rst:162
msgid ""
"This describes the two Python functions ``spam`` and ``ham``.  (Note that "
"when signatures become too long, you can break them if you add a backslash "
"to lines that are continued in the next line.  Example::"
msgstr "这描述了两个Python函数‘spam’和‘ham’。(请注意，当签名太长时，如果在下一行继续的行中添加一个反斜杠，可以将其断开。例如::"

#: ../../sphinx/doc/usage/domains/index.rst:170
msgid "(This example also shows how to use the ``:no-index:`` flag.)"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:172
msgid ""
"The domains also provide roles that link back to these object descriptions. "
"For example, to link to one of the functions described in the example above,"
" you could say ::"
msgstr "域还提供链接回这些对象描述的角色。例如，要链接到上面示例中描述的其中一个函数，您可以说："

#: ../../sphinx/doc/usage/domains/index.rst:178
msgid ""
"As you can see, both directive and role names contain the domain name and "
"the directive name."
msgstr "如您所见，指令和角色名称都包含域名和指令名称。"

#: ../../sphinx/doc/usage/domains/index.rst:181
msgid ""
"The directive option ``:no-typesetting:`` can be used to create a target "
"(and index entry) which can later be referenced by the roles provided by the"
" domain. This is particularly useful for literate programming:"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:199
msgid "Default Domain"
msgstr "默认域"

#: ../../sphinx/doc/usage/domains/index.rst:200
msgid ""
"For documentation describing objects from solely one domain, authors will "
"not have to state again its name at each directive, role, etc... after "
"having specified a default. This can be done either via the config value "
":confval:`primary_domain` or via this directive:"
msgstr ""
"对于仅从一个域描述对象的文档，作者在指定默认值后，不必再在每个指令，角色等处再次声明其名称。这可以通过配置值:confval:`primary_domain`或通过此指令来完成："

#: ../../sphinx/doc/usage/domains/index.rst:207
msgid ""
"Select a new default domain.  While the :confval:`primary_domain` selects a "
"global default, this only has an effect within the same file."
msgstr "选择一个新的默认域。虽然:confval:`primary_domain`选择全局默认值，但这只在同一个文件中有效。"

#: ../../sphinx/doc/usage/domains/index.rst:210
msgid ""
"If no other default is selected, the Python domain (named ``py``) is the "
"default one, mostly for compatibility with documentation written for older "
"versions of Sphinx."
msgstr "如果没有选择其他默认值，则Python域(名为“py”)是默认值，主要是为了与为旧版Sphinx编写的文档兼容。"

#: ../../sphinx/doc/usage/domains/index.rst:214
msgid ""
"Directives and roles that belong to the default domain can be mentioned "
"without giving the domain name, i.e. ::"
msgstr "属于默认域的指令和角色可以在不给出域名的情况下被提及，即::"

#: ../../sphinx/doc/usage/domains/index.rst:224
msgid "Cross-referencing syntax"
msgstr "交叉引用语法"

#: ../../sphinx/doc/usage/domains/index.rst:226
msgid ""
"For cross-reference roles provided by domains, the same :ref:`cross-"
"referencing modifiers <xref-modifiers>` exist as for general cross-"
"references. In short:"
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:231
msgid ""
"You may supply an explicit title and reference target: "
"``:py:mod:`mathematical functions <math>``` will refer to the ``math`` "
"module, but the link text will be \"mathematical functions\"."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:235
msgid ""
"If you prefix the content with an exclamation mark (``!``), no "
"reference/hyperlink will be created."
msgstr ""

#: ../../sphinx/doc/usage/domains/index.rst:238
msgid ""
"If you prefix the content with ``~``, the link text will only be the last "
"component of the target. For example, ``:py:meth:`~queue.Queue.get``` will "
"refer to ``queue.Queue.get`` but only display ``get`` as the link text."
msgstr ""
